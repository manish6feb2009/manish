create or replace PACKAGE BODY "WSC_LSI_PKG" IS

FUNCTION ISFINALBU(LEPR_LE VARCHAR2,RCV_LE VARCHAR2,AP_LEDGER VARCHAR2,AR_LEDGER VARCHAR2) RETURN VARCHAR2
IS
LV_ATTIBUTE2_P VARCHAR2(10);
LV_ATTIBUTE2_R VARCHAR2(10);
LV_PR_EMEA VARCHAR2(10);
LV_RC_EMEA VARCHAR2(10);
LV_PR_PRIORITY VARCHAR2(5);
LV_RC_PRIORITY VARCHAR2(5);

BEGIN
BEGIN
	select attribute2 
	INTO LV_ATTIBUTE2_P
	from WSC_AHCS_LSI_LOOKUP_T 
	where lookup_type='WSC_LSI_NETTING_RELATIONSHIPS'
	AND description=LEPR_LE
	AND TAG=RCV_LE;
	EXCEPTION	
		WHEN OTHERS THEN	
		   LV_ATTIBUTE2_P:= 'No';
END;	


BEGIN
   select attribute2 
   INTO LV_ATTIBUTE2_R
	from WSC_AHCS_LSI_LOOKUP_T 
	where lookup_type='WSC_LSI_NETTING_RELATIONSHIPS'
	AND description=RCV_LE
	AND TAG=LEPR_LE;
	EXCEPTION	
		WHEN OTHERS THEN	
		   LV_ATTIBUTE2_R:= 'No';
END;	


	LV_PR_EMEA := GetEMEA(AR_LEDGER);
	LV_RC_EMEA := GetEMEA(AP_LEDGER);
    LV_PR_PRIORITY :=ISPriorityBU(LEPR_LE);
    LV_RC_PRIORITY :=ISPriorityBU(RCV_LE);

IF LV_ATTIBUTE2_P='Yes' OR LV_ATTIBUTE2_R='Yes' OR (LV_PR_EMEA='No' AND LV_RC_EMEA='No' AND LV_PR_PRIORITY<0 AND LV_RC_PRIORITY<0) THEN 
  RETURN 'Yes';
ELSE
	RETURN 'No';
END IF;

END;


   Function GetNettingLE(LE VARCHAR2,AP_LEDGER VARCHAR2,AR_LEDGER VARCHAR2) RETURN VARCHAR2
   IS
   LV_NETTING_LE VARCHAR2(50);
   LV_PRIORITY NUMBER;
   LV_AP_EMEA VARCHAR2(10);
   LV_AR_EMEA VARCHAR2(10);
   BEGIN
    LV_PRIORITY := ISPriorityBU(LE);
    LV_AP_EMEA := GetEMEA(AP_LEDGER);
    LV_AR_EMEA := GetEMEA(AR_LEDGER);

    IF LV_PRIORITY < 0 AND LV_AP_EMEA='No' AND LV_AR_EMEA='No' THEN
        RETURN LE;
   ELSE
     select tag
	 into LV_NETTING_LE
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	 AND description=LE;

	 RETURN LV_NETTING_LE;
  END IF;
    EXCEPTION
        WHEN OTHERS THEN
          RETURN 'NO LE';  

	END; 

   Function GetNettingNettingLE(LE VARCHAR2) RETURN VARCHAR2
   IS
   LV_NETTING_LE VARCHAR2(50);

   BEGIN

     select tag
	 into LV_NETTING_LE
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	 AND description=LE;

	 RETURN LV_NETTING_LE;

     EXCEPTION
        WHEN OTHERS THEN
          RETURN 'NO LE';  

	END; 

   Function GetNettingLEDGER(LE VARCHAR2) RETURN VARCHAR2
   IS
   LV_NETTING_LEDGER VARCHAR2(50);
   BEGIN
     select LEDGER_NAME
	 into LV_NETTING_LEDGER
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	 AND description=LE;

	 RETURN LV_NETTING_LEDGER;

     EXCEPTION
        WHEN OTHERS THEN
          RETURN 'NO LEDGER';  

	END; 

    Function GetEMEA(LEDGER VARCHAR2) RETURN VARCHAR2
   IS
   LV_EMEA_FLAG VARCHAR2(10);
   BEGIN
     select 'Yes'
	 into LV_EMEA_FLAG
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_EMEA_LOOKUP'
	 AND description=LEDGER;

	 RETURN LV_EMEA_FLAG;

     EXCEPTION
        WHEN OTHERS THEN
          RETURN 'No';  

	END;  

     Function GetNettingFunCurr(LE VARCHAR2) RETURN VARCHAR2
   IS
   LV_NETTING_FUNCURR VARCHAR2(50);
   BEGIN
     select FUNCTIONAL_CURR
	 into LV_NETTING_FUNCURR
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	 AND description=LE;

	 RETURN LV_NETTING_FUNCURR;

     EXCEPTION
        WHEN OTHERS THEN
          RETURN 'NO CURRENCY SET';  

	END;


 Function ISNettingLEFinal(LE VARCHAR2,NETT_LE VARCHAR2,AP_LEDGER VARCHAR2,AR_LEDGER VARCHAR2) RETURN VARCHAR2
     IS
   ISFINAL VARCHAR2(5);

   BEGIN

   IF GetEMEA(AP_LEDGER) ='Yes' OR GetEMEA(AR_LEDGER)='Yes'  THEN
     select NVL(attribute1,'No')
	 into ISFINAL
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	 AND description=NETT_LE;
	ELSIF GetEMEA(AP_LEDGER) ='No' AND GetEMEA(AR_LEDGER)='No' AND  ISPriorityBU(LE)<0 THEN
		ISFINAL :='Yes';
	ELSE	
		ISFINAL :='No';
	END IF;

	 RETURN ISFINAL;

    EXCEPTION
     WHEN OTHERS THEN
       RETURN 'N';

	END; 



   Function ISPriorityBU(LE VARCHAR2) RETURN NUMBER
   IS
   ispriority NUMBER;

   BEGIN

     select to_number(meaning)
	 INTO ispriority
	 from wsc_ahcs_lsi_lookup_t
	 WHERE LOOKUP_TYPE='WSC_LSI_PRIORITY_NETTING_LE'
	 AND DESCRIPTION=LE;

       RETURN ispriority;
	 Exception
		WHEN OTHERS THEN
		  RETURN 0;
     END;	

Procedure LSI_SC1(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
					AP_EXCHANGE_RATE_TYPE 				VARCHAR2,
					AR_EXCHANGE_RATE_TYPE				VARCHAR2,
					RECORD_TYPE VARCHAR2,
					IC_TRX_NUMBER VARCHAR2,
					AP_INVOICE_ID NUMBER,
					AR_INVOICE_ID NUMBER,
                    AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
					ACCOUNTING_PERIOD VARCHAR2,
                    intercompany_batch_number_ap VARCHAR2) IS

                LV_FILE_NAME 	VARCHAR2(100);
                LV_AR_NETTING_RATE_SC4_1    NUMBER(38,30);
                LV_AR_NETTING_RATE_SC6_1    NUMBER(38,30);
                LV_ERR_MSG      VARCHAR2(200);
                LV_ERR_CODE     VARCHAR2(50);
				LV_HEADER_ID  NUMBER;
				LV_EXCH_RATE_EXCEP EXCEPTION;
                LV_ACC_DATE DATE;

BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

	---Step 3.1 Scenario 1
		INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(LSI_NETTING_ENTRY_ID,
        SCENARIO, 
        EVENT_TYPE,
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
        ACCOUNTING_DATE,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
        ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          'Scenario 1-Step 03',
          'LSI_LIABILITY_SWITCH',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),   
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  NETTING_AR_LE,
		  invoice_number_AP,
		  intercompany_batch_number_ap,
          P_BATCH_ID,
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
		  AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');

		  ---Step 3.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );



 IF functional_Currency_Code_AR != NETTING_AR_FUN_CURR THEN
    Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC4_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AR
      AND To_currency= NETTING_AR_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
      Exception
      WHEN OTHERS THEN
	     RAISE LV_EXCH_RATE_EXCEP;
	 END; 

ELSE
	LV_AR_NETTING_RATE_SC4_1 :=1;  
End IF;

		  --Step 4.1 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS	) VALUES
        ('Scenario 1-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		   case 
          when functional_Currency_Code_AR = NETTING_AR_FUN_CURR then
          NULL 
          else
          AR_EXCHANGE_RATE_TYPE
          end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );

		 --Step 4.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  -1*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR,
		  intercompany_legal_entity_AR,
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  intercompany_legal_entity_AR,
		  '0000',
		  '0000',
		  '0000',
		   case 
          when functional_Currency_Code_AR = NETTING_AR_FUN_CURR then
          NULL 
          else
          AR_EXCHANGE_RATE_TYPE
          end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );

		  ---Step 5.1 Scenario 1
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 05',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'), 
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		   '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );

		  ---Step 5.2 Scenario 1
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS	) VALUES
        ('Scenario 1-Step 05',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  NETTING_AP_LE,
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		   '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );

IF functional_Currency_Code_AP != NETTING_AP_FUN_CURR THEN 
Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC6_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AP
      AND To_currency= NETTING_AP_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
     Exception
      WHEN OTHERS THEN
         RAISE LV_EXCH_RATE_EXCEP;
	End;
ELSE 
  LV_AR_NETTING_RATE_SC6_1 :=1;
END IF;  


		  --Step 6.1 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS		) VALUES
        ('Scenario 1-Step 06',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC6_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP,
		  intercompany_legal_entity_AP,
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  intercompany_legal_entity_AP,
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');


		 --Step 6.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 06',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC6_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  -1*LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		 NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');


		--Step 7.1 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 07',
		  'AHCS FX for Final Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Other FX Acct',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  NETTING_AP_FUN_CURR,
		  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  ); 


		--Step 7.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 1-Step 07',
		  'AHCS FX for Final Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  NETTING_AP_FUN_CURR,
		  -1*(LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP),
		  NETTING_AP_FUN_CURR,
		  -1*(LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC6_1*accounted_invoice_amount_AP),
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  ); 

       commit;

	  	                 ---  LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

		/* Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit; */

                /* INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,---WSC_AHCS_LSI_LINE_SEQ.nextval,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
           --- AND NET.;
            commit */


EXCEPTION
   WHEN LV_EXCH_RATE_EXCEP THEN

     ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for(SC1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN

          LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);
          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

   /*     DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */


END;  

PROCEDURE LSI_SC2(AR_CCID                           VARCHAR2,                
                 P_BATCH_ID                          NUMBER,
                AR_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AR       NUMBER,
                INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                INVOICE_NUMBER_AP			      VARCHAR2,
                AP_CCID                           VARCHAR2,
                AP_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AP       NUMBER,
                INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                NETTING_AR_LE                     VARCHAR2,
                NETTING_AR_LEDGER                 VARCHAR2,
                AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AR_FUN_CURR               VARCHAR2,
                NETTING_AP_LE                     VARCHAR2,
                NETTING_AP_LEDGER                 VARCHAR2,
                AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AP_FUN_CURR               VARCHAR2,
				AP_EXCHANGE_RATE_TYPE 			  VARCHAR2,
				AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
				RECORD_TYPE						  VARCHAR2,
				IC_TRX_NUMBER 					  VARCHAR2,
				AP_INVOICE_ID                     NUMBER,
				AR_INVOICE_ID                     NUMBER,
                 AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
				ACCOUNTING_PERIOD                 VARCHAR2,
                intercompany_batch_number_ap      VARCHAR2) 
IS

	   LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	  --- LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	  --- LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER;
	   LV_FILE_NAME 	VARCHAR2(100);

       LV_AR_NETTING_RATE_SC4_1 NUMBER(38,30);
       LV_AR_NETTING_RATE_SC5_1 NUMBER(38,30);
       LV_AR_NETTING_RATE_SC7_1 NUMBER(38,30);
       LV_HEADER_ID   NUMBER;
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
	   LV_EXCH_RATE_EXCEP EXCEPTION;
	   LV_ACC_DATE DATE;
BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

      LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
      --LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
      --LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(NETTING_AP_LE);
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(NETTING_AR_LE);


INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  NETTING_AR_LE,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		   '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'		  
		  );

		  ---Step 3.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		   '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  );

IF functional_Currency_Code_AR!=NETTING_AR_FUN_CURR THEN
  Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC4_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AR
      AND To_currency= NETTING_AR_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
      Exception
      WHEN OTHERS THEN
      RAISE LV_EXCH_RATE_EXCEP;
  End;
  ELSE
	 LV_AR_NETTING_RATE_SC4_1 :=1;
End IF;

         	  --Step 4.1 Scenario 2
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  );

		 --Step 4.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  -1*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR,
		  intercompany_legal_entity_AR,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  intercompany_legal_entity_AR,
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'); 

IF LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU 
THEN  LV_AR_NETTING_RATE :=1;

ELSIF LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU and NETTING_AR_FUN_CURR!=NETTING_AP_FUN_CURR THEN
       Begin
          select conversion_rate
          into LV_AR_NETTING_RATE
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  NETTING_AR_FUN_CURR
          AND To_currency= Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
              RAISE LV_EXCH_RATE_EXCEP;
         End; 
ELSE		
        LV_AR_NETTING_RATE :=1;
END IF; 

IF functional_Currency_Code_AP!=NETTING_AP_FUN_CURR THEN
   Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC7_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AP
      AND To_currency= NETTING_AP_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
      Exception
      WHEN OTHERS THEN
       RAISE LV_EXCH_RATE_EXCEP;
   End; 
ELSE
	      LV_AR_NETTING_RATE_SC7_1 :=1;
END IF;   

		  --Step 5.1 Scenario 2
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 05',
		  'AHCS Proivder Netting to Receiver Netting',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END,
		  Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  NETTING_AR_FUN_CURR,
		  LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END),  
		  NETTING_AP_LE,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
           NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU  THEN
		  NULL 
		  when NETTING_AP_FUN_CURR= NETTING_AR_FUN_CURR then 
		  null 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');   	  

		  --Step 5.2 Scenario 2
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 05',
		  'AHCS Proivder Netting to Receiver Netting',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END,
		  Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  -1 * LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  -1 * LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  NETTING_AR_FUN_CURR,
		    LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  -1 * LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				 -1 * LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END),  
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
           NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU  THEN
		  NULL 
		  when NETTING_AP_FUN_CURR= NETTING_AR_FUN_CURR then 
		  null 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');   	 		  


		  ---Step 6.1 Scenario 1
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 06',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  );

		  ---Step 6.2 Scenario 1
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 06',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  NETTING_AP_LE,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  );
IF functional_Currency_Code_AP!=NETTING_AP_FUN_CURR THEN
   Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC7_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AP
      AND To_currency= NETTING_AP_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
      Exception
      WHEN OTHERS THEN
       RAISE LV_EXCH_RATE_EXCEP;
   End; 
ELSE
	      LV_AR_NETTING_RATE_SC7_1 :=1;
END IF;   


		  --Step 7.1 Scenario 2
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 07',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC7_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP,
		  intercompany_legal_entity_AP,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		   P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  intercompany_legal_entity_AP,
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');


		 --Step 6.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 07',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC7_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  -1 * accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  -1*LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
          NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  );

IF LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU and 
NETTING_AP_FUN_CURR!=NETTING_AR_FUN_CURR
THEN
Begin
  select conversion_rate
  into LV_AR_NETTING_RATE_SC5_1
  from WSC_AHCS_LSI_EXCHANGE_RATE_T
  Where From_Currency = Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END
  AND To_currency= NETTING_AP_FUN_CURR
  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
  AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
  Exception
  WHEN OTHERS THEN
		  RAISE LV_EXCH_RATE_EXCEP;
End;
ELSIF LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU 
then  LV_AR_NETTING_RATE_SC5_1 :=1;

ELSE LV_AR_NETTING_RATE_SC5_1 :=1;
END IF;



		  --Step 8.1 Scenario 2 
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 08',
		  'AHCS Receiver Netting to Proivder Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END,
		  /*LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END)*/
             Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  NETTING_AP_FUN_CURR,
		  /*LV_AR_NETTING_RATE_SC5_1 * LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END)*/
             LV_AR_NETTING_RATE_SC5_1 * Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				   LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,  
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case
           WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU and NETTING_AR_FUN_CURR= NETTING_AP_FUN_CURR THEN 
            NULL
           WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
            NULL
           ELSE AR_EXCHANGE_RATE_TYPE 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'
		  ); 

		  --Step 9.2 Scenario 2
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 08',
		  'AHCS Receiver Netting to Proivder Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  Case 
			  When LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN
			      NETTING_AR_FUN_CURR
			  ELSE
			      NETTING_AP_FUN_CURR
			  END,
		 /* -1 * LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END)*/
           -1* Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  NETTING_AP_FUN_CURR,
		  /*-1 * LV_AR_NETTING_RATE_SC5_1 * LV_AR_NETTING_RATE * (Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL  
			END)*/
           -1* LV_AR_NETTING_RATE_SC5_1 * Case
				WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU THEN 
				  LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
				WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
				  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,  
		  NETTING_AR_LE,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		   Case
           WHEN LV_AR_IS_PRIORITY_BU <= LV_AP_IS_PRIORITY_BU and NETTING_AR_FUN_CURR= NETTING_AP_FUN_CURR THEN 
            NULL
           WHEN LV_AR_IS_PRIORITY_BU > LV_AP_IS_PRIORITY_BU THEN  
            NULL
           ELSE AP_EXCHANGE_RATE_TYPE 
          End,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'); 

		--Step 9.1 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 09',
		  'AHCS FX for Final Netting',
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_LE
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_LE
          End, 
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_LEDGER
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_LEDGER
          End,
          'AHCS Other FX Acct',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_FUN_CURR
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_FUN_CURR
          End,
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
          End,
          ---(AR_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AR - AP_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AP),
		  Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU) THEN 
            NETTING_AP_FUN_CURR
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_FUN_CURR
          End,
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            --LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
             LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
           -- LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE*accounted_invoice_amount_AP
           LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
          End,
          --AR_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AR - AP_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AP,
          '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		   Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU) THEN 
            NETTING_AP_LE
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU) THEN  
            NETTING_AR_LE
          End,
		   '4120',
		   'XXX',
		  '0000',
		  '00000',
          '0000',
		   '0000',
		  '0000',
		  '0000',		   
		 Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU) THEN 
            NULL
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU) THEN  
            NULL
           ELSE NULL 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'         		  
		  );   	  


		  --Step 9.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
        ID2,
        ID3,
        ID4,
        ID5,
        ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 2-Step 09',
		  'AHCS FX for Final Netting',
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_LE
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_LE
          End, 
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_LEDGER
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_LEDGER
          End,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
           Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_FUN_CURR
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_FUN_CURR
          End,
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
           -- LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
           -1 * (LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP)
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
           -- LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE*accounted_invoice_amount_AP
           -1 *( LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP)
          End,
		 --- -1*(AR_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AR - AP_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AP),
           Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NETTING_AP_FUN_CURR
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NETTING_AR_FUN_CURR
          End,
          Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
           -- LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP
            -1 * ( LV_AR_NETTING_RATE_SC5_1 *LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP)
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            --LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE*accounted_invoice_amount_AP
            -1 * (LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR -  LV_AR_NETTING_RATE*LV_AR_NETTING_RATE_SC7_1*accounted_invoice_amount_AP)
          End,
		  ----1*(AR_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AR - AP_EXCHANGE_RATE_NETTING*accounted_invoice_amount_AP), 
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		 Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU) THEN 
            NETTING_AP_LE
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU) THEN  
            NETTING_AR_LE
          End,
		   '4120',
		   'XXX',
		  '0000',
		  '00000',
          '0000',
		   '0000',
		  '0000',
		  '0000',		   
		  Case
           WHEN (LV_AP_IS_PRIORITY_BU) < (LV_AR_IS_PRIORITY_BU)  THEN 
            NULL
           WHEN (LV_AP_IS_PRIORITY_BU) >= (LV_AR_IS_PRIORITY_BU)  THEN  
            NULL
           ELSE NULL 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
          AP_INVOICE_ID,
          AR_INVOICE_ID,
          AP_ID2,
          AR_ID2,
          AP_ID3,
          AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'   
		  );   	  

          commit;

	--LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;	      */

                   /*     INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */


EXCEPTION

    WHEN LV_EXCH_RATE_EXCEP THEN

      ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*    DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
          LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);
          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;	

  /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;

PROCEDURE LSI_SC3( AR_CCID                           VARCHAR2,                    
                    P_BATCH_ID                         NUMBER, 
                    AR_LEDGER                         VARCHAR2,
                    FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                    ACCOUNTED_INVOICE_AMOUNT_AR       NUMBER,
                    INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                    INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                    INVOICE_NUMBER_AP			      VARCHAR2,
                    AP_CCID                           VARCHAR2,
                    AP_LEDGER                         VARCHAR2,
                    FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                    ACCOUNTED_INVOICE_AMOUNT_AP       NUMBER,
                    INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                    INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                    NETTING_AR_LE                     VARCHAR2,
                    NETTING_AR_LEDGER                 VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                    NETTING_AR_FUN_CURR               VARCHAR2,
                    NETTING_AP_LE                     VARCHAR2,
                    NETTING_AP_LEDGER                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                   NETTING_AP_FUN_CURR               VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE 		  VARCHAR2,
					AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
					RECORD_TYPE						  VARCHAR2,
					IC_TRX_NUMBER 					  VARCHAR2,
					AP_INVOICE_ID                     NUMBER,
					AR_INVOICE_ID                     NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
					ACCOUNTING_PERIOD                 VARCHAR2,
                    intercompany_batch_number_ap       VARCHAR2) 
IS
	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	   --LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	   --LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER;
       LV_FILE_NAME 	VARCHAR2(100);
       LV_AR_NETTING_RATE_SC4_1 NUMBER(38,30);
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
        LV_HEADER_ID   NUMBER;
		 LV_EXCH_RATE_EXCEP EXCEPTION;
		 LV_ACC_DATE DATE;
BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

      LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
      --LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
      --LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AP_CCID,1,instr(AP_CCID,'.',1)-1));
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AR_CCID,1,instr(AR_CCID,'.',1)-1));

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT1',intercompany_batch_number_ap,LV_ACC_DATE );

INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 03',
        Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		     'AHCS Receiver to Provider'
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            'AHCS Provider to Receiver'
            ELSE
             NULL
         end, 
         Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  AR_LEDGER
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  AP_LEDGER
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  'AHCS IC AP'
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  'AHCS IC AR'
                ELSE
                 NULL
			END, 
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
          Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				   functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				   functional_Currency_Code_AP
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  -1*accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  functional_Currency_Code_AP
                ELSE
                 NULL
			END, 
		   1 * Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				   -1*accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		  Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
           WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          End,
		  '4120',
		  'XXX',
		   '0000',
		  '00000',
		   Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  '0000',
		  '0000',
		  '0000',
		  Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
            NULL
           WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            NULL
           ELSE NULL 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'		  
		  );

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT2',intercompany_batch_number_ap,LV_ACC_DATE );
		  ---Step 3.2 Scenario 3
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 03',
		  Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		     'AHCS Receiver to Provider'
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            'AHCS Provider to Receiver'
            ELSE
             NULL
         end,
		 Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  AR_LEDGER
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  AP_LEDGER
                ELSE
                 NULL
			END,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		   Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				   functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				   functional_Currency_Code_AP
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  -1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				  functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				  functional_Currency_Code_AP
                ELSE
                 NULL
			END, 
		    Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  -1*accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
           WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          End,
		  '4120',
		  'XXX',
		   '0000',
		  '00000',
		   '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');

IF  functional_Currency_Code_AR !=  functional_Currency_Code_AP 
THEN
 Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC4_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency =  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				   functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				   functional_Currency_Code_AP
                ELSE
                 NULL
			END
      AND To_currency= Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  functional_Currency_Code_AP
                ELSE
                 NULL
			END
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type= Case
        WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
                NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate')
        WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN
                NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate')
        END;
      Exception
      WHEN OTHERS THEN
        RAISE LV_EXCH_RATE_EXCEP;
 End;
 ELSE LV_AR_NETTING_RATE_SC4_1 :=1;
 END IF;

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT3',intercompany_batch_number_ap,LV_ACC_DATE );
		  ---Scenario 3 Step 4.1 
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 04',
         Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		     'AHCS Provider to Receiver'
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             'AHCS Receiver to Provider'
            ELSE
             NULL
         end, 
         Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  AR_LEDGER
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  AP_LEDGER
                ELSE
                 NULL
			END,
           'AHCS Cash Clearing', 
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1,
		  'IC Clearing AP AR-IC Clearing AP AR',
          Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				   functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				   functional_Currency_Code_AP
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  -1*accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  functional_Currency_Code_AP
                ELSE
                 NULL
			END, 
		   LV_AR_NETTING_RATE_SC4_1 * Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				   -1*accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= functional_Currency_Code_AR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT4',intercompany_batch_number_ap,LV_ACC_DATE );
		  ---Step 4.2 Scenario 1
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 04',
		  Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		     'AHCS Provider to Receiver'
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             'AHCS Receiver to Provider'
            ELSE
             NULL
         end, 
         Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  AR_LEDGER
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  AP_LEDGER
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  'AHCS IC AR'
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  'AHCS IC AP'
                ELSE
                 NULL
			END,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1,
		  'AHCS IC AR AP-AHCS IC AR AP',
          Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
				   functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
				   functional_Currency_Code_AP
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				   accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  -1 * accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
           Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  functional_Currency_Code_AR
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  functional_Currency_Code_AP
                ELSE
                 NULL
			END, 
		   LV_AR_NETTING_RATE_SC4_1 * Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				   accounted_invoice_amount_AP
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  -1 * accounted_invoice_amount_AR
                ELSE
                 NULL
			END,
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  Case
				WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN 
				  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
				WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
				  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
                ELSE
                 NULL
			END,
		  '0000',
		  '0000',
		  '0000',
		   Case 
		  when functional_Currency_Code_AP= functional_Currency_Code_AR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI');

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT5',intercompany_batch_number_ap,LV_ACC_DATE );
		  ---Scenario 3 Step 5.1 
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 05',
		  'AHCS FX for Provider',
           Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
            ELSE
             NULL
         end,
         Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      AR_LEDGER
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             AP_LEDGER
            ELSE
             NULL
         end,
		  'AHCS Other FX Acct',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      functional_Currency_Code_AR
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             functional_Currency_Code_AP
            ELSE
             NULL
         end,
          Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AP
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
              LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP
            ELSE
             NULL
         end,
          Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      functional_Currency_Code_AR
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             functional_Currency_Code_AP
            ELSE
             NULL
         end,
		   Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		       accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AP
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
                LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP
            ELSE
             NULL
         end,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		 Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
            ELSE
             NULL
         end,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
            NULL
           WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
            NULL
           ELSE NULL 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'		
		  );

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT6',intercompany_batch_number_ap,LV_ACC_DATE );
		  ---Step 5.2 Scenario 3
		   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
        ACCOUNTING_DATE,
		EVENT_CLASS) VALUES
        ('Scenario 3-Step 05',
		  'AHCS FX for Provider',
           Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
            ELSE
             NULL
         end,
         Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      AR_LEDGER
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             AP_LEDGER
            ELSE
             NULL
         end,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      functional_Currency_Code_AR
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             functional_Currency_Code_AP
            ELSE
             NULL
         end,
         -1* Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		     ( accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AP)
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             (  LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP)
            ELSE
             NULL
         end,
          Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		      functional_Currency_Code_AR
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
             functional_Currency_Code_AP
            ELSE
             NULL
         end,
		  -1* Case
			WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN
		       (accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AP)
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
              ( LV_AR_NETTING_RATE_SC4_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP)
            ELSE
             NULL
         end,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
		  Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AP_CCID,1,instr(AP_CCID,'.',1)-1)
           WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
            substr(AR_CCID,1,instr(AR_CCID,'.',1)-1)
          End,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000', 
		  '0000',
		  '0000',
		  '0000',
		  Case
          WHEN abs(LV_AR_IS_PRIORITY_BU) > abs(LV_AP_IS_PRIORITY_BU) THEN 
            NULL
           WHEN abs(LV_AR_IS_PRIORITY_BU) <= abs(LV_AP_IS_PRIORITY_BU) THEN  
            NULL
           ELSE NULL 
          End,
          LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  'ORACLE_LSI'	
		  ); 

       commit;  
   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'merge1',intercompany_batch_number_ap,LV_ACC_DATE );
	   	--	 LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'MERGE2',intercompany_batch_number_ap,LV_ACC_DATE );

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;        */

        /*                INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
                                                        LINE_ID ,
                                                        APPLICATION,
                                                        FILE_NAME,
                                                        BATCH_ID ,
                                                        STATUS ,
                                                        ACCOUNTING_STATUS ,
                                                        CR_DR_INDICATOR,
                                                        CURRENCY,
                                                        VALUE ,
                                                        SOURCE_COA,
                                                        TARGET_COA,
                                                        ATTRIBUTE2,
                                                        CREATED_BY,
                                                        CREATED_DATE,
                                                        LAST_UPDATED_BY,
                                                        LAST_UPDATED_DATE,
                                                        ATTRIBUTE11,
                                                        ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */


EXCEPTION
  WHEN LV_EXCH_RATE_EXCEP THEN

     dbms_output.put_line(dbms_utility.format_error_backtrace);
    ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC3) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 		 LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC3) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit; 

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;		  

PROCEDURE LSI_SC4_1(AR_CCID                          VARCHAR2,             
                P_BATCH_ID                        VARCHAR2,
                AR_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AR       VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                INVOICE_NUMBER_AP			      VARCHAR2,
                AP_CCID                           VARCHAR2,
                AP_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AP       NUMBER,
                INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                NETTING_AR_LE                     VARCHAR2,
                NETTING_AR_LEDGER                 VARCHAR2,
                AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AR_FUN_CURR               VARCHAR2,
                NETTING_AP_LE                     VARCHAR2,
                NETTING_AP_LEDGER                 VARCHAR2,
                AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AP_FUN_CURR               VARCHAR2,
                ENTERED_INVOICE_AMOUNT_AP         NUMBER,
				AP_EXCHANGE_RATE_TYPE 		  VARCHAR2,
			    AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
				RECORD_TYPE						  VARCHAR2,
				IC_TRX_NUMBER 					  VARCHAR2,
				AP_INVOICE_ID                     NUMBER,
				AR_INVOICE_ID                     NUMBER,
                 AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
				ACCOUNTING_PERIOD                 VARCHAR2,
                intercompany_batch_number_ap    VARCHAR2) 
IS

	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	   --LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	   --LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER(38,30);
       LV_AR_NETTING_RATE_SC4_1 NUMBER(38,30);
       LV_FILE_NAME 	VARCHAR2(100);
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
       LV_HEADER_ID NUMBER;
	   LV_EXCH_RATE_EXCEP EXCEPTION;
	   LV_ACC_DATE DATE;

BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

      LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
      --LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
      --LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AP_CCID,1,instr(AP_CCID,'.',1)-1));
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AR_CCID,1,instr(AR_CCID,'.',1)-1));


INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 03',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

	---Scenario 4.1 Step 3.2
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 03',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));
IF functional_Currency_Code_AP!=functional_Currency_Code_AR THEN
	  Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC4_1
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AP
          AND To_currency=  functional_Currency_Code_AR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;   
ELSE
		  LV_AR_NETTING_RATE_SC4_1 :=1;
END IF;		  


	---Scenario 4.1 Step 4.1 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 04',
		  'AHCS for Receiver Netting to Receiver',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1,
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= functional_Currency_Code_AR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

	---Scenario 4.1 Step 4.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 04',
		  'AHCS for Receiver Netting to Receiver',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  functional_Currency_Code_AR, 
		  -1*accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= functional_Currency_Code_AR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

 	---Scenario 4.1 Step 5.1 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 05',
		  'AHCS FX for Provider',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Other FX Acct',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR - (accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1),
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR - (accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1),
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

	---Scenario 4.1 Step 5.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
        ACCOUNTING_DATE) VALUES
        ('Scenario 4.1-Step 05',
		  'AHCS FX for Provider',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		   (accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1-accounted_invoice_amount_AR) ,
		  functional_Currency_Code_AR,
		   (accounted_invoice_amount_AP*LV_AR_NETTING_RATE_SC4_1-accounted_invoice_amount_AR) ,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
          TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));          
        commit;  

	-- LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;   */

     /*                   INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */



EXCEPTION
    WHEN LV_EXCH_RATE_EXCEP THEN

      ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC4.1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 		 LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC4.1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;   

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;



PROCEDURE LSI_SC4_2(AR_CCID                           VARCHAR2,    
                    P_BATCH_ID  					  VARCHAR2,
                    AR_LEDGER                         VARCHAR2,
                    FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                    ACCOUNTED_INVOICE_AMOUNT_AR       NUMBER,
                    INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                    INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                    INVOICE_NUMBER_AP			      VARCHAR2,
                    AP_CCID                           VARCHAR2,
                    AP_LEDGER                         VARCHAR2,
                    FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                    ACCOUNTED_INVOICE_AMOUNT_AP       NUMBER,
                    INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                    INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                    NETTING_AR_LE                     VARCHAR2,
                    NETTING_AR_LEDGER                 VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                    NETTING_AR_FUN_CURR               VARCHAR2,
                    NETTING_AP_LE                     VARCHAR2,
                    NETTING_AP_LEDGER                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                    NETTING_AP_FUN_CURR               VARCHAR2,
					AP_EXCHANGE_RATE_TYPE 		      VARCHAR2,
					AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
					RECORD_TYPE						  VARCHAR2,
					IC_TRX_NUMBER 					  VARCHAR2,
					AP_INVOICE_ID                     NUMBER,
					AR_INVOICE_ID                     NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
					ACCOUNTING_PERIOD                 VARCHAR2,
					intercompany_batch_number_ap     VARCHAR2) 
IS

	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	   --LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	   --LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER(38,30);
       LV_AR_NETTING_RATE_SC4_2 NUMBER(38,30);
       LV_FILE_NAME 	VARCHAR2(100);
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
       LV_HEADER_ID  NUMBER;
	    LV_EXCH_RATE_EXCEP EXCEPTION;
		LV_ACC_DATE DATE;

BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

     LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
      --LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
      ---LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AP_CCID,1,instr(AP_CCID,'.',1)-1));
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AR_CCID,1,instr(AR_CCID,'.',1)-1));


	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
	    ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE
		) VALUES
        ('Scenario 4.2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD')
		  ); 

	---Scenario 4.2 Step 3.2
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE) VALUES
        ('Scenario 4.2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',
          substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

IF functional_Currency_Code_AR!=functional_Currency_Code_AP THEN
	 Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC4_2
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AR
          AND To_currency=  functional_Currency_Code_AP
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;
ELSE 
	 LV_AR_NETTING_RATE_SC4_2 :=1;
END IF;
	 ---Scenario 4.2 Step 4.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE) VALUES
        ('Scenario 4.2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_2, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC4_2,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		 '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AR= functional_Currency_Code_AP
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));

	---Scenario 4.2 Step 4.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE) VALUES
        ('Scenario 4.2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC4_2, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC4_2,
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AR= functional_Currency_Code_AP
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  TO_CHAR(LV_ACC_DATE,'YYYY-MM-DD'));			  

	 ---Scenario 4.2 Step 5.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE) VALUES
        ('Scenario 4.2-Step 05',
		  'AHCS FX for Receiver',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Other FX Acct',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  functional_Currency_Code_AP,
		  (accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC4_2)-accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  (accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC4_2)-accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD')
		  );

	---Scenario 4.2 Step 5.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
		LSI_NETTING_ENTRY_ID,
		EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS,
		ACCOUNTING_DATE) VALUES
        ('Scenario 4.2-Step 05',
		  'AHCS FX for Receiver',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		   accounted_invoice_amount_AP-(LV_AR_NETTING_RATE_SC4_2*accounted_invoice_amount_AR),
          functional_Currency_Code_AP,
		    accounted_invoice_amount_AP-(LV_AR_NETTING_RATE_SC4_2*accounted_invoice_amount_AR),
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_ap,
		  P_BATCH_ID,
		  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
		  'LSI_LIABILITY_SWITCH',		  
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'));

        commit;

      --   LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'||  NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;  */

        /*                INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */



 EXCEPTION
    WHEN LV_EXCH_RATE_EXCEP THEN

      ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC4.2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 		 LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC4.2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;  

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;                       


PROCEDURE LSI_SC5_1(P_BATCH_ID                   NUMBER,
                AR_CCID                           VARCHAR2,    
                AR_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AR       NUMBER,
                INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                INVOICE_NUMBER_AP			      VARCHAR2,
                INVOICE_NUMBER_AR                 VARCHAR2,
                AP_CCID                           VARCHAR2,
                AP_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AP       VARCHAR2,
                INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                NETTING_AR_LE                     VARCHAR2,
                NETTING_AR_LEDGER                 VARCHAR2,
                AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AR_FUN_CURR               VARCHAR2,
                NETTING_AP_LE                     VARCHAR2,
                NETTING_AP_LEDGER                 VARCHAR2,
                AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AP_FUN_CURR               VARCHAR2,
				AP_EXCHANGE_RATE_TYPE 		      VARCHAR2,
				AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
				RECORD_TYPE						  VARCHAR2,
				IC_TRX_NUMBER 					  VARCHAR2,
				AP_INVOICE_ID                     NUMBER,
				AR_INVOICE_ID                     NUMBER,
                 AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
				ACCOUNTING_PERIOD                 VARCHAR2) 
IS

	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	  -- LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	   --LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER(38,30);
       LV_AR_NETTING_RATE_51    NUMBER(38,30);
       LV_AR_NETTING_RATE_SC5_2 NUMBER(38,30);
       LV_AP_NETTING_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_IS_PRIORITY_BU NUMBER;
       LV_FILE_NAME 	VARCHAR2(100);
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
       LV_HEADER_ID  NUMBER;
	  LV_EXCH_RATE_EXCEP EXCEPTION;
	  LV_ACC_DATE DATE;
BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE
 FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

      LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
      --LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
      --LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AP_CCID,1,instr(AP_CCID,'.',1)-1));
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AR_CCID,1,instr(AR_CCID,'.',1)-1));
	  LV_AP_NETTING_IS_PRIORITY_BU := WSC_LSI_PKG.ISPriorityBU(NETTING_AP_LE);
	  LV_AR_NETTING_IS_PRIORITY_BU := WSC_LSI_PKG.ISPriorityBU(NETTING_AR_LE);


INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 03',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'); 

	---Scenario 5.1 Step 3.2
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 03',
		  'AHCS for Receiver to Receiver Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  NETTING_AP_LE,
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');

If functional_Currency_Code_AP!=NETTING_AP_FUN_CURR THEN
          Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_2
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AP
          AND To_currency=  NETTING_AP_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;  
ELSE LV_AR_NETTING_RATE_SC5_2 :=1;
END IF;


	 ---Scenario 5.1 Step 4.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 04',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS IC AR',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_2, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AP,
		  accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,  
		  LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );


	---Scenario 5.1 Step 4.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 04',
		  'AHCS for Receiver Netting to Receiver',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_2, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AP,
		  -1*accounted_invoice_amount_AP,
		  NETTING_AP_FUN_CURR,
		  -1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		   Case 
		  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
		  then
		  NULL 
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );


IF (NETTING_AP_FUN_CURR !=functional_Currency_Code_AR and abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)) OR 
(NETTING_AR_FUN_CURR !=functional_Currency_Code_AR and abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU))
THEN
         Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_51
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency= Case 
			  WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
			      NETTING_AP_FUN_CURR
			  ELSE
			      NETTING_AR_FUN_CURR
			  END
          AND To_Currency =  functional_Currency_Code_AR    
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
        Exception
            When OTHERS THEN
                RAISE LV_EXCH_RATE_EXCEP;
        END; 
ELSE 		
                LV_AR_NETTING_RATE_51 :=1;
END IF;

	 ---Scenario 5.1 Step 5.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 05',
		  'AHCS for Provider Netting to Receiver Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_51, 
		  'AHCS IC AR AP-AHCS IC AR AP', 	  
		   Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
            NETTING_AP_FUN_CURR
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
            NETTING_AR_FUN_CURR
          End,
          Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		   LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP          
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
           accounted_invoice_amount_AR            
          End,
          functional_Currency_Code_AR,  
		  LV_AR_NETTING_RATE_51 * Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		    LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP         
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             accounted_invoice_amount_AR 
          End,
		  NETTING_AP_LE,
		  invoice_number_AR,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		 substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		 NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU) and NETTING_AP_FUN_CURR= functional_Currency_Code_AR 
		  then NULL 
		  when abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU) and NETTING_AR_FUN_CURR= functional_Currency_Code_AR 
		  then NULL
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');

	---Scenario 5.1 Step 5.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
        ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 05',
		  'AHCS for Provider Netting to Receiver Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_51, 
		  'IC Clearing AP AR-IC Clearing AP AR', 	  
		   Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
           NETTING_AP_FUN_CURR 
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             NETTING_AR_FUN_CURR
          End,
          -1 *Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		       LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
           accounted_invoice_amount_AR
          End,
          functional_Currency_Code_AR,  
		  -1 * LV_AR_NETTING_RATE_51 * Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		       LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
           accounted_invoice_amount_AR
          End,
		 '0000',
		  invoice_number_AR,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		 substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		 '0000',
		  '0000',
		  '0000',
		  '0000',
		   Case 
		  when abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU) and NETTING_AP_FUN_CURR= functional_Currency_Code_AR 
		  then NULL 
		  when abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU) and NETTING_AR_FUN_CURR= functional_Currency_Code_AR 
		  then NULL
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI' );  

       	 ---Scenario 5.1 Step 6.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES  
        ('Scenario 5.1-Step 06',
		  'AHCS for Receiver Netting to Provider Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',  
		   NETTING_AP_FUN_CURR, 
           Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		     LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              accounted_invoice_amount_AR            
          End,
          NETTING_AP_FUN_CURR,  --Manish
		 Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		     LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              accounted_invoice_amount_AR            
          End,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  );

	---Scenario 5.1 Step 6.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 06',
		  'AHCS for Receiver Netting to Provider Netting',
		  NETTING_AP_LE,
		  NETTING_AP_LEDGER,
		  'AHCS IC AP',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS IC AR AP-AHCS IC AR AP',  
		   NETTING_AP_FUN_CURR, 
           -1 * Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		      LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP       
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
               accounted_invoice_amount_AR            
          End,
          NETTING_AP_FUN_CURR,  
		   -1 *  Case
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
		     LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP       
         WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
               accounted_invoice_amount_AR            
          End,
		  NETTING_AR_LE,
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AP_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');  

		--Scenario 5.1 Step 7.1 
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 07',
		  'AHCS FX for Provider Netting',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
             LV_AP_NETTING_LE
          End,
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_LEDGER
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AP_LEDGER
          End,
		  'AHCS Other FX Acct',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		 Case
		   WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN
              accounted_invoice_amount_AR - LV_AR_NETTING_RATE_51* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP       
		 WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
                accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP            
          End, 
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		 Case
		   WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN
              accounted_invoice_amount_AR - LV_AR_NETTING_RATE_51* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
		 WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
            accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP            
          End, 
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_AP,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             LV_AP_NETTING_LE
          End,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NULL
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             NULL
           ELSE NULL 
          End,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'		 
		  ); 


		--Step 7.2 Scenario 1
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.1-Step 07',
		  'AHCS FX for Provider Netting',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
             LV_AP_NETTING_LE
          End,
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_LEDGER
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AP_LEDGER
          End,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		-1*Case
		   WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN
           accounted_invoice_amount_AR - LV_AR_NETTING_RATE_51* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
		 WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
			accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP           
          End, 
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		-1*Case
		   WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN
            accounted_invoice_amount_AR - LV_AR_NETTING_RATE_51* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP        
		 WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
			 accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP            
          End, 
		  '0000',
		  invoice_number_AP,
          intercompany_batch_number_AP,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		 Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             LV_AP_NETTING_LE
          End,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NULL
          WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             NULL
           ELSE NULL 
          End,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'		 
		  ); 
       commit;

--LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;   */

    /*                    INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit;*/



EXCEPTION

      WHEN LV_EXCH_RATE_EXCEP THEN

      ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC5.1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

      /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
         LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC5.1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;  

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;


PROCEDURE LSI_SC5_2(P_BATCH_ID					  NUMBER,
				AR_CCID                           VARCHAR2,    
                AR_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AR       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AR       NUMBER,
                INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AR      VARCHAR2,
                INTERCOMPANY_TRANSACTION_TYPE_AR  VARCHAR2,
                INVOICE_NUMBER_AP			      VARCHAR2,
                INVOICE_NUMBER_AR                 VARCHAR2,
                AP_CCID                           VARCHAR2,
                AP_LEDGER                         VARCHAR2,
                FUNCTIONAL_CURRENCY_CODE_AP       VARCHAR2,
                ACCOUNTED_INVOICE_AMOUNT_AP       NUMBER,
                INTERCOMPANY_TRANSACTION_TYPE_AP  VARCHAR2,
                INTERCOMPANY_LEGAL_ENTITY_AP      VARCHAR2,
                NETTING_AR_LE                     VARCHAR2,
                NETTING_AR_LEDGER                 VARCHAR2,
                AR_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AR_FUN_CURR               VARCHAR2,
                NETTING_AP_LE                     VARCHAR2,
                NETTING_AP_LEDGER                 VARCHAR2,
                AP_EXCHANGE_RATE_NETTING          VARCHAR2,
                NETTING_AP_FUN_CURR               VARCHAR2,
				AP_EXCHANGE_RATE_TYPE 		      VARCHAR2,
				AR_EXCHANGE_RATE_TYPE			  VARCHAR2,
				RECORD_TYPE						  VARCHAR2,
				IC_TRX_NUMBER 					  VARCHAR2,
				AP_INVOICE_ID                     NUMBER,
				AR_INVOICE_ID                     NUMBER,
                 AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
				ACCOUNTING_PERIOD                 VARCHAR2) 
IS

	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
	  -- LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	  -- LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER(38,30);
       LV_AR_NETTING_RATE_51    NUMBER(38,30);
       LV_AR_NETTING_RATE_SC5_2 NUMBER(38,30);
	   LV_AP_NETTING_IS_PRIORITY_BU NUMBER;
	   LV_AR_NETTING_IS_PRIORITY_BU NUMBER;
       LV_FILE_NAME 	VARCHAR2(100);
       LV_ERR_MSG      VARCHAR2(200);
       LV_ERR_CODE     VARCHAR2(50);
       LV_HEADER_ID  NUMBER;
	   LV_EXCH_RATE_EXCEP EXCEPTION;
	   LV_ACC_DATE DATE;
BEGIN

	BEGIN
	SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END;

	  LV_AP_NETTING_LE := NETTING_AP_LE;
   	  LV_AR_NETTING_LE := NETTING_AR_LE;
--      LV_AP_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AP_LE);
--      LV_AR_NETTING_LE_FINAL := WSC_LSI_PKG.ISNettingLEFinal(NETTING_AR_LE);
      LV_AP_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AP_CCID,1,instr(AP_CCID,'.',1)-1));
      LV_AR_IS_PRIORITY_BU :=WSC_LSI_PKG.ISPriorityBU(substr(AR_CCID,1,instr(AR_CCID,'.',1)-1));
	  LV_AP_NETTING_IS_PRIORITY_BU := WSC_LSI_PKG.ISPriorityBU(NETTING_AP_LE);
	  LV_AR_NETTING_IS_PRIORITY_BU := WSC_LSI_PKG.ISPriorityBU(NETTING_AR_LE);


	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS IC AR',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  NETTING_AR_LE,
		  invoice_number_AP,
		  INTERCOMPANY_BATCH_NUMBER_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'
		  ); 

	---Scenario 5.2 Step 3.2
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 03',
		  'AHCS for Provider to Provider Netting',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  AR_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1,
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  functional_Currency_Code_AR,
		  -1*accounted_invoice_amount_AR,
		  '0000',
		  invoice_number_AP,
		  INTERCOMPANY_BATCH_NUMBER_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');

If functional_Currency_Code_AR!=NETTING_AR_FUN_CURR THEN
	Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_2
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AR
          AND To_currency=  NETTING_AR_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;
ELSE             LV_AR_NETTING_RATE_SC5_2 :=1;

END IF;


	 ---Scenario 5.2 Step 4.1 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_2, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  functional_Currency_Code_AR,
		  accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC5_2,
		  '0000',
		  invoice_number_AP,
		  INTERCOMPANY_BATCH_NUMBER_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		   Case 
		  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');

	---Scenario 5.2 Step 4.2 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 04',
		  'AHCS for Provider Netting to Provider',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AP',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_SC5_2, 
		  'AHCS IC AR AP-AHCS IC AR AP',
		  functional_Currency_Code_AR,
		  -1 * accounted_invoice_amount_AR,
		  NETTING_AR_FUN_CURR,
		  -1 * accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC5_2,
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  invoice_number_AP,
		  INTERCOMPANY_BATCH_NUMBER_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
		  then
		  NULL 
		  else
		  AR_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');
IF  (NETTING_AR_FUN_CURR!=functional_Currency_Code_AP and abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)) 
OR (NETTING_AP_FUN_CURR !=functional_Currency_Code_AP and abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)) THEN
		 Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_51
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency= Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            NETTING_AR_FUN_CURR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
            NETTING_AP_FUN_CURR
          End
          AND To_Currency =  functional_Currency_Code_AP    
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate'); 
        Exception
            When OTHERS THEN
                RAISE LV_EXCH_RATE_EXCEP;
        END;
ELSE 
LV_AR_NETTING_RATE_51 :=1;
END IF;


     	---Scenario 5.2 Step 5.1 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 05',
		  'AHCS for Receiver Netting to Provider Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_51, 
		  'IC Clearing AP AR-IC Clearing AP AR',  
		   Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            NETTING_AR_FUN_CURR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
            NETTING_AP_FUN_CURR
          End,
          Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
             accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC5_2
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
               accounted_invoice_amount_AP
          End,
          functional_Currency_Code_AP,  
		  LV_AR_NETTING_RATE_51 * Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
              accounted_invoice_amount_AP
          End,
		  '0000',
		  invoice_number_AR,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  Case 
		  when abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  and NETTING_AR_FUN_CURR=functional_Currency_Code_AP 
		  then NULL 
		  when abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU) and NETTING_AP_FUN_CURR=functional_Currency_Code_AP THEN
		  null
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');  	

       ---Scenario 5.2 Step 5.2
	   INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 05',
		  'AHCS for Receiver Netting to Provider Netting',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  AP_LEDGER,
		  'AHCS IC AP',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  LV_AR_NETTING_RATE_51, 
		  'AHCS IC AR AP-AHCS IC AR AP',  
		   Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            NETTING_AR_FUN_CURR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
            NETTING_AP_FUN_CURR
          End,
          -1 *Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
              accounted_invoice_amount_AR*LV_AR_NETTING_RATE_SC5_2
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
             accounted_invoice_amount_AP
          End,
          functional_Currency_Code_AP, 
		  -1 *LV_AR_NETTING_RATE_51 * Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
             LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
             accounted_invoice_amount_AP
          End,
		  NETTING_AR_LE,
		  invoice_number_AR,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AR_LE,
		  '0000',
		  '0000',
		  '0000',
		   Case 
		  when abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  and NETTING_AR_FUN_CURR=functional_Currency_Code_AP 
		  then NULL 
		  when abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU) and NETTING_AP_FUN_CURR=functional_Currency_Code_AP THEN
		  null
		  else
		  AP_EXCHANGE_RATE_TYPE
		  end,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI');	

		---Scenario 5.2 Step 6.1 
	INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 06',
		  'AHCS for Provider Netting to Receiver Netting',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS IC AR',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS IC AR AP-AHCS IC AR AP',  
		   NETTING_AR_FUN_CURR, 
          Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
            accounted_invoice_amount_AP
          End,
          NETTING_AR_FUN_CURR,  
		  Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
             accounted_invoice_amount_AP
          End,
		  NETTING_AP_LE,
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
          NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  NETTING_AP_LE,
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'); 	


       	 ---Scenario 5.2 Step 6.2 
	  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
		BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES  
        ('Scenario 5.2-Step 06',
		  'AHCS for Provider Netting to Receiver Netting',
		  NETTING_AR_LE,
		  NETTING_AR_LEDGER,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',  
		   NETTING_AR_FUN_CURR, 
          -1 * Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) <= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
             LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) > abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
            accounted_invoice_amount_AP
          End,
          NETTING_AR_FUN_CURR,  
		   -1 * Case
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) < abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 
            LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
           WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) >= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN  
             accounted_invoice_amount_AP
          End,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
		  P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		  NETTING_AR_LE,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		  NULL,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'); 		  

	 --Scenario 5.2 Step 7.1 
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 07',
		  'AHCS FX for Receiver Netting',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN   
             LV_AP_NETTING_LE
          End,
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_LEDGER
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN   
             NETTING_AP_LEDGER
          End,
		  'AHCS Cash Clearing',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'IC Clearing AP AR-IC Clearing AP AR',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) >= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		 Case	 
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) < abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 	  
				 (accounted_invoice_amount_AP - LV_AR_NETTING_RATE_51 * LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR)
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) >= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN
			     -1*(LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
					- accounted_invoice_amount_AP*LV_AR_NETTING_RATE_51 )
			End,
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) < abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) >= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
				Case	  
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) < abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 	  
				 (accounted_invoice_amount_AP - LV_AR_NETTING_RATE_51 * LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR)
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) >= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN
			     -1*(LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
					- accounted_invoice_amount_AP*LV_AR_NETTING_RATE_51 )
			End,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             LV_AP_NETTING_LE
          End,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
             NULL
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             NULL
          End,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,	  
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'		  
		  );

	 --Scenario 5.2 Step 7.2 
		  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
		(SCENARIO, 
		TRANSACTION, 
		LE, 
		LEDGER, 
		LINE_TYPE, 
		EXCHANGE_RATE_DATE, 
		EXCHANGE_RATE, 
		GL_NATURAL_ACC, 
		ENTERED_CURR,
		ENTERED_AMT,
		ACCOUNTED_CURR,
		ACCOUNTED_AMT,
		IC_LE,
		SOURCE_TRX_NUMBER ,
		IC_BATCH_NUMBER,
        BATCH_ID,
        LSI_NETTING_ENTRY_ID,
        ACCOUNTING_DATE,
        EVENT_TYPE,
		GL_LEGAL_ENTITY,
		GL_OPER_GRP,
		GL_ACCT,
		GL_DEPT,
		GL_SITE,
		GL_IC,
		GL_PROJECTS,
		GL_FUT_1,
		GL_FUT_2,
		EXCHANGE_RATE_TYPE,
		FILE_NAME,
		RECORD_TYPE,
		IC_TRX_NUMBER,
		ID1,
		ID2,
		ID3,
		ID4,
		ID5,
		ID6,
		ACCOUNTING_PERIOD,
		EVENT_CLASS) VALUES
        ('Scenario 5.2-Step 07',
		  'AHCS FX for Receiver Netting',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN   
             LV_AP_NETTING_LE
          End,
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_LEDGER
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN   
             NETTING_AP_LEDGER
          End,
		  'AHCS Other FX Acct',
		  to_char(LV_ACC_DATE,'YYYY-MM-DD'),
		  1, 
		  'AHCS Other FX Acct-AHCS Other FX Acct',
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
		 Case	  
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) < abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 	  
				-1* (accounted_invoice_amount_AP - LV_AR_NETTING_RATE_51 * LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR )
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) >= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN
			    LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
					- accounted_invoice_amount_AP*LV_AR_NETTING_RATE_51 
			End,
		  Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              NETTING_AR_FUN_CURR
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
              NETTING_AP_FUN_CURR
          End,
				Case	  
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) < abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN 	  
				 -1*( accounted_invoice_amount_AP - LV_AR_NETTING_RATE_51 * LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR)
			WHEN abs(LV_AP_NETTING_IS_PRIORITY_BU) >= abs(LV_AR_NETTING_IS_PRIORITY_BU)  THEN
			     LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR
					- accounted_invoice_amount_AP*LV_AR_NETTING_RATE_51 
			End,
		  '0000',
		  invoice_number_AP,
		  intercompany_batch_number_AP,
          P_BATCH_ID,
          WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
          to_char(LV_ACC_DATE,'YYYY-MM-DD'),
          'LSI_LIABILITY_SWITCH',
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
              LV_AR_NETTING_LE
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             LV_AP_NETTING_LE
          End,
		  '4120',
		  'XXX',
		  '0000',
		  '00000',
		  '0000',
		  '0000',
		  '0000',
		  '0000',
		   Case
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) <= abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN 
             NULL
           WHEN abs(LV_AR_NETTING_IS_PRIORITY_BU) > abs(LV_AP_NETTING_IS_PRIORITY_BU)  THEN  
             NULL
          End,
		  LV_FILE_NAME,
		  RECORD_TYPE,
		  IC_TRX_NUMBER,
		  AP_INVOICE_ID,
		  AR_INVOICE_ID,
		  AP_ID2,
		  AR_ID2,
		  AP_ID3,
		  AR_ID3,	  
		  ACCOUNTING_PERIOD,
		  'ORACLE_LSI'		  
		  );   

       commit; 

	                --     LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;    */

  /*                      INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit;
*/


EXCEPTION

     WHEN LV_EXCH_RATE_EXCEP THEN

     ROLLBACK;

      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC5.2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

   /*     DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
         LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC5.2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;  

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;                                      

Procedure LSI_SC6A1(P_BATCH_ID          NUMBER,
                            AR_CCID                             VARCHAR2,
                            AR_LEDGER                           VARCHAR2,
                            functional_Currency_Code_AR         VARCHAR2,
                            accounted_invoice_amount_AR         NUMBER,
                            intercompany_legal_entity_AR        VARCHAR2,
                            intercompany_transaction_type_AR    VARCHAR2,
                            invoice_number_AR                   VARCHAR2,
                            AP_CCID                             VARCHAR2,
                            AP_LEDGER                           VARCHAR2,
                            functional_Currency_Code_AP         VARCHAR2,
                            accounted_invoice_amount_AP         NUMBER,
                            intercompany_transaction_type_AP    VARCHAR2,
                            invoice_number_AP                   VARCHAR2,
                            NETTING_AR_LE                       VARCHAR2,
                            NETTING_AR_LEDGER                   VARCHAR2,
                            AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                            NETTING_AR_FUN_CURR                 VARCHAR2,
                            AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                            NETTING_AP_FUN_CURR                 VARCHAR2,
                            intercompany_legal_entity_AP        VARCHAR2,
                            NETTING_AP_LE                       VARCHAR2,
                            NETTING_AP_LEDGER                   VARCHAR2,
                            AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                            AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                            RECORD_TYPE                         VARCHAR2,
                            IC_TRX_NUMBER                       VARCHAR2,
                            AP_INVOICE_ID                       NUMBER,
                            AR_INVOICE_ID                       NUMBER,
                             AP_ID2 NUMBER,
                            AR_ID2 NUMBER,
                            AP_ID3 NUMBER,
                            AR_ID3 NUMBER,
                            ACCOUNTING_PERIOD                   VARCHAR2,
                            ICOM_BATCH_NUMBER                     VARCHAR2) IS

			LV_FILE_NAME                        VARCHAR2(100);
			LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30):= 0;
			LV_AP_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
			LV_AR_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
			LV_AP_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE);
			LV_AR_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
			LV_AP_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE);
			LV_AR_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);
			LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30) := 0;
		    LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30) := 0;
		    LV_AR_NETTING_RATE_SC5_5		NUMBER(38,30) := 0;
             LV_ERR_MSG      VARCHAR2(200);
                LV_ERR_CODE     VARCHAR2(50);
                LV_HEADER_ID  NUMBER;
				 LV_EXCH_RATE_EXCEP EXCEPTION;
				 LV_ACC_DATE DATE;
BEGIN

              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT1',ICOM_BATCH_NUMBER,LV_ACC_DATE );
              ---Step 3.1 Scenario 6A1
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
                              SCENARIO,
                             EVENT_TYPE,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                           ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                            'Scenario 6A1-Step 03',
                             'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AR_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
								  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT2',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 3.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
							 ('Scenario 6A1-Step 03',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               	AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
If functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
			  Begin
			  select conversion_rate
			  into LV_AR_NETTING_RATE_SC5_2
			  from WSC_AHCS_LSI_EXCHANGE_RATE_T
			  Where From_Currency = functional_Currency_Code_AR
			  AND To_currency= NETTING_AR_FUN_CURR
			  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
			  AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
			  Exception
			  WHEN OTHERS THEN
			   RAISE LV_EXCH_RATE_EXCEP;
			  End;
ELSE 			  LV_AR_NETTING_RATE_SC5_2 :=1;
END IF;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT3',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 4.1 Scenario 6A1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
							 ('Scenario 6A1-Step 04',
                               'AHCS for Receiver to Receiver Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               '0000',
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
								P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
							   '0000',
							   '0000',
							   '0000',
							   '0000',
							   Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
								  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT4',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 4.2 Scenario 6A1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A1-Step 04',
                              'AHCS for Receiver to Receiver Netting',
                              NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                              substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
							   substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
							   '0000',
							   '0000',
							   '0000',
                                Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                                  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT5',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                               --Step 5.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES
							('Scenario 6A1-Step 05',
                               'AHCS for Provider Netting to Receiver Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
						       to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							  'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
								  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT6',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 5.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 05',
                               'AHCS for Provider Netting to Receiver Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                             to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*-1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*-1*accounted_invoice_amount_AR,
							  '0000',
							  invoice_number_AP,
							  ICOM_BATCH_NUMBER,
						      P_BATCH_ID,
						      WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
						      to_char(LV_ACC_DATE,'YYYY-MM-DD'),
						      'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                           		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT7',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                               --Step 6.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6A1-Step 06',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                              substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                          		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT8',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 6.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 06',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               (-1)*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               (-1)*accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							 P_BATCH_ID,
							 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							 'LSI_LIABILITY_SWITCH',
                             substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                              		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

				/*		  Begin
						  select conversion_rate
						  into LV_AR_NETTING_RATE_SC5_4
						  from WSC_AHCS_LSI_EXCHANGE_RATE_T
						  Where From_Currency = functional_Currency_Code_AR
						  AND To_currency= NETTING_AR_FUN_CURR
						  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
						  AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
						  Exception
						  WHEN OTHERS THEN
						  LV_AR_NETTING_RATE_SC5_4 :=1;
						  End; */

If functional_Currency_Code_AP!=NETTING_AP_FUN_CURR THEN
          Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_4
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AP
          AND To_currency=  NETTING_AP_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;  
ELSE LV_AR_NETTING_RATE_SC5_4 :=1;
END IF;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT9',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 7.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 07',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
							   Case 
				 when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
							  AP_INVOICE_ID,
							  AR_INVOICE_ID,
							  AP_ID2,
							  AR_ID2,
							  AP_ID3,
							  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT10',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 7.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 07',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
								  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT11',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                              --Step 8.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 08',
                               'AHCS for Receiver Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
								  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT12',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 8.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 08',
                               'AHCS for Receiver Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
									AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

IF functional_Currency_Code_AP!= LV_AP_NETTING_NETTING_FUN_CURR then
				 Begin
				 select conversion_rate
				 into LV_AR_NETTING_RATE_SC5_3
				 from WSC_AHCS_LSI_EXCHANGE_RATE_T
				 Where From_Currency = functional_Currency_Code_AP
				 AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
				 AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
				 AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
				 Exception
				 WHEN OTHERS THEN
				RAISE LV_EXCH_RATE_EXCEP;
				 End;
	else LV_AR_NETTING_RATE_SC5_3 :=1;
	end if;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT13',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                            --Step 9.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 09',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                              LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT14',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 9.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
							BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                           ('Scenario 6A1-Step 09',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if NETTING_AR_FUN_CURR!=LV_AP_NETTING_NETTING_FUN_CURR then
					Begin
						 select conversion_rate
						 into LV_AR_NETTING_RATE_SC5_5
						 from WSC_AHCS_LSI_EXCHANGE_RATE_T
						 Where From_Currency = NETTING_AR_FUN_CURR
						 AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
						 AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
						 AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
						 Exception
						 WHEN OTHERS THEN
						RAISE LV_EXCH_RATE_EXCEP;
					 End;

		else LV_AR_NETTING_RATE_SC5_5 :=1;
		end if;
        logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT15',ICOM_BATCH_NUMBER,LV_ACC_DATE );

							--Step 10.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 10',
                               'AHCS for Receiver Netting Netting to Provider Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when NETTING_AR_FUN_CURR= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT16',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 10.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
							('Scenario 6A1-Step 10',
                               'AHCS for Receiver Netting Netting to Provider Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               -1 * LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1 * LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when NETTING_AR_FUN_CURR= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT17',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                           --Step 11.1 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                            GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A1-Step 11',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AP_NETTING_NETTING_FUN_CURR,
								LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
								LV_AP_NETTING_NETTING_FUN_CURR,
								LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							  P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT18',ICOM_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 11.2 Scenario 6A1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
							 BATCH_ID,
							LSI_NETTING_ENTRY_ID,
							ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                            GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A1-Step 11',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1* (LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR),
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1* (LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
							   'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                             		  AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


       commit;

	-- LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'MERGE1',ICOM_BATCH_NUMBER,LV_ACC_DATE );

 /*                       INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
                                                        LINE_ID ,
                                                        APPLICATION,
                                                        FILE_NAME,
                                                        BATCH_ID ,
                                                        STATUS ,
                                                        ACCOUNTING_STATUS ,
                                                        CR_DR_INDICATOR,
                                                        CURRENCY,
                                                        VALUE ,
                                                        SOURCE_COA,
                                                        TARGET_COA,
                                                        ATTRIBUTE2,
                                                        CREATED_BY,
                                                        CREATED_DATE,
                                                        LAST_UPDATED_BY,
                                                        LAST_UPDATED_DATE,
                                                        ATTRIBUTE11,
                                                        ATTRIBUTE3)  
            Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID, --WSC_AHCS_LSI_LINE_SEQ.nextval,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = ICOM_BATCH_NUMBER;
            commit; */


EXCEPTION
    WHEN LV_EXCH_RATE_EXCEP THEN
    ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC6A1) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

      /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

    WHEN OTHERS THEN
         LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC6A1) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit; 

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

END;


Procedure LSI_SC6A2(P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                   VARCHAR2,
                    GL_IC_BATCH_NUMBER                     VARCHAR2) IS

                    LV_FILE_NAME                        VARCHAR2(100);
                    LV_AP_NETTING_RATE_SC5_2            NUMBER(38,30);
                    LV_AP_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
                    LV_AR_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
                    LV_AP_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
                    LV_AP_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);
                    LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_5			NUMBER(38,30);
                    LV_ERR_MSG      VARCHAR2(200);
                    LV_ERR_CODE     VARCHAR2(50);
                    LV_HEADER_ID  NUMBER;
					LV_EXCH_RATE_EXCEP EXCEPTION;
					LV_ACC_DATE DATE;
                    TEMP NUMBER;
BEGIN

              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT1',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
              ---Step 3.1 Scenario 6A2
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
                              SCENARIO,
                             EVENT_TYPE,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                            'Scenario 6A2-Step 03',
                             'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT2',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 3.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
							LSI_NETTING_ENTRY_ID,
                            ACCOUNTING_DATE,
                            EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A2-Step 03',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
                                Begin
                                select conversion_rate
                                into LV_AP_NETTING_RATE_SC5_2
                                from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                Where From_Currency = functional_Currency_Code_AP
                                AND To_currency= NETTING_AP_FUN_CURR
                                 AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                                Exception
                                WHEN OTHERS THEN
								  RAISE LV_EXCH_RATE_EXCEP;
                                End;
				else LV_AP_NETTING_RATE_SC5_2 :=1;
				end if;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT3',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 4.1 Scenario 6A2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A2-Step 04',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_RATE_SC5_2,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                              invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                                '00000',
                                substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                                '0000',
                                '0000',
								 Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT4',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                               ---Step 4.2 Scenario 6A2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A2-Step 04',
                               'AHCS for Receiver Netting to Receiver',
                              NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_RATE_SC5_2,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               '0000',
                              invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                                '0000',
                                '00000',
                                '0000',
                                '0000',
                                '0000',
                                '0000',
                                Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT5',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                               --Step 5.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES
                               ('Scenario 6A2-Step 05',
                               'AHCS for Provider Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT6',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 5.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A2-Step 05',
                               'AHCS for Provider Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                             to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*-1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*-1*accounted_invoice_amount_AP,
                               LV_AR_NETTING_NETTING_LE,
                               invoice_number_AP,
                                GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT7',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                               --Step 6.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS                  ) VALUES
                             ('Scenario 6A2-Step 06',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
							   functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_LE,
                               invoice_number_AR,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT8',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 6.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6A2-Step 06',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               (-1)*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               (-1)*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AR,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                             substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');
if functional_Currency_Code_AR!= NETTING_AR_FUN_CURR then
                                Begin
                                select conversion_rate
                                into LV_AR_NETTING_RATE_SC5_4
                                from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                Where From_Currency = functional_Currency_Code_AR
                                AND To_currency= NETTING_AR_FUN_CURR
                                AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                                Exception
                                WHEN OTHERS THEN
                                 RAISE LV_EXCH_RATE_EXCEP;
                                End;

		else  LV_AR_NETTING_RATE_SC5_4 :=1;
		end if;						
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT9',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 7.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6A2-Step 07',
                               'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT10',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 7.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A2-Step 07',
                               'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
								'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
                                  Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT11',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                                --Step 8.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6A2-Step 08',
                               'AHCS for Provider Netting to Provider Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_LE,
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                 to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                 'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT12',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 8.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6A2-Step 08',
                               'AHCS for Provider Netting to Provider Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

if functional_Currency_Code_AR!=LV_AR_NETTING_NETTING_FUN_CURR then
                            Begin
                            select conversion_rate
                            into LV_AR_NETTING_RATE_SC5_3
                            from WSC_AHCS_LSI_EXCHANGE_RATE_T
                            Where From_Currency = functional_Currency_Code_AR
                            AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
                            AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                            AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                             Exception
                            WHEN OTHERS THEN
                             RAISE LV_EXCH_RATE_EXCEP;
                              End;
			else                             LV_AR_NETTING_RATE_SC5_3 :=1;

			end if ;
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT13',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                              --Step 9.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6A2-Step 09',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT14',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 9.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6A2-Step 09',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR,
                               NETTING_AR_LE,
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
			       when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if NETTING_AP_FUN_CURR!=LV_AR_NETTING_NETTING_FUN_CURR then
Begin
             select conversion_rate
             into LV_AR_NETTING_RATE_SC5_5
             from WSC_AHCS_LSI_EXCHANGE_RATE_T
             Where From_Currency = NETTING_AP_FUN_CURR
             AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
             AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
             AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
             Exception
             WHEN OTHERS THEN
              RAISE LV_EXCH_RATE_EXCEP;
             End;
else  LV_AR_NETTING_RATE_SC5_5 :=1;
end if;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT15',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                                            --Step 10.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6A2-Step 10',
                               'AHCS for Provider Netting Netting to Receiver Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
							    Case 
					  when NETTING_AP_FUN_CURR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT16',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 10.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6A2-Step 10',
                               'AHCS for Provider Netting Netting to Receiver Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               -1*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when NETTING_AP_FUN_CURR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                                AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT17',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                            --Step 11.1 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                            LSI_NETTING_ENTRY_ID,
                            ACCOUNTING_DATE,
                            EVENT_TYPE,
                            GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                  ('Scenario 6A2-Step 11',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*(LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*(LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'iNSERT18',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
                             --Step 11.2 Scenario 6A2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                              BATCH_ID,
                              LSI_NETTING_ENTRY_ID,
                              ACCOUNTING_DATE,
                              EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                            GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6A2-Step 11',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR-LV_AR_NETTING_RATE_SC5_5*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               GL_IC_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


       commit;


 --LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'MERGE1',GL_IC_BATCH_NUMBER,LV_ACC_DATE );
	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

                     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'MERGE2',IC_BATCH_NUMBER,LV_ACC_DATE );   

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;  */
                    /*    SELECT COUNT(*) INTO TEMP FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND NET.IC_BATCH_NUMBER = GL_IC_BATCH_NUMBER
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME; */


   /*                     INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = GL_IC_BATCH_NUMBER;

            --logging_insert('Oracle LSI',P_BATCH_ID ,SQl%rowcount, 'HARMAN',IC_BATCH_NUMBER,LV_ACC_DATE );
            commit; */


EXCEPTION

      WHEN LV_EXCH_RATE_EXCEP THEN
      ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC6A2) IC '||GL_IC_BATCH_NUMBER, 
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

    /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=GL_IC_BATCH_NUMBER;

       Commit;   */

    WHEN OTHERS THEN
 	 LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);    

 		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC6A2) IC :'||GL_IC_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit; 

  /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=GL_IC_BATCH_NUMBER;

       Commit; */

END;

 Procedure LSI_SC6B1(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                   VARCHAR2,
                    ICOM_BATCH_NUMBER                     VARCHAR2) IS

                    LV_FILE_NAME                        VARCHAR2(100);
                    LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
                    LV_AP_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
                    LV_AR_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
                    LV_AP_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
                    LV_AP_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);
                    LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_5			NUMBER(38,30);
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;
BEGIN

              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 6B1
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
                              SCENARIO,
                             EVENT_TYPE,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                           ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                            'Scenario 6B1-Step 03',
                             'LSI_LIABILITY_SWITCH',
                              'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AR_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6B1-Step 03',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
                        Begin
                              select conversion_rate
                              into LV_AR_NETTING_RATE_SC5_2
                              from WSC_AHCS_LSI_EXCHANGE_RATE_T
                              Where From_Currency = functional_Currency_Code_AR
                              AND To_currency= NETTING_AR_FUN_CURR
                              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                              AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                              Exception
                              WHEN OTHERS THEN
                              RAISE LV_EXCH_RATE_EXCEP;
                     End;

					 else LV_AR_NETTING_RATE_SC5_2 :=1;
					 end if;
                               ---Step 4.1 Scenario 6B1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B1-Step 04',
                               'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               '0000',
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               ---Step 4.2 Scenario 6B1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 04',
                               'AHCS for Provider Netting to Provider',
                              NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                              substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 05',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 05',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                AP_LEDGER,
                               'AHCS IC AP',
                             to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1* accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               -1* accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                              AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
                                                                                      Begin
                                                                                      select conversion_rate
                                                                                      into LV_AR_NETTING_RATE_SC5_4
                                                                                      from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                                                                      Where From_Currency = functional_Currency_Code_AP
                                                                                      AND To_currency= NETTING_AP_FUN_CURR
                                                                                      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                                                                      AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                                                                                      Exception
                                                                                      WHEN OTHERS THEN

																							RAISE LV_EXCH_RATE_EXCEP;
                                                                                      End;
													else  LV_AR_NETTING_RATE_SC5_4 :=1;
													end if;



                               --Step 6.1 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B1-Step 06',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'AHCS IC AR AP-AHCS IC AR AP',
							   functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
							   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
							     Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B1-Step 06',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               (-1)*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               (-1)*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
							   NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                  Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                             --Step 7.1 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6B1-Step 07',
                               'AHCS for Receiver Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 7.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 07',
                               'AHCS for Receiver Netting to Receiver Netting Netting',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
							   P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                              AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AP!=LV_AP_NETTING_NETTING_FUN_CURR then
																									 Begin
                                                                                                     select conversion_rate
                                                                                                     into LV_AR_NETTING_RATE_SC5_3
                                                                                                     from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                                                                                     Where From_Currency = functional_Currency_Code_AP
                                                                                                     AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
                                                                                                     AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                                                                                     AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                                                                                                     Exception
                                                                                                     WHEN OTHERS THEN

																										RAISE LV_EXCH_RATE_EXCEP;
                                                                                                     End;
else  LV_AR_NETTING_RATE_SC5_3 :=1;
end if;
                              --Step 8.1 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 08',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
							     Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                              RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 8.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                            LSI_NETTING_ENTRY_ID,
                            ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6B1-Step 08',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                 Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                              AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );




                               --Step 9.1 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                            LSI_NETTING_ENTRY_ID,
                            ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6B1-Step 09',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               (-1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR+
							   LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP),
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               (-1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR+
							   LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 9.2 Scenario 6B1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,
							 ID2,
							 ID3,
							 ID4,
							 ID5,
							 ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B1-Step 09',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*(-1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR+
							   LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP),
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*(-1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR+
							   LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,
								  AR_INVOICE_ID,
								  AP_ID2,
								  AR_ID2,
								  AP_ID3,
								  AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );



       commit;

	              --    LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*					   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit; */

			/*			Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;  
  /*                      INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = ICOM_BATCH_NUMBER;
            commit; */



EXCEPTION
     WHEN LV_EXCH_RATE_EXCEP THEN
     ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC6B1) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

    WHEN OTHERS THEN
        LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC6B1) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;   

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

END;

 Procedure LSI_SC6B2(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                   VARCHAR2,
                    ICOM_BATCH_NUMBER                     VARCHAR2) IS

                    LV_FILE_NAME                        VARCHAR2(100);
                    LV_AP_NETTING_RATE_SC5_2            NUMBER(38,30);
                    LV_AP_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
                    LV_AR_NETTING_NETTING_LE            VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
                    LV_AP_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_LEDGER        VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
                    LV_AP_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE);
                    LV_AR_NETTING_NETTING_FUN_CURR      VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);
                    LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);
					LV_AR_NETTING_RATE_SC5_5			NUMBER(38,30);
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);
                     LV_HEADER_ID  NUMBER;
                     LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;

BEGIN                     

              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 6B2
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
                              SCENARIO,
                             EVENT_TYPE,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                            'Scenario 6B2-Step 03',
                             'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
							LSI_NETTING_ENTRY_ID,
                            ACCOUNTING_DATE,
                            EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B2-Step 03',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                                '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
                                Begin
                                select conversion_rate
                                into LV_AP_NETTING_RATE_SC5_2
                                from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                Where From_Currency = functional_Currency_Code_AP
                                AND To_currency= NETTING_AP_FUN_CURR
                                 AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                                Exception
                                WHEN OTHERS THEN
								 RAISE LV_EXCH_RATE_EXCEP;
                                End;
								else LV_AP_NETTING_RATE_SC5_2 :=1;
								end if;


                               ---Step 4.1 Scenario 6B2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B2-Step 04',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_RATE_SC5_2,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                                '00000',
                                substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                                '0000',
                                '0000',
                                 Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               ---Step 4.2 Scenario 6B2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
							 EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B2-Step 04',
                               'AHCS for Receiver Netting to Receiver',
                              NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_RATE_SC5_2,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               '0000',
                              invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                                '0000',
                                '00000',
                                '0000',
                                '0000',
                                '0000',
                                '0000',
                                  Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES
                               ('Scenario 6B2-Step 05',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_LE,
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B2-Step 05',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                             to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AR,
                                ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

if functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
							    Begin
                                select conversion_rate
                                into LV_AR_NETTING_RATE_SC5_4
                                from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                Where From_Currency = functional_Currency_Code_AR
                                AND To_currency= NETTING_AR_FUN_CURR
                                AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                                Exception
                                WHEN OTHERS THEN
                                RAISE LV_EXCH_RATE_EXCEP;
                                End;
								else   LV_AR_NETTING_RATE_SC5_4 :=1;
								end if;


                               --Step 6.1 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS                  ) VALUES
                             ('Scenario 6B2-Step 06',
                               'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'AHCS IC AR AP-AHCS IC AR AP',
							   functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AR,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
						  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6B2-Step 06',
                               'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               (-1)*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               (-1)*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');



                             --Step 7.1 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6B2-Step 07',
                               'AHCS for Provider Netting to Provider Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 7.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ('Scenario 6B2-Step 07',
                               'AHCS for Provider Netting to Provider Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
								'LSI_LIABILITY_SWITCH',
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

If functional_Currency_Code_AR!=LV_AR_NETTING_NETTING_FUN_CURR then
							   Begin
                            select conversion_rate
                            into LV_AR_NETTING_RATE_SC5_3
                            from WSC_AHCS_LSI_EXCHANGE_RATE_T
                            Where From_Currency = functional_Currency_Code_AR
                            AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
                            AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                            AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                             Exception
                            WHEN OTHERS THEN
                            RAISE LV_EXCH_RATE_EXCEP;
                              End;

							  else   LV_AR_NETTING_RATE_SC5_3 :=1;
							  end if;

                                --Step 8.1 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6B2-Step 08',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                 to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                 'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                Case 
					 when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 8.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ('Scenario 6B2-Step 08',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR,
                               NETTING_AR_LE,
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );



                              --Step 9.1 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER ,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ('Scenario 6B2-Step 09',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               (-1*LV_AR_NETTING_RATE_SC5_4*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR+
							      LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               (-1*LV_AR_NETTING_RATE_SC5_4*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR+
							      LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                               P_BATCH_ID,
                               WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               'LSI_LIABILITY_SWITCH',
                              LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                             --Step 9.2 Scenario 6B2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (SCENARIO,
                             TRANSACTION,
                             LE,
                             LEDGER,
                             LINE_TYPE,
                             EXCHANGE_RATE_DATE,
                             EXCHANGE_RATE,
                             GL_NATURAL_ACC,
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             LSI_NETTING_ENTRY_ID,
                             ACCOUNTING_DATE,
                             EVENT_TYPE,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ('Scenario 6B2-Step 09',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*(-1*LV_AR_NETTING_RATE_SC5_4*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR+
							      LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*(-1*LV_AR_NETTING_RATE_SC5_4*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR+
							      LV_AP_NETTING_RATE_SC5_2*accounted_invoice_amount_AP),
                               '0000',
                               invoice_number_AP,
                               ICOM_BATCH_NUMBER,
                                P_BATCH_ID,
                                WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                'LSI_LIABILITY_SWITCH',
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
        commit;



	                      LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = IC_BATCH_NUMBER ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;     */

/*INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = ICOM_BATCH_NUMBER;
            commit; */

EXCEPTION

    WHEN LV_EXCH_RATE_EXCEP THEN
    ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC6B2) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

   /*     DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

    WHEN OTHERS THEN
        LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' for(SC6B2) IC :'||ICOM_BATCH_NUMBER,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;    

 /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=ICOM_BATCH_NUMBER;

       Commit; */

END;



Procedure LSI_SC7A1(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
					INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                  VARCHAR2
					) IS                                                                        
                   LV_FILE_NAME              VARCHAR2(100);
			       LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
                   LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);
                   LV_AR_NETTING_RATE_SC5_1            NUMBER(38,30);
				   LV_AP_NETTING_NETTING_LE   VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
				   LV_AR_NETTING_NETTING_LE   VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
				   LV_AP_NETTING_NETTING_LEDGER   VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_LEDGER   VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
				   LV_AP_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);       
				   LV_AR_NETTING_RATE_SC5_6            NUMBER(38,30);
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);   
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;
BEGIN
              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 7A_1
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7A_1-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               '0000',
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7A_1-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                              -1*accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               NETTING_AP_LE,
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
                Begin
                              select conversion_rate
                              into LV_AR_NETTING_RATE_SC5_2
                              from WSC_AHCS_LSI_EXCHANGE_RATE_T
                              Where From_Currency = functional_Currency_Code_AP
                              AND To_currency= NETTING_AP_FUN_CURR
                              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                              AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                              Exception
                              WHEN OTHERS THEN
                              RAISE LV_EXCH_RATE_EXCEP;
                End;
				else   LV_AR_NETTING_RATE_SC5_2 :=1;
				end if;
                               ---Step 4.1 Scenario 7A_1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (
							 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                             'Scenario 7A_1-Step 04',
                             'LSI_LIABILITY_SWITCH',
                             'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
                              P_BATCH_ID,                         
                              NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1), 
                               '0000',
                               '0000',
                               '0000',
							    Case 
					 when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               ---Step 4.2 Scenario 7A_1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7A_1-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                              -1* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              '0000',
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AP_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               '0000', 
							   '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES

							   (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7A_1-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver Netting Netting', 
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000', 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7A_1-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver Netting Netting', 
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_NETTING_LE, 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AP!=LV_AP_NETTING_NETTING_FUN_CURR then
                                Begin
                                              select conversion_rate
                                              into LV_AR_NETTING_RATE_SC5_6
                                              from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                              Where From_Currency = functional_Currency_Code_AP
                                              AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
                                              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                                              AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                                              Exception
                                              WHEN OTHERS THEN
                                            RAISE LV_EXCH_RATE_EXCEP;
                                End;
								else  LV_AR_NETTING_RATE_SC5_6 :=1;
								end if;
                               --Step 6.1 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS      ) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 							
                             'Scenario 7A_1-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_6, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AP_LE,
                               invoice_number_Ap,
                               intercompany_batch_number_AP,            
                               P_BATCH_ID,
                                LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 								
                             'Scenario 7A_1-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_6, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              '0000',
                               invoice_number_Ap,
                               intercompany_batch_number_AP,            
                               P_BATCH_ID,
                                LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 7.1 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES(
								 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                 'Scenario 7A_1-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AP_NETTING_NETTING_FUN_CURR,
                              LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP-accounted_invoice_amount_AR,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP-accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 7.2 Scenario 7A_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							     (
								 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,'Scenario 7A_1-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               (accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP),
                               LV_AP_NETTING_NETTING_FUN_CURR,
                              (accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_6*accounted_invoice_amount_AP),
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );                                                                          
       commit;

	                   --       LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;  */

      /*                  INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */


EXCEPTION

    WHEN LV_EXCH_RATE_EXCEP THEN
    ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC7A1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

      /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 		    LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);
          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' (SC7A1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;  

 /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;  

 Procedure LSI_SC7A2(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
					INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                  VARCHAR2
					) IS                                                                        
                   LV_FILE_NAME              VARCHAR2(100);
			       LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
				   LV_AP_NETTING_NETTING_LE     VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
				   LV_AR_NETTING_NETTING_LE     VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
				   LV_AP_NETTING_NETTING_LEDGER    VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_LEDGER     VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
				   LV_AP_NETTING_NETTING_FUN_CURR    VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_FUN_CURR    VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);       
				   LV_AR_NETTING_RATE_SC5_1            NUMBER(38,30);
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);  
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;

BEGIN
              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 7A_2
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7A_2-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               NETTING_AR_LE,
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7A_2-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               '0000',
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

              /*       Begin
                              select conversion_rate
                              into LV_AR_NETTING_RATE_SC5_2
                              from WSC_AHCS_LSI_EXCHANGE_RATE_T
                              Where From_Currency = functional_Currency_Code_AR
                              AND To_currency= NETTING_AR_FUN_CURR
                              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                              AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
                              Exception
                              WHEN OTHERS THEN
                              LV_AR_NETTING_RATE_SC5_2 :=1;
                       End;  */

        If functional_Currency_Code_AR!=NETTING_AR_FUN_CURR THEN
          Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_2
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AR
          AND To_currency=  NETTING_AR_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;  
        ELSE LV_AR_NETTING_RATE_SC5_2 :=1;
        END IF;            

                               ---Step 4.1 Scenario 7A_2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7A_2-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                              invoice_number_AR,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               '0000',
							   '0000',
                               '0000',
                               '0000',
							    Case 
					 when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               ---Step 4.2 Scenario 7A_2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               (  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7A_2-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*-1*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
							   '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES

							   (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7A_2-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting', 
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_NETTING_LE, 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							  (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7A_2-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting', 
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000', 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


              /*      Begin
                      select conversion_rate
                      into LV_AR_NETTING_RATE_SC5_1
                      from WSC_AHCS_LSI_EXCHANGE_RATE_T
                      Where From_Currency = functional_Currency_Code_AR
                      AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
                      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                      AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                      Exception
                      WHEN OTHERS THEN
                      LV_AR_NETTING_RATE_SC5_1 :=1;
                    End;   */

        If functional_Currency_Code_AR!=LV_AP_NETTING_NETTING_FUN_CURR THEN
          Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_1
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
		  Where From_Currency =  functional_Currency_Code_AR
          AND To_currency=  LV_AP_NETTING_NETTING_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate'); --'Actual Rate';
         Exception
            WHEN OTHERS THEN
               RAISE LV_EXCH_RATE_EXCEP;
         End;  
        ELSE LV_AR_NETTING_RATE_SC5_1 :=1;
        END IF;



                               --Step 6.1 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS      ) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 								
                              'Scenario 7A_2-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                LV_AR_NETTING_RATE_SC5_1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,           
                               P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
				  when functional_Currency_Code_AR= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 								
                             'Scenario 7A_2-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                                LV_AR_NETTING_RATE_SC5_1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AR_LE,
                               invoice_number_AP,
                               intercompany_batch_number_AP,             
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 7.1 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) 
                             VALUES( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                            'Scenario 7A_2-Step 07',
                            'LSI_LIABILITY_SWITCH',
                            'AHCS FX for Provider Netting Netting',
                            LV_AR_NETTING_NETTING_LE,
                            LV_AR_NETTING_NETTING_LEDGER,
                            'AHCS Cash Clearing',
                            to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                            1, 
                            'IC Clearing AP AR-IC Clearing AP AR',
                            LV_AR_NETTING_NETTING_FUN_CURR,
                            accounted_invoice_amount_AP - LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR, 
                            LV_AR_NETTING_NETTING_FUN_CURR,
                            accounted_invoice_amount_AP - LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR,
                            to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                            '0000',
                            invoice_number_AP,
                            INTERCOMPANY_BATCH_NUMBER_AP, 
                            P_BATCH_ID,
                            LV_AR_NETTING_NETTING_LE,
                            '4120',
                            'XXX',
                            '0000',
                            '00000',
                            '0000',
                            '0000',
                            '0000',
                            '0000',
                            NULL,
                            LV_FILE_NAME,
                            RECORD_TYPE,
                            IC_TRX_NUMBER,
                            AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                            ACCOUNTING_PERIOD,
                            'ORACLE_LSI'
                               ); 


                             --Step 7.2 Scenario 7A_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                             'Scenario 7A_2-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_1*accounted_invoice_amount_AR-accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
        commit; 

                     -- LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*					   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit; */
  /*                      INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */



EXCEPTION

     WHEN LV_EXCH_RATE_EXCEP THEN
     ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC7A2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

        /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
        LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' (SC7A2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit; 

   /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END; 

Procedure LSI_SC7B1(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
					INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                  VARCHAR2
					) IS                                                                        
                   LV_FILE_NAME              VARCHAR2(100);
			       LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
				   LV_AP_NETTING_NETTING_LE   VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
				   LV_AR_NETTING_NETTING_LE   VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
				   LV_AP_NETTING_NETTING_LEDGER   VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_LEDGER    VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
				   LV_AP_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);       
				   LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);  
                   LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);  
                   LV_AR_NETTING_RATE_SC5_5            NUMBER(38,30); 
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50); 
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					LV_ACC_DATE DATE;
BEGIN
              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 7B_1
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7B_1-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');
    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT1',intercompany_batch_number_AP,LV_ACC_DATE );  
                               ---Step 3.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7B_1-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                              -1*accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               NETTING_AP_LE,
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT2',intercompany_batch_number_AP,LV_ACC_DATE );                                

            if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
					  Begin
					  select conversion_rate
					  into LV_AR_NETTING_RATE_SC5_2
					  from WSC_AHCS_LSI_EXCHANGE_RATE_T
					  Where From_Currency = functional_Currency_Code_AP
					  AND To_currency= NETTING_AP_FUN_CURR
					  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
					  AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate') ;
					  Exception
					  WHEN OTHERS THEN
					   RAISE LV_EXCH_RATE_EXCEP;
					  End;

					  else LV_AR_NETTING_RATE_SC5_2 :=1;
					  end if;
                               ---Step 4.1 Scenario 7B_1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                         (
							 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7B_1-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AP_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1), 
							   '0000',
                               '0000',
                               '0000',
							    Case 
					  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT3',intercompany_batch_number_AP,LV_ACC_DATE );            

                               ---Step 4.2 Scenario 7B_1
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7B_1-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                              -1* LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AP,
                              to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              '0000',
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AP_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               '0000', 
							   '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

         logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT4',intercompany_batch_number_AP,LV_ACC_DATE ); 
                               --Step 5.1 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES

							   (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7B_1-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver Netting Netting', 
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AP_FUN_CURR,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000', 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT5',intercompany_batch_number_AP,LV_ACC_DATE );                 

                             --Step 5.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                          (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7B_1-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver Netting Netting', 
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AP_FUN_CURR,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_NETTING_LE, 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

         logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT6',intercompany_batch_number_AP,LV_ACC_DATE ); 

                               --Step 6.1 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS      ) VALUES
                                                                                                          (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 								'Scenario 7B_1-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Receiver Netting Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_Ap,
                               intercompany_batch_number_AP,             P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT7',intercompany_batch_number_AP,LV_ACC_DATE ); 

                             --Step 6.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   'Scenario 7B_1-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Receiver Netting Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                              '0000',
                               invoice_number_Ap,
                               intercompany_batch_number_AP,             P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT8',intercompany_batch_number_AP,LV_ACC_DATE ); 

							   if functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
						  Begin
						  select conversion_rate
						  into LV_AR_NETTING_RATE_SC5_4
						  from WSC_AHCS_LSI_EXCHANGE_RATE_T
						  Where From_Currency = functional_Currency_Code_AR
						  AND To_currency= NETTING_AR_FUN_CURR
						  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
						  AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate') ;
						  Exception
						  WHEN OTHERS THEN
						  RAISE LV_EXCH_RATE_EXCEP;
						  End;
else  LV_AR_NETTING_RATE_SC5_4 :=1;
end if;

         logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT8',intercompany_batch_number_AP,LV_ACC_DATE ); 
                             --Step 7.1 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                       (
								 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
								 'Scenario 7B_1-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Provider',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT9',intercompany_batch_number_AP,LV_ACC_DATE ); 
                             --Step 7.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							  (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,    
							  'Scenario 7B_1-Step 07',					 
							  'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Provider',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
                               Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT10',intercompany_batch_number_AP,LV_ACC_DATE ); 

							   if functional_Currency_Code_AP!=LV_AP_NETTING_NETTING_FUN_CURR then
                                      Begin
                  select conversion_rate
                  into LV_AR_NETTING_RATE_SC5_5
                  from WSC_AHCS_LSI_EXCHANGE_RATE_T
                  Where From_Currency = functional_Currency_Code_AP
                  AND To_currency= LV_AP_NETTING_NETTING_FUN_CURR
                  AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                  AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate') ;
                  Exception
                  WHEN OTHERS THEN
                   RAISE LV_EXCH_RATE_EXCEP;
                  End;       
else LV_AR_NETTING_RATE_SC5_5 :=1;
end if;				  

                  --Step 8.1 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							   (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                  
								'Scenario 7B_1-Step 08',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP, 
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AP_LE,
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
							   	Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'INSERT11',intercompany_batch_number_AP,LV_ACC_DATE ); 

                             --Step 8.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,     
								'Scenario 7B_1-Step 08',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting Netting to Receiver Netting',
                               LV_AP_NETTING_NETTING_LE,
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP, 
                               LV_AP_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               	Case 
							  when functional_Currency_Code_AP= LV_AP_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

         logging_insert('Oracle LSI',P_BATCH_ID ,12, 'INSERT1',intercompany_batch_number_AP,LV_ACC_DATE ); 

if functional_Currency_Code_AR!=LV_AR_NETTING_NETTING_FUN_CURR then
                         Begin
                         select conversion_rate
                         into LV_AR_NETTING_RATE_SC5_3
                         from WSC_AHCS_LSI_EXCHANGE_RATE_T
                         Where From_Currency = functional_Currency_Code_AR
                         AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
                         AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
                         AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
                         Exception
                         WHEN OTHERS THEN
                       RAISE LV_EXCH_RATE_EXCEP;
                         End;                  

else   LV_AR_NETTING_RATE_SC5_3 :=1;
end if;						 

                                                                                      --Step 9.1 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                             
							  'Scenario 7B_1-Step 09',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE, 
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP -LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR ,
                               LV_AR_NETTING_NETTING_FUN_CURR, 
                               LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP -LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR ,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                '0000',
                               '0000',
                               '0000',
                               '0000',
							   	Case 
							  when LV_AR_NETTING_NETTING_FUN_CURR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

 logging_insert('Oracle LSI',P_BATCH_ID ,13, 'INSERT1',intercompany_batch_number_AP,LV_ACC_DATE ); 
                             --Step 9.2 Scenario 7B_1
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							  'Scenario 7B_1-Step 09',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AP_NETTING_NETTING_LE, 
                               LV_AP_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3, 
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1 * (LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP -LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR)  ,
                               LV_AR_NETTING_NETTING_FUN_CURR, 
                              -1 * (LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP -LV_AR_NETTING_RATE_SC5_3*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AR) ,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AP_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                '0000',
                               '0000',
                               '0000',
                               '0000',
                               	Case 
							  when LV_AR_NETTING_NETTING_FUN_CURR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,
                               AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
            commit;  

	                 --   LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*					   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;		*/
           /*             INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit;
*/

EXCEPTION

     WHEN LV_EXCH_RATE_EXCEP THEN
     ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC7B1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

     /*     DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 	     LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' (SC7B1) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit; 

   /* DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END; 

Procedure LSI_SC7B2( P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
					INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                  VARCHAR2
					) IS                                                                        
                   LV_FILE_NAME              VARCHAR2(100);
			       LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
				   LV_AP_NETTING_NETTING_LE      VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
				   LV_AR_NETTING_NETTING_LE      VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
				   LV_AP_NETTING_NETTING_LEDGER   VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_LEDGER   VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
				   LV_AP_NETTING_NETTING_FUN_CURR  VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);       
				   LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);   
                   LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30);  
                   LV_AR_NETTING_RATE_SC5_5            NUMBER(38,30); 
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);  
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;

BEGIN
              BEGIN
              SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
              WHERE BATCH_ID = P_BATCH_ID;
              END;

              ---Step 3.1 Scenario 7B_2
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7B_2-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               NETTING_AR_LE,
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 7B_2-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               '0000',
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
      Begin
      select to_number(conversion_rate)
      into LV_AR_NETTING_RATE_SC5_2
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = functional_Currency_Code_AR
      AND To_currency= NETTING_AR_FUN_CURR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
      Exception
      WHEN OTHERS THEN
       RAISE LV_EXCH_RATE_EXCEP;
      End;
	  else LV_AR_NETTING_RATE_SC5_2 :=1;
	  end if;
                               ---Step 4.1 Scenario 7B_2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7B_2-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               '0000',
							   '0000',
                               '0000',
                               '0000',
							   	Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               ---Step 4.2 Scenario 7B_2
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 7B_2-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Provider Netting to Provider',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1 * LV_AR_NETTING_RATE_SC5_2 * accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                              invoice_number_AP,
                              intercompany_batch_number_AP,                
							  P_BATCH_ID,                         
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
							   '0000',
                               '0000',
                               '0000',
                               	Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES

							   (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7B_2-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting', 
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_NETTING_LE, 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							  (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 7B_2-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting', 
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000', 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                               --Step 6.1 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS      ) VALUES
                                                                                                          (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 								'Scenario 7B_2-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_Ap,
                               intercompany_batch_number_AP,             P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                           (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 		
								 'Scenario 7B_2-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_NETTING_LE,
                               invoice_number_Ap,
                               intercompany_batch_number_AP,             P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                              LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');
		if 	functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then				   
          Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_4
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
          Where From_Currency = functional_Currency_Code_AP
          AND To_currency= NETTING_AP_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
          Exception
          WHEN OTHERS THEN
          RAISE LV_EXCH_RATE_EXCEP;
          End;
		  else LV_AR_NETTING_RATE_SC5_4 :=1;
		  end if;

                             --Step 7.1 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                       (
								 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,'Scenario 7B_2-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Receiver Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
							   	Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 7.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							  (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,'Scenario 7B_2-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Receiver Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*-1*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AR!=LV_AR_NETTING_NETTING_FUN_CURR then						   
  Begin
          select conversion_rate
          into LV_AR_NETTING_RATE_SC5_5
          from WSC_AHCS_LSI_EXCHANGE_RATE_T
          Where From_Currency = functional_Currency_Code_AR
          AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
          AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
          AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
          Exception
          WHEN OTHERS THEN
           RAISE LV_EXCH_RATE_EXCEP;
  End;               
else LV_AR_NETTING_RATE_SC5_5 :=1;
end if;
  --Step 8.1 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							   (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,   
								'Scenario 7B_2-Step 08',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR, 
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 8.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,   
								'Scenario 7B_2-Step 08',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR, 
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AR_LE,
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 



                                                                                      --Step 9.1 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                             
							  'Scenario 7B_2-Step 09',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE, 
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR ,
                               LV_AR_NETTING_NETTING_FUN_CURR, 
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP-LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 9.2 Scenario 7B_2
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,            
							  'Scenario 7B_2-Step 09',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE, 
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                              LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR- LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP  ,
                               LV_AR_NETTING_NETTING_FUN_CURR, 
                               LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AR- LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP ,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
       commit;  

	                        --     LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

/*					   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;
*/
/*INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */


 EXCEPTION

    WHEN LV_EXCH_RATE_EXCEP THEN
    ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC7B2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

       /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
        LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' (SC7B2) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;

  /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;

Procedure LSI_SC8(  P_BATCH_ID                          NUMBER,
                    AR_CCID                             VARCHAR2,
                    AR_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AR         VARCHAR2,
                    accounted_invoice_amount_AR         NUMBER,
					INTERCOMPANY_BATCH_NUMBER_AP      VARCHAR2,
                    intercompany_legal_entity_AR        VARCHAR2,
                    intercompany_transaction_type_AR    VARCHAR2,
                    invoice_number_AR                   VARCHAR2,
                    AP_CCID                             VARCHAR2,
                    AP_LEDGER                           VARCHAR2,
                    functional_Currency_Code_AP         VARCHAR2,
                    accounted_invoice_amount_AP         NUMBER,
                    intercompany_transaction_type_AP    VARCHAR2,
                    invoice_number_AP                   VARCHAR2,
                    NETTING_AR_LE                       VARCHAR2,
                    NETTING_AR_LEDGER                   VARCHAR2,
                    AR_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AR_FUN_CURR                 VARCHAR2,
                    AP_EXCHANGE_RATE_NETTING            VARCHAR2,
                    NETTING_AP_FUN_CURR                 VARCHAR2,
                    intercompany_legal_entity_AP        VARCHAR2,
                    NETTING_AP_LE                       VARCHAR2,
                    NETTING_AP_LEDGER                   VARCHAR2,
                    AP_EXCHANGE_RATE_TYPE               VARCHAR2,
                    AR_EXCHANGE_RATE_TYPE               VARCHAR2,
                    RECORD_TYPE                         VARCHAR2,
                    IC_TRX_NUMBER                       VARCHAR2,
                    AP_INVOICE_ID                       NUMBER,
                    AR_INVOICE_ID                       NUMBER,
                     AP_ID2 NUMBER,
                    AR_ID2 NUMBER,
                    AP_ID3 NUMBER,
                    AR_ID3 NUMBER,
                    ACCOUNTING_PERIOD                  VARCHAR2
					) IS                                                                        
                   LV_FILE_NAME              VARCHAR2(100);
			       LV_AR_NETTING_RATE_SC5_2            NUMBER(38,30);
				   LV_AP_NETTING_NETTING_LE    VARCHAR2(50):= GetNettingNettingLE(NETTING_AP_LE);
				   LV_AR_NETTING_NETTING_LE    VARCHAR2(50):= GetNettingNettingLE(NETTING_AR_LE);
				   LV_AP_NETTING_NETTING_LEDGER      VARCHAR2(50):=GetNettingLEDGER(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_LEDGER    VARCHAR2(50):=GetNettingLEDGER(LV_AR_NETTING_NETTING_LE);
				   LV_AP_NETTING_NETTING_FUN_CURR   VARCHAR2(50):=GetNettingFunCurr(LV_AP_NETTING_NETTING_LE); 
				   LV_AR_NETTING_NETTING_FUN_CURR     VARCHAR2(50):=GetNettingFunCurr(LV_AR_NETTING_NETTING_LE);       
				   LV_AR_NETTING_RATE_SC5_3            NUMBER(38,30);
                   LV_AR_NETTING_RATE_SC5_4            NUMBER(38,30); 
                   LV_AR_NETTING_RATE_SC5_5            NUMBER(38,30);
                     LV_ERR_MSG      VARCHAR2(200);
                     LV_ERR_CODE     VARCHAR2(50);  
                     LV_HEADER_ID  NUMBER;
					 LV_EXCH_RATE_EXCEP EXCEPTION;
					 LV_ACC_DATE DATE;

BEGIN

      BEGIN
      SELECT FILE_NAME,ACCOUNTING_DATE INTO LV_FILE_NAME,LV_ACC_DATE FROM WSC_AHCS_LSI_CONTROL_T
      WHERE BATCH_ID = P_BATCH_ID;
      END;

              ---Step 3.1 Scenario 8
                             INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							     'Scenario 8-Step 03',
                                'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),   
                               1,
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'), 
                               NETTING_AR_LE,
                               invoice_number_AR,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 3.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							  'Scenario 8-Step 03',
							  'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider to Provider Netting',
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1,
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
                               P_BATCH_ID,
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );
if functional_Currency_Code_AR!=NETTING_AR_FUN_CURR then
              Begin
              select conversion_rate
              into LV_AR_NETTING_RATE_SC5_2
              from WSC_AHCS_LSI_EXCHANGE_RATE_T
              Where From_Currency = functional_Currency_Code_AR
              AND To_currency= NETTING_AR_FUN_CURR
              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
              AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
              Exception
              WHEN OTHERS THEN
              RAISE LV_EXCH_RATE_EXCEP;
              End;

			  else  LV_AR_NETTING_RATE_SC5_2 :=1;
			  end if;
                               ---Step 4.1 Scenario 8
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) Values
                             (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							 'Scenario 8-Step 04',
							 'LSI_LIABILITY_SWITCH',
                             'AHCS for Provider Netting to Provider',
                              NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                              invoice_number_AP,
                              intercompany_batch_number_AP,                  
							  P_BATCH_ID,                         
                              NETTING_AR_LE,
                               '4120',
                               'XXX',
							   '0000',
							   '00000',
                               '0000', 
							   '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');

                               ---Step 4.2 Scenario 8
                                INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                               (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   'Scenario 8-Step 04',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider',
                                NETTING_AR_LE,
                                NETTING_AR_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_2, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_2*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,                   
							   P_BATCH_ID,
							   NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                              substr(AR_CCID,1,instr(AR_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= NETTING_AR_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                               --Step 5.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS    ) VALUES

							   (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,	
							    'Scenario 8-Step 05',
							    'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting', 
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_NETTING_LE, 
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,     
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AR_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );

                             --Step 5.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                          (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
							   'Scenario 8-Step 05',
							     'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting to Provider Netting Netting',
                               NETTING_AR_LE,
                               NETTING_AR_LEDGER,
                               'AHCS Cash Clearing',
                             to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
                               NETTING_AR_FUN_CURR,
                               -1*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),                 '0000',
                               invoice_number_AP,
							   INTERCOMPANY_BATCH_NUMBER_AP,                  P_BATCH_ID,
                               NETTING_AR_LE,
                               '4120',
                               'XXX',
                               '0000',
                              '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               );


                               --Step 6.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS      ) VALUES
                                (WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
                                'Scenario 8-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_Ap,
                               intercompany_batch_number_AP,                    P_BATCH_ID,
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');


                             --Step 6.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                                        (
								WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,
								'Scenario 8-Step 06',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver to Receiver Netting',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               (-1)*accounted_invoice_amount_AP,
                               functional_Currency_Code_AP,
                               (-1)*accounted_invoice_amount_AP,
							    to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AP_LE,
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                              substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI');
if functional_Currency_Code_AP!=NETTING_AP_FUN_CURR then
              Begin
              select conversion_rate
              into LV_AR_NETTING_RATE_SC5_4
              from WSC_AHCS_LSI_EXCHANGE_RATE_T
              Where From_Currency = functional_Currency_Code_AP
              AND To_currency= NETTING_AP_FUN_CURR
              AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
              AND conversion_rate_type=NVL(AP_EXCHANGE_RATE_TYPE,'Actual Rate');
              Exception
              WHEN OTHERS THEN
              RAISE LV_EXCH_RATE_EXCEP;
              End;
			  else   LV_AR_NETTING_RATE_SC5_4 :=1;
			  end if;

                             --Step 7.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                       (
								 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,'Scenario 8-Step 07',
								 'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP, 
							   P_BATCH_ID,
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               substr(AP_CCID,1,instr(AP_CCID,'.',1)-1),
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 7.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

							  (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                              
							  'Scenario 8-Step 07',     							 
							  'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                              RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
                                                                                                                                                                                                         --Step 8.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                (   WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                            
								'Scenario 8-Step 08',
								'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP, 
                               NETTING_AP_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 8.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                              
							  'Scenario 8-Step 08',
	     						 'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               NETTING_AP_LE,
                               NETTING_AP_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_4, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,
                               NETTING_AP_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_4*accounted_invoice_amount_AP,
							    to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AP_NETTING_NETTING_LE,
                               invoice_number_AP,
                               intercompany_batch_number_AP,
							   P_BATCH_ID,
                               NETTING_AP_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               LV_AP_NETTING_NETTING_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= NETTING_AP_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

if functional_Currency_Code_AR!=LV_AR_NETTING_NETTING_FUN_CURR then
             Begin
             select conversion_rate
             into LV_AR_NETTING_RATE_SC5_3
             from WSC_AHCS_LSI_EXCHANGE_RATE_T
             Where From_Currency = functional_Currency_Code_AR
             AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
             AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
             AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
             Exception
             WHEN OTHERS THEN
            RAISE LV_EXCH_RATE_EXCEP;
             End;        

else LV_AR_NETTING_RATE_SC5_3 :=1;
end if;			 

                                                                                      --Step 9.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                            ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                             
							  'Scenario 8-Step 09',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE, --ARNettingLEsNettingLE
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AR,
                               accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR, 
                               LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                                '0000',
                               '0000',
                               '0000',
                               '0000',
							    Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 9.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                             ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                            
							 'Scenario 8-Step 09',  
						      'LSI_LIABILITY_SWITCH',
                               'AHCS for Provider Netting Netting to Provider Netting',
                               LV_AR_NETTING_NETTING_LE, --ARNettingLEsNettingLE
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AP',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_3, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AR,
                               -1*accounted_invoice_amount_AR,
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               -1*LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AR_LE,
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE, 
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AR_LE,
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AR= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AR_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 
if functional_Currency_Code_AP!=LV_AR_NETTING_NETTING_FUN_CURR then
   Begin
         select conversion_rate
         into LV_AR_NETTING_RATE_SC5_5
         from WSC_AHCS_LSI_EXCHANGE_RATE_T
         Where From_Currency = functional_Currency_Code_AP
         AND To_currency= LV_AR_NETTING_NETTING_FUN_CURR
         AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
         AND conversion_rate_type=NVL(AR_EXCHANGE_RATE_TYPE,'Actual Rate');
         Exception
         WHEN OTHERS THEN
         RAISE LV_EXCH_RATE_EXCEP;
   End;                      

else  LV_AR_NETTING_RATE_SC5_5 :=1;
end if;   


                                            --Step 10.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                                                                                                     (
							 WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 
							 'Scenario 8-Step 10',
							  'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               LV_AR_NETTING_NETTING_LE, --ARNettingLEsNettingLE
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS IC AR',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'AHCS IC AR AP-AHCS IC AR AP',
                               functional_Currency_Code_AP,
                               accounted_invoice_amount_AP,  
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP,
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               NETTING_AP_LE,
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,                             
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               NETTING_AP_LE,
                               '0000',
                               '0000',
                               '0000',
							   Case 
							  when functional_Currency_Code_AP= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 10.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              ( WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                               
							  'Scenario 8-Step 10',  	                        
							  'LSI_LIABILITY_SWITCH',
                               'AHCS for Receiver Netting to Receiver',
                               LV_AR_NETTING_NETTING_LE, --ARNettingLEsNettingLE
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               LV_AR_NETTING_RATE_SC5_5, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               functional_Currency_Code_AP,
                               -1*accounted_invoice_amount_AP,  
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               LV_AR_NETTING_RATE_SC5_5*-1*accounted_invoice_amount_AP,
							    to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                               P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                                Case 
							  when functional_Currency_Code_AP= LV_AR_NETTING_NETTING_FUN_CURR
							  then
							  NULL 
							  else
							  AP_EXCHANGE_RATE_TYPE
							  end,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

                                                                                                      --Step 11.1 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES
                              (  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                             
							  'Scenario 8-Step 11',
							   'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Provider Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Cash Clearing',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'IC Clearing AP AR-IC Clearing AP AR',
                               LV_AR_NETTING_NETTING_FUN_CURR,  
                               (LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP- LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR),
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               (LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP - LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR),
							   to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
                                P_BATCH_ID,
                                LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 


                             --Step 11.2 Scenario 8
                               INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T
                             (LSI_NETTING_ENTRY_ID,
							 SCENARIO, 
							 EVENT_TYPE,
                             TRANSACTION, 
                             LE, 
                             LEDGER, 
                             LINE_TYPE, 
                             EXCHANGE_RATE_DATE, 
                             EXCHANGE_RATE, 
                             GL_NATURAL_ACC, 
                             ENTERED_CURR,
                             ENTERED_AMT,
                             ACCOUNTED_CURR,
                             ACCOUNTED_AMT,
                             ACCOUNTING_DATE,
                             IC_LE,
                             SOURCE_TRX_NUMBER,
                             IC_BATCH_NUMBER,
                             BATCH_ID,
                             GL_LEGAL_ENTITY,
                             GL_OPER_GRP,
                             GL_ACCT,
                             GL_DEPT,
                             GL_SITE,
                             GL_IC,
                             GL_PROJECTS,
                             GL_FUT_1,
                             GL_FUT_2,
                             EXCHANGE_RATE_TYPE,
                             FILE_NAME,
                             RECORD_TYPE,
                             IC_TRX_NUMBER,
                             ID1,ID2,ID3,ID4,ID5,ID6,
                             ACCOUNTING_PERIOD,
                             EVENT_CLASS) VALUES

						   (  WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval,                              
						      'Scenario 8-Step 11',   							
						       'LSI_LIABILITY_SWITCH',
                               'AHCS FX for Receiver Netting Netting',
                               LV_AR_NETTING_NETTING_LE,
                               LV_AR_NETTING_NETTING_LEDGER,
                               'AHCS Other FX Acct',
                               to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               1, 
                               'AHCS Other FX Acct-AHCS Other FX Acct',
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               (LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP),
                               LV_AR_NETTING_NETTING_FUN_CURR,
                               (LV_AR_NETTING_RATE_SC5_3*accounted_invoice_amount_AR - LV_AR_NETTING_RATE_SC5_5*accounted_invoice_amount_AP),
							    to_char(LV_ACC_DATE,'YYYY-MM-DD'),
                               '0000',
                               invoice_number_AP,
                               INTERCOMPANY_BATCH_NUMBER_AP,
							   P_BATCH_ID,
                               LV_AR_NETTING_NETTING_LE,
                               '4120',
                               'XXX',
                               '0000',
                               '00000',
                               '0000',
                               '0000',
                               '0000',
                               '0000',
                               NULL,
                               LV_FILE_NAME,
                               RECORD_TYPE,
                               IC_TRX_NUMBER,AP_INVOICE_ID,AR_INVOICE_ID,AP_ID2,AR_ID2,AP_ID3,AR_ID3,
                               ACCOUNTING_PERIOD,
                               'ORACLE_LSI'
                               ); 

       commit;  

                    --   LV_HEADER_ID  := WSC_AHCS_LSI_HEADER_SEQ.nextval;

	/*				   Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'DR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;

						Merge INTO WSC_AHCS_INT_STATUS_T a
				USING (Select LCT.BATCH_ID,LCT.STATUS,NET.ACCOUNTED_CURR,NET.ACCOUNTED_AMT,
				NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET.GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2  SOURCE_COA
				FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
				WHERE LCT.BATCH_ID = NET.BATCH_ID 
				AND LCT.FILE_NAME = NET.FILE_NAME 
				AND LCT.BATCH_ID = P_BATCH_ID 
				AND LCT.FILE_NAME = LV_FILE_NAME
				AND NET.SOURCE_TRX_NUMBER = INVOICE_NUMBER_AP 
				AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap ) b
				ON (a.BATCH_ID=b.BATCH_ID AND a.APPLICATION='ORACLE LSI')
				WHEN NOT MATCHED THEN
				INSERT ( HEADER_ID,
				         LINE_ID ,
						APPLICATION,
						FILE_NAME,
						BATCH_ID ,
						STATUS ,
						ACCOUNTING_STATUS ,
						CR_DR_INDICATOR,
						CURRENCY,
						VALUE ,
						SOURCE_COA,
						TARGET_COA,
						ATTRIBUTE2,
						CREATED_BY,
						CREATED_DATE,
						LAST_UPDATED_BY,
						LAST_UPDATED_DATE,
						ATTRIBUTE11)
						VALUES (
						LV_HEADER_ID,
						WSC_AHCS_LSI_LINE_SEQ.nextval,
						'Oracle LSI',
						LV_FILE_NAME,
						P_BATCH_ID,
						b.STATUS,
						DECODE(b.STATUS,'MATCHED',NULL,'NEW',NULL,b.STATUS),
						'CR',
						b.ACCOUNTED_CURR,
						b.ACCOUNTED_AMT,
						b.SOURCE_COA,
						b.SOURCE_COA,
						'TRANSFORM_SUCCESS',
						'FININT',
						LV_ACC_DATE,
						'FININT',
						LV_ACC_DATE,
						LV_ACC_DATE);

						commit;	   */
     /*                   INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3)  
Select LV_HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    LV_FILE_NAME,
                    P_BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    LV_ACC_DATE,
                    'FININT',
                    LV_ACC_DATE,
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME	
            AND NET.IC_BATCH_NUMBER = intercompany_batch_number_ap;
            commit; */


EXCEPTION

    WHEN LV_EXCH_RATE_EXCEP THEN
    ROLLBACK;
      insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_EXCH_NOT_ENABLED' ,
                    'No Exchange Rate Defined for (SC8) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
       Commit;

        /*  DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

    WHEN OTHERS THEN
 	 LV_ERR_CODE := SQLCODE;
         LV_ERR_MSG := SUBSTR(sqlerrm,1,200);

		insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    LV_ERR_CODE ,
                    LV_ERR_MSG||' (SC8) IC :'||intercompany_batch_number_ap,
                    LV_ACC_DATE ,
                    'FININT', 
                    LV_ACC_DATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');

 Commit;

 /*   DELETE FROM WSC_AHCS_LSI_NETTING_ENTRY_T 
       WHERE IC_BATCH_NUMBER=intercompany_batch_number_ap;

       Commit; */

END;



      PROCEDURE WSC_LSI_JOURNALS_P
    (
    IN_WSC_LSI_JOURNAL_DATA IN WES_AHCS_LSI_JOURNAL_T_TYPE_TABLE
    ) AS
    BEGIN

        FORALL i IN 1..IN_WSC_LSI_JOURNAL_DATA.count
            INSERT INTO WSC_AHCS_LSI_JOURNAL_TMP_T(
                LEDGER_NAME, 
                LEGAL_ENTITY_NAME, 
                GL_BATCH_ID, 
                GL_BATCH_NAME, 
                GL_JOURNAL_ID , 
                JOURNAL_HEADER_NAME, 
                JOURNAL_LINE_NUMBER , 
                GL_ACCOUNTING_DATE, 
                EXCHANGE_RATE_DATE, 
                EXCHANGE_RATE , 
                EXCHANGE_RATE_TYPE, 
                SEGMENT1, 
                SEGMENT2, 
                SEGMENT3, 
                SEGMENT4, 
                SEGMENT5, 
                SEGMENT6, 
                SEGMENT7, 
                SEGMENT8, 
                SEGMENT9, 
                JOURNAL_ACCOUNTING_SEQUENCE, 
                RUNNING_TOTAL_DR , 
                RUNNING_TOTAL_CR , 
                RUNNING_TOTAL_ACCOUNTED_DR , 
                RUNNING_TOTAL_ACCOUNTED_CR , 
                INTERCOMPANY_BATCH_NUMBER , 
                PROVIDER_LEGAL_ENTITY, 
                INTERCOMPANY_TRANSACTION_TYPE , 
                LEDGER_ID , 
                ENTERED_CURRENCY_CODE, 
                FUNCTIONAL_CURRENCY_CODE,
                INTERCOMPANY_TRANSACTION_NUMBER, 
                JE_SOURCE , 
                ACTUAL_FLAG,
                TO_BE_PROCESSED,
                EXTRACT_NAME,
                STATUS,
                PARTY_TYPE_FLAG
            )VALUES(
                IN_WSC_LSI_JOURNAL_DATA(i).LEDGER_NAME, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT1, 
                IN_WSC_LSI_JOURNAL_DATA(i).GL_BATCH_ID, 
                IN_WSC_LSI_JOURNAL_DATA(i).GL_BATCH_NAME, 
                IN_WSC_LSI_JOURNAL_DATA(i).GL_JOURNAL_ID , 
                IN_WSC_LSI_JOURNAL_DATA(i).JOURNAL_HEADER_NAME, 
                IN_WSC_LSI_JOURNAL_DATA(i).JOURNAL_LINE_NUMBER , 
                IN_WSC_LSI_JOURNAL_DATA(i).GL_POSTED_DATE, 
                IN_WSC_LSI_JOURNAL_DATA(i).EXCHANGE_RATE_DATE, 
                IN_WSC_LSI_JOURNAL_DATA(i).EXCHANGE_RATE , 
                IN_WSC_LSI_JOURNAL_DATA(i).EXCHANGE_RATE_TYPE, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT1, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT2, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT3, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT4, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT5, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT6, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT7, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT8, 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT9, 
                IN_WSC_LSI_JOURNAL_DATA(i).JOURNAL_ACCOUNTING_SEQUENCE , 
                IN_WSC_LSI_JOURNAL_DATA(i).RUNNING_TOTAL_DR , 
                IN_WSC_LSI_JOURNAL_DATA(i).RUNNING_TOTAL_CR , 
                IN_WSC_LSI_JOURNAL_DATA(i).RUNNING_TOTAL_ACCOUNTED_DR , 
                IN_WSC_LSI_JOURNAL_DATA(i).RUNNING_TOTAL_ACCOUNTED_CR , 
                IN_WSC_LSI_JOURNAL_DATA(i).INTERCOMPANY_BATCH_NUMBER , 
                IN_WSC_LSI_JOURNAL_DATA(i).SEGMENT6, 
                IN_WSC_LSI_JOURNAL_DATA(i).INTERCOMPANY_TRANSACTION_TYPE , 
                IN_WSC_LSI_JOURNAL_DATA(i).LEDGER_ID , 
                IN_WSC_LSI_JOURNAL_DATA(i).ENTERED_CURRENCY_CODE, 
                IN_WSC_LSI_JOURNAL_DATA(i).FUNCTIONAL_CURRENCY_CODE, 
                IN_WSC_LSI_JOURNAL_DATA(i).INTERCOMPANY_TRANSACTION_NUMBER, 
                IN_WSC_LSI_JOURNAL_DATA(i).JE_SOURCE , 
                IN_WSC_LSI_JOURNAL_DATA(i).ACTUAL_FLAG,
                'Y',
                IN_WSC_LSI_JOURNAL_DATA(i).FILE_NAME,
                IN_WSC_LSI_JOURNAL_DATA(i).STATUS,
                IN_WSC_LSI_JOURNAL_DATA(i).PARTY_TYPE_FLAG
            );
        COMMIT;

        exception
        when others 
        then  logging_insert('Oracle LSI',123 ,1, 'test',123,sysdate );

    END;   


  PROCEDURE WSC_LSI_RECEIPT_CREATED(WSC_REP_CRE WSC_LSI_RECEIPT_CREATED_T_TYPE_TABLE)
  AS


  BEGIN

   FORALL i IN 1..WSC_REP_CRE.count
            INSERT INTO WSC_LSI_RECEIPT_CREATED_T (
                RECEIPT_NUMBER,
                CURRENCY_CODE,
                AMOUNT,
                STATUS, 
                ORG_ID,
                REQUEST_ID
            ) VALUES (
                WSC_REP_CRE(i).RECEIPT_NUMBER,
                WSC_REP_CRE(i).CURRENCY_CODE,
                WSC_REP_CRE(i).AMOUNT,
                WSC_REP_CRE(i).STATUS, 
                WSC_REP_CRE(i).ORG_ID,
                 WSC_REP_CRE(i).REQUEST_ID
            );


           Commit;




END WSC_LSI_RECEIPT_CREATED;

 PROCEDURE WSC_LSI_RECEIPT_SYNC_DB(P_REQUEST_ID NUMBER,P_LOAD_REQ_ID NUMBER)
  AS
            LV_COUNT NUMBER:=0;
            LV_BATCH_ID NUMBER;
            LV_COUNT_TOTAL NUMBER;
            LV_COUNT_NULL NUMBER;
            LV_COUNT_ERROR NUMBER;
  BEGIN

   BEGIN
   SELECT distinct BATCH_ID
   INTO LV_BATCH_ID
   FROM WSC_AHCS_LSI_AR_T
   WHERE FBDI_PROCESS_ID=P_LOAD_REQ_ID;
   END;


  logging_insert('Oracle LSI',P_LOAD_REQ_ID ,1, 'RECEIPT_DB_SYNC',LV_BATCH_ID,sysdate );

    /*   BEGIN  
         update WSC_AHCS_LSI_AR_T a 
         SET RECEIPT_NUM=NULL,
             STATUS='ERROR'
         WHERE  (RECEIPT_NUM,BATCH_ID,BU) NOT IN 
         (Select RECEIPT_NUMBER,P_BATCH_ID,Org_id 
         from WSC_LSI_RECEIPT_CREATED_T)
         AND BATCH_ID=P_BATCH_ID
         AND LOCKBOX_NUMBER=P_LOCKBOX_NBR
         AND BU=P_BU
         AND Bank_Origination_Number=P_Bank_Origination_Number;

          Commit;
        END; */

       begin
       merge into WSC_AHCS_LSI_AR_T a
       using (select RECEIPT_NUMBER,
                     ORG_ID,
                     CURRENCY_CODE,
                     status
              from WSC_LSI_RECEIPT_CREATED_T
              where request_id=P_REQUEST_ID
              or request_id = P_LOAD_REQ_ID ) b 
       ON (a.bu=b.org_id and a.receipt_num=b.receipt_number 
       and a.batch_id=LV_BATCH_ID 
       and a.fbdi_process_id=P_LOAD_REQ_ID
       and a.invoice_currency_code=b.currency_code)  
   WHEN MATCHED THEN 
        update set STATUS=decode(b.status,'APP','SUCCESS','UNAPP','SUCCESS','ERROR'),
            ERROR_MESSAGE=decode(b.status,'APP',NULL,'UNAPP',NULL,b.status);
        commit;
       end; 


      /*  BEGIN  
           update WSC_AHCS_LSI_AR_T a 
         SET STATUS='SUCCESS'
         WHERE  (RECEIPT_NUM,BATCH_ID,BU) IN 
         (Select RECEIPT_NUMBER,P_BATCH_ID,Org_id 
         from WSC_LSI_RECEIPT_CREATED_T)
         AND BATCH_ID=P_BATCH_ID
         AND LOCKBOX_NUMBER=P_LOCKBOX_NBR
         AND BU=P_BU
         AND Bank_Origination_Number=P_Bank_Origination_Number;

          Commit;
        END; */

        BEGIN
          update WSC_AHCS_LSI_AR_T a
            SET AP_PAYMENT_NUM=(Select PAYMENT_NUM
                    FROM WSC_AHCS_LSI_AP_T b 
                    WHERE b.INVOICE_NUMBER=a.INVOICE_NUMBER
                    AND b.INTERCOMPANY_BATCH_NUMBER=a.INTERCOMPANY_BATCH_NUMBER
                    AND b.IC_TRX_NUMBER=a.IC_TRX_NUMBER
                    AND b.batch_id=a.batch_id
                    AND b.status='SUCCESS'
                    AND BATCH_id=LV_BATCH_ID)
               Where batch_id=LV_BATCH_ID
               AND a.fbdi_process_id=P_LOAD_REQ_ID;
           commit;        
        END;   

        BEGIN
         update  WSC_AHCS_LSI_AP_AR_T a
         SET payment_number=(Select receipt_num
                        from WSC_AHCS_LSI_AR_T
                        Where BU=a.BU
                        AND INVOICE_NUMBER=a.INVOICE_NUMBER
                        AND LEDGER_NAME=a.LEDGER_NAME
                        AND ENTERED_INVOICE_AMOUNT=a.ENTERED_INVOICE_AMOUNT
                        AND GL_CODE_COMBINATION=a.GL_CODE_COMBINATION
                        AND INTERCOMPANY_BATCH_NUMBER=a.INTERCOMPANY_BATCH_NUMBER
                        AND IC_TRX_NUMBER=a.IC_TRX_NUMBER
                        AND a.batch_id=batch_id
                        and fbdi_process_id=P_LOAD_REQ_ID
                        AND status='SUCCESS'
                        AND a.batch_id=LV_BATCH_ID) 
          WHERE a.RECORD_TYPE='AR'
          AND a.batch_id=LV_BATCH_ID;

          Commit;
       END;

    BEGIN
    SELECT count(*) total, count(case when status is null then 1 end) status_null, 
    count(case when status = 'ERROR' then 1 end) status_error
    INTO LV_COUNT_TOTAL,LV_COUNT_NULL,LV_COUNT_ERROR
    FROM wsc_ahcs_lsi_ar_t where batch_id=LV_BATCH_ID;

      logging_insert('Oracle LSI',P_LOAD_REQ_ID ,1, 'TOTAL',LV_COUNT_TOTAL,sysdate );
        logging_insert('Oracle LSI',P_LOAD_REQ_ID ,1, 'NULL COUNT',LV_COUNT_NULL,sysdate );
          logging_insert('Oracle LSI',P_LOAD_REQ_ID ,1, 'ERROR COUNT',LV_COUNT_ERROR,sysdate );

  IF   LV_COUNT_NULL=0 THEN
    IF LV_COUNT_TOTAL=LV_COUNT_ERROR THEN
        Update WSC_AHCS_LSI_CONTROL_T
        SET RECEIPT_STATUS='ERROR',
        RECEIPT_COUNT=0
        WHERE BATCH_ID=LV_BATCH_ID;
     ELSIF  LV_COUNT_ERROR>0 THEN
         Update WSC_AHCS_LSI_CONTROL_T
        SET RECEIPT_STATUS='WARNING',
        RECEIPT_COUNT=LV_COUNT_TOTAL-LV_COUNT_ERROR
        WHERE BATCH_ID=LV_BATCH_ID;
      ELSE 
         Update WSC_AHCS_LSI_CONTROL_T
        SET RECEIPT_STATUS='SUCCESS',
        RECEIPT_COUNT=LV_COUNT_TOTAL
        WHERE BATCH_ID=LV_BATCH_ID;
    END IF;
 ELSE
    UPDATE WSC_AHCS_LSI_AR_T SET STATUS = 'ERROR', ERROR_MESSAGE = 'CONTACT SUPPORT | LOCKBOX NOT SET' where
    BATCH_ID=LV_BATCH_ID and status is null and LOCKBOX_NUMBER is null;

 END IF;
 commit;
 END;

    BEGIN
        DELETE FROM WSC_LSI_RECEIPT_CREATED_T WHERE REQUEST_ID=P_REQUEST_ID;
         commit;
     EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END; 

     BEGIN
       DELETE FROM WSC_LSI_RECEIPT_CREATED_T WHERE REQUEST_ID=P_LOAD_REQ_ID;
        commit;
     EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END; 




    /*   select count(1) into LV_COUNT from WSC_LSI_RECEIPT_CREATED_T;
       if LV_COUNT =0 THEN 
       update WSC_AHCS_LSI_CONTROL_T 
       SET receipt_status='ERROR'
       where batch_id=P_BATCH_ID;
       END IF; */

    END WSC_LSI_RECEIPT_SYNC_DB; 


PROCEDURE wsc_lsi_ar_ap_cm_err(o_Clobdata OUT CLOB) IS 
  l_Blob         BLOB; 
  l_Clob         CLOB;

BEGIN 

 Dbms_Lob.Createtemporary(Lob_Loc => l_Clob, 
                           Cache   => TRUE, 
                           Dur     => Dbms_Lob.Call); 
  SELECT Clob_Val 
    INTO l_Clob 
    FROM (SELECT Xmlcast(Xmlagg(Xmlelement(e, 
                                           Col_Value || Chr(13) || 
                                           Chr(10))) AS CLOB) AS Clob_Val, 
                 COUNT(*) AS Number_Of_Rows 
            FROM (
            select to_clob('FLOW,PAAS BATCH ID,LSI RUN DATE,IC BATCH NUMBER,IC TRANSACTION NUMBER,CM INVOICE_NUM, CM INV_CREATION_STATUS,AP INVOICE_NUMBER,PAYMENT_NUM,AP STATUS,AP ERROR_MESSAGE,AR INVOICE NUMBER,AR RECEIPT_NUM, AR STATUS,AR ERROR_MESSAGE,AR FBDI_PROCESS_ID,JOURNAL BATCH NAME,JOURNAL NAME,JOURNAL LINE NUMBER,AHCS FILE GENERATED,FILE GENERATION ERROR') AS Col_Value 
from dual 
union all
SELECT
 (get_data) from (
    select XMLAGG(XMLPARSE(CONTENT 'AP-AR,'|| batch_id||','||ACCOUNTING_DATE||','
                            || intercompany_batch_number
                            || ','
                            || ic_trx_number
                            || ','
                            || comd WELLFORMED)
        ORDER BY
            to_number(intercompany_batch_number)
    ).getclobval() get_data
FROM
    (
        SELECT
        data_1.batch_id,
            data_1."ID",
            data_1."ORD",
            data_1."INTERCOMPANY_BATCH_NUMBER",
            data_1."IC_TRX_NUMBER",
            data_1."COMD",
            apar.ACCOUNTING_DATE ACCOUNTING_DATE
        FROM
            (
                SELECT
                    batch_id,
                    to_number(intercompany_batch_number)        id,
                    1                                           ord,
                    to_char(cm.intercompany_batch_number)       intercompany_batch_number,
                    to_char(cm.ic_trx_number)                   ic_trx_number,
                    cm.invoice_num
                    || ','
                    || cm.inv_creation_status                    comd
                FROM
                    wsc_ahcs_lsi_invoice_for_cm_h_t cm
                WHERE
                    cm.inv_creation_status = 'REJECTED'
                UNION

                SELECT
                batch_id, 
                    to_number(intercompany_batch_number)        id,
                    2                                           ord,
                    to_char(ap.intercompany_batch_number)       intercompany_batch_number,
                    to_char(ap.ic_trx_number)                   ic_trx_number,
                    ',,'
                    ||ap.invoice_number
                    || ','
					|| ap.payment_num
					|| ','
                    || ap.status
                    || ','
                    || replace(replace(ap.error_message, chr(10), ' '), ',', ' ')
                    || '"' comd
                FROM
                    wsc_ahcs_lsi_ap_t ap
                WHERE
                    ap.status = 'ERROR'
                UNION
                SELECT
                batch_id,
                    to_number(intercompany_batch_number)        id,
                    3                                           ord,
                    to_char(ar.intercompany_batch_number)       intercompany_batch_number,
                    to_char(ar.ic_trx_number)                   ic_trx_number,
                    ',,,,,,'
                    || ar.invoice_number
                    || ','
                    || ar.receipt_num
                    || ','
                    || ar.status
                    || ',"'
                    || replace(replace(ar.error_message, chr(10), ' '),',','')
                    || '",'
                    || ar.fbdi_process_id comd
                FROM
                    wsc_ahcs_lsi_ar_t ar
                WHERE
                    ar.status = 'ERROR'
                UNION
                SELECT
                batch_id,
                    nvl(to_number(regexp_replace(error_msg, '[^0-9]', '')),dbms_random.value(1,9))          id,
                    4                                                           ord,
                    nvl(to_char(regexp_replace(error_msg, '[^0-9]', '')),dbms_random.value(1,100)) intercompany_batch_number,
                    '1'                                                         ic_trx_number,
                    ',,,,,,,,,,,,,'
                    || ',N,"'
                    || replace(error_msg, chr(10), ' ')
                    || '"' comd
                FROM
                    wsc_ahcs_lsi_err_t ahcs
                    where error_code not in ('DB_ERR_IN_UCM_CREATION','NO FBDI CREATED')
            ) data_1,
			wsc_ahcs_lsi_ap_ar_t apar
			where data_1.INTERCOMPANY_BATCH_NUMBER = apar.INTERCOMPANY_BATCH_NUMBER
			and data_1.IC_TRX_NUMBER = apar.IC_TRX_NUMBER
            and data_1.BATCH_ID = apar.BATCH_ID
			and apar.record_type = 'AR'
    )
GROUP BY
    to_number(intercompany_batch_number),batch_id
)  

union all
SELECT to_clob('GL,'||
        data_1.batch_id||','||data_1.accounting_date||','||
            data_1."INTERCOMPANY_BATCH_NUMBER"||','||
            data_1."IC_TRX_NUMBER"||','||
            data_1."COMD")
        FROM
            (
                SELECT
                ahcs.batch_id,
                apar.GL_ACCOUNTING_DATE ACCOUNTING_DATE,
                    nvl(to_number(regexp_replace(error_msg, '[^0-9]', '')),dbms_random.value(1,9))          id,
                    4                                                           ord,
                    substr(error_msg,instr(error_msg,':')+1) intercompany_batch_number,
                    '1'                                                         ic_trx_number,
                    ',,,,,,,,,,,'
                    ||apar.gl_batch_name||','
                    ||apar.journal_header_name||','
                    ||apar.journal_line_number||','
                    || ',N,"'
                    || replace(ahcs.error_msg, chr(10), ' ')
                    || '"' comd
                FROM
                    wsc_ahcs_lsi_err_t ahcs,
                    wsc_ahcs_lsi_journal_t apar
                    where error_code not in ('DB_ERR_IN_UCM_CREATION','NO FBDI CREATED')
                    and apar.INTERCOMPANY_BATCH_NUMBER = substr(error_msg,instr(error_msg,':')+1)
                    and ahcs.BATCH_ID = apar.BATCH_ID
                    and apar.party_type_flag= 'I'
            ) data_1
            ));

  o_Clobdata := l_Clob; 

--  NULL;
EXCEPTION 
  WHEN OTHERS THEN 
   DBMS_OUTPUT.PUT_LINE(SQLERRM); 
END;




PROCEDURE wsc_lsi_ar_ap_download(o_Clobdata OUT CLOB) IS 
  l_Blob         BLOB; 
  l_Clob         CLOB;

BEGIN 

  Dbms_Lob.Createtemporary(Lob_Loc => l_Clob, 
                           Cache   => TRUE, 
                           Dur     => Dbms_Lob.Call); 
  SELECT Clob_Val 
    INTO l_Clob 
    FROM (SELECT Xmlcast(Xmlagg(Xmlelement(e, 
                                           Col_Value || Chr(13) || 
                                           Chr(10))) AS CLOB) AS Clob_Val, 
                 COUNT(*) AS Number_Of_Rows 
            FROM (SELECT 'RECORD_TYPE,BU,INVOICE_NUMBER,LEDGER_NAME,ACCOUNTING_CLASS,INVOICE_DATE,ACCOUNTING_DATE,EXCHANGE_RATE,EXCHANGE_RATE_TYPE,EXCHANGE_RATE_DATE,ENTERED_INVOICE_AMOUNT,ACCOUNTED_INVOICE_AMOUNT,GL_CODE_COMBINATION,INTERCOMPANY_LEGAL_ENTITY,INTERCOMPANY_TRANSACTION_TYPE,INTERCOMPANY_BATCH_NUMBER,VENDOR_CUST_NAME,VENDOR_CUST_SITE,ACCOUNT_NUMBER,LOCKBOX_NUMBER,BANK_ORIGINATION_NUMBER,INVOICE_CURRENCY_CODE,FUNCTIONAL_CURRENCY_CODE,CHECK_ID,PAYMENT_NUMBER,BANK_ACC,BATCH_ID,NETTING_LEDGER,NETTING_FUN_CURR,IC_TRX_NUMBER,INVOICE_ID,BU_ID,LOCKBOX_ID,FILE_NAME,ACCOUNTING_PERIOD,EXTRACT_NAME,STATUS,STATUS_REASON' AS Col_Value FROM Dual 
                  UNION ALL 
                  SELECT RECORD_TYPE||','||BU||','||INVOICE_NUMBER||','||LEDGER_NAME||','||ACCOUNTING_CLASS||','||INVOICE_DATE||','||
					ACCOUNTING_DATE||','||
					EXCHANGE_RATE||','||EXCHANGE_RATE_TYPE||','||EXCHANGE_RATE_DATE||','||ENTERED_INVOICE_AMOUNT||','||ACCOUNTED_INVOICE_AMOUNT||','||
					GL_CODE_COMBINATION||','||INTERCOMPANY_LEGAL_ENTITY||','||INTERCOMPANY_TRANSACTION_TYPE||','||INTERCOMPANY_BATCH_NUMBER||','||
					VENDOR_CUST_NAME||','||VENDOR_CUST_SITE||','||ACCOUNT_NUMBER||','||LOCKBOX_NUMBER||','||BANK_ORIGINATION_NUMBER||','||
					INVOICE_CURRENCY_CODE||','||
					FUNCTIONAL_CURRENCY_CODE||','||CHECK_ID||','||PAYMENT_NUMBER||','||BANK_ACC||','||BATCH_ID||','||NETTING_LEDGER||','||
					NETTING_FUN_CURR||','||IC_TRX_NUMBER||','||
					INVOICE_ID||','||BU_ID||','||LOCKBOX_ID||','||FILE_NAME||','||ACCOUNTING_PERIOD||','||EXTRACT_NAME||','||STATUS||','||STATUS_REASON AS Col_Value 
                    FROM (Select RECORD_TYPE,BU,INVOICE_NUMBER,LEDGER_NAME,ACCOUNTING_CLASS,INVOICE_DATE,ACCOUNTING_DATE,
    EXCHANGE_RATE,EXCHANGE_RATE_TYPE,EXCHANGE_RATE_DATE,ENTERED_INVOICE_AMOUNT,ACCOUNTED_INVOICE_AMOUNT,
    GL_CODE_COMBINATION,INTERCOMPANY_LEGAL_ENTITY,INTERCOMPANY_TRANSACTION_TYPE,INTERCOMPANY_BATCH_NUMBER,
    VENDOR_CUST_NAME,VENDOR_CUST_SITE,ACCOUNT_NUMBER,LOCKBOX_NUMBER,BANK_ORIGINATION_NUMBER,INVOICE_CURRENCY_CODE,
    FUNCTIONAL_CURRENCY_CODE,CHECK_ID,PAYMENT_NUMBER,BANK_ACC,BATCH_ID,NETTING_LEDGER,NETTING_FUN_CURR,IC_TRX_NUMBER,
    INVOICE_ID,BU_ID,LOCKBOX_ID,FILE_NAME,ACCOUNTING_PERIOD,EXTRACT_NAME,'UNMATCHED' STATUS,STATUS_REASON
FROM wsc_ahcs_lsi_ap_ar_t where status is null and INVOICE_NUMBER NOT LIKE '%LSI'
union select 
'GL' RECORD_TYPE,null BU,to_char(JOURNAL_ACCOUNTING_SEQUENCE) INVOICE_NUMBER,null LEDGER_NAME,null ACCOUNTING_CLASS,null INVOICE_DATE,
GL_ACCOUNTING_DATE ACCOUNTING_DATE,
    EXCHANGE_RATE,EXCHANGE_RATE_TYPE,EXCHANGE_RATE_DATE,RUNNING_TOTAL_DR - RUNNING_TOTAL_CR ENTERED_INVOICE_AMOUNT,
    RUNNING_TOTAL_ACCOUNTED_DR - RUNNING_TOTAL_ACCOUNTED_CR ACCOUNTED_INVOICE_AMOUNT,
    SEGMENT1||'.'||SEGMENT2||'.'||SEGMENT3||'.'||SEGMENT4||'.'||SEGMENT5||'.'||SEGMENT6||'.'||
    SEGMENT7||'.'||SEGMENT8||'.'||SEGMENT9 GL_CODE_COMBINATION,null INTERCOMPANY_LEGAL_ENTITY,
    INTERCOMPANY_TRANSACTION_TYPE,to_number(INTERCOMPANY_BATCH_NUMBER) INTERCOMPANY_BATCH_NUMBER,
    null VENDOR_CUST_NAME,null VENDOR_CUST_SITE,null ACCOUNT_NUMBER,null LOCKBOX_NUMBER,null BANK_ORIGINATION_NUMBER,ENTERED_CURRENCY_CODE INVOICE_CURRENCY_CODE,
    FUNCTIONAL_CURRENCY_CODE,null CHECK_ID,null PAYMENT_NUMBER,null BANK_ACC,to_char(BATCH_ID),null NETTING_LEDGER,null NETTING_FUN_CURR,INTERCOMPANY_TRANSACTION_NUMBER IC_TRX_NUMBER,
    to_char(GL_JOURNAL_ID) INVOICE_ID,null BU_ID,null LOCKBOX_ID,FILE_NAME,ACCOUNTING_PERIOD,EXTRACT_NAME,'UNMATCHED' STATUS,null STATUS_REASON
from WSC_AHCS_LSI_JOURNAL_T where Status='NEW')));

  o_Clobdata := l_Clob; 
EXCEPTION 
  WHEN OTHERS THEN 
   DBMS_OUTPUT.PUT_LINE(SQLERRM); 
END;


    PROCEDURE lsi_error_report_download(o_Clobdata OUT CLOB) IS 
  l_Blob         BLOB; 
  l_Clob         CLOB;

BEGIN 

  Dbms_Lob.Createtemporary(Lob_Loc => l_Clob, 
                           Cache   => TRUE, 
                           Dur     => Dbms_Lob.Call); 
  SELECT Clob_Val 
    INTO l_Clob 
    FROM (SELECT Xmlcast(Xmlagg(Xmlelement(e, 
                                           Col_Value || Chr(13) || 
                                           Chr(10))) AS CLOB) AS Clob_Val, 
                 COUNT(*) AS Number_Of_Rows 
            FROM (SELECT 'FILE_NAME, BATCH_ID, ERROR_CODE, ERROR_MSG, CREATED_BY, TO_BE_PROCESSED, CREATED_DATE' AS Col_Value 
                    FROM Dual 
                  UNION ALL 
                  SELECT FILE_NAME||','||BATCH_ID||','||ERROR_CODE||','||ERROR_MSG||','||CREATED_BY||','||TO_BE_PROCESSED||','||CREATED_DATE AS Col_Value 
                    FROM (select FILE_NAME ,
                        BATCH_ID ,
                        ERROR_CODE ,
                        ERROR_MSG ,
                        to_char(CREATED_DATE at time zone 'UTC','DD-MM-YYYY HH24:MI:SS')  CREATED_DATE,
                        CREATED_BY ,
                        TO_BE_PROCESSED from WSC_AHCS_LSI_ERR_T order by CREATED_DATE desc ))); 

  o_Clobdata := l_Clob; 
EXCEPTION 
  WHEN OTHERS THEN 
   DBMS_OUTPUT.PUT_LINE(SQLERRM); 
END;



 PROCEDURE WSC_LSI_UPDATE_PROCESS_FLAG(P_BATCH_ID VARCHAR2,P_LEDGER_GRP_NUM VARCHAR2)
 AS
LV_BATCH_ID VARCHAR2(200);

Cursor C1(L_BATCH_ID VARCHAR2) is select batch_id,count(case when status is null then 1 end) CNT 
from wsc_ahcs_int_control_line_t where batch_id in L_BATCH_ID 
group by batch_id;

 BEGIN

 LV_BATCH_ID := regexp_replace(P_BATCH_ID,' ',',');

    BEGIN
    For Rc1 in C1(LV_BATCH_ID) LOOP
    IF Rc1.CNT=0 THEN 
    update WSC_AHCS_LSI_CONTROL_T
    set to_be_processed='N',
    LAST_UPDATED_DATE=SYSDATE
    where batch_id=Rc1.BATCH_ID;
    commit;
    END IF;
    END LOOP;
    END;

 BEGIN
    update WSC_AHCS_LSI_NETTING_ENTRY_T a
    set to_be_processed='N'
    where batch_id IN LV_BATCH_ID
    AND EXISTS (Select 1 from WSC_AHCS_INT_MF_LEDGER_T
                WHERE LEDGER_GRP_NUM=P_LEDGER_GRP_NUM
                AND SUB_LEDGER='Oracle LSI'
                AND LEDGER_NAME=a.LEDGER);
    commit;
    END; 

    BEGIN
    update WSC_AHCS_LSI_NETTING_ENTRY_HEADERS_T a
    set to_be_processed='N'
    where batch_id IN LV_BATCH_ID
    AND EXISTS (Select 1 from WSC_AHCS_INT_MF_LEDGER_T
                WHERE LEDGER_GRP_NUM=P_LEDGER_GRP_NUM
                AND SUB_LEDGER='Oracle LSI'
                AND LEDGER_NAME=a.LEDGER_NAME);
    commit;
    END; 


    BEGIN
     update WSC_AHCS_LSI_JOURNAL_T a
    set to_be_processed='N'
    where batch_id IN LV_BATCH_ID
    AND EXISTS (Select 1 from WSC_AHCS_INT_MF_LEDGER_T
                WHERE LEDGER_GRP_NUM=P_LEDGER_GRP_NUM
                AND SUB_LEDGER='Oracle LSI'
                AND LEDGER_NAME=a.LEDGER_NAME);
    commit;
    END;


END;    


PROCEDURE WSC_LSI_APAR_P (
       in_wsc_apar_header IN wsc_lsi_apar_t_type_table
    ) AS
BEGIN


    FORALL i IN 1..IN_WSC_APAR_HEADER.count
            INSERT INTO WSC_AHCS_LSI_AP_AR_TMP_T (
			 BATCH_ID,
               Record_Type,
               extract_name,
                BU, 
				BU_ID,
                INVOICE_NUMBER, 
                LEDGER_NAME, 
                ACCOUNTING_CLASS, 
                INVOICE_DATE, 
                ACCOUNTING_DATE, 
                EXCHANGE_RATE, 
                EXCHANGE_RATE_TYPE, 
                EXCHANGE_RATE_DATE, 
                ENTERED_INVOICE_AMOUNT, 
                ACCOUNTED_INVOICE_AMOUNT, 
                GL_CODE_COMBINATION, 
                INTERCOMPANY_LEGAL_ENTITY, 
                INTERCOMPANY_TRANSACTION_TYPE, 
                INTERCOMPANY_BATCH_NUMBER, 
                BANK_ACC,
                VENDOR_CUST_NAME, 
                VENDOR_CUST_SITE, 
                Account_Number, 
                Lockbox_Number,
				Lockbox_id,				
                Bank_Origination_Number, 
                Invoice_Currency_Code, 
                Functional_Currency_Code,
                netting_ledger,
                netting_fun_curr,
				IC_TRX_NUMBER,
				INVOICE_ID,
                ACCOUNTING_PERIOD
            ) VALUES (
              NULL,
               IN_WSC_APAR_HEADER(i).Record_Type,
               IN_WSC_APAR_HEADER(i).FILE_NAME,
                IN_WSC_APAR_HEADER(i).BU, 
				IN_WSC_APAR_HEADER(i).BU_ID,
                IN_WSC_APAR_HEADER(i).INVOICE_NUMBER, 
                IN_WSC_APAR_HEADER(i).LEDGER_NAME, 
                IN_WSC_APAR_HEADER(i).ACCOUNTING_CLASS, 
                IN_WSC_APAR_HEADER(i).INVOICE_DATE, 
                IN_WSC_APAR_HEADER(i).ACCOUNTING_DATE, 
                IN_WSC_APAR_HEADER(i).EXCHANGE_RATE, 
                IN_WSC_APAR_HEADER(i).EXCHANGE_RATE_TYPE, 
                IN_WSC_APAR_HEADER(i).EXCHANGE_RATE_DATE, 
                IN_WSC_APAR_HEADER(i).ENTERED_INVOICE_AMOUNT, 
                IN_WSC_APAR_HEADER(i).ACCOUNTED_INVOICE_AMOUNT, 
                IN_WSC_APAR_HEADER(i).GL_CODE_COMBINATION, 
                IN_WSC_APAR_HEADER(i).INTERCOMPANY_LEGAL_ENTITY, 
                IN_WSC_APAR_HEADER(i).INTERCOMPANY_TRANSACTION_TYPE, 
                IN_WSC_APAR_HEADER(i).INTERCOMPANY_BATCH_NUMBER, 
                IN_WSC_APAR_HEADER(i).BANK_ACC,
                IN_WSC_APAR_HEADER(i).VENDOR_CUST_NAME, 
                IN_WSC_APAR_HEADER(i).VENDOR_CUST_SITE, 
                IN_WSC_APAR_HEADER(i).Account_Number, 
                IN_WSC_APAR_HEADER(i).Lockbox_Number, 
				IN_WSC_APAR_HEADER(i).Lockbox_ID,
                IN_WSC_APAR_HEADER(i).Bank_Origination_Number, 
                IN_WSC_APAR_HEADER(i).Invoice_Currency_Code, 
                IN_WSC_APAR_HEADER(i).Functional_Currency_Code,
                IN_WSC_APAR_HEADER(i).Netting_Ledger,
                IN_WSC_APAR_HEADER(i).Netting_Fun_Curr,
				IN_WSC_APAR_HEADER(i).IC_TRX_NUMBER,
				IN_WSC_APAR_HEADER(i).INVOICE_ID,
                IN_WSC_APAR_HEADER(i).ACCOUNTING_PERIOD
            );


           Commit;

END WSC_LSI_APAR_P;

FUNCTION WSC_LSI_APAR_BATCH_P RETURN NUMBER
 AS
 LV_BATCH_ID NUMBER;
BEGIN

   LV_BATCH_ID := WSC_AHCS_BATCH_SEQ.nextval;
   return(LV_BATCH_ID);
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END; 

procedure WSC_LSI_ASYNC_NETTING_P(RECORD_TYPE VARCHAR2,P_BATCH_ID NUMBER,FILENAME in varchar2, Errorbuf OUT Varchar2,Rectcode OUT Varchar2)
    as
        err_msg VARCHAR2(2000);
        err_code VARCHAR2(100);
BEGIN

        dbms_scheduler.create_job(job_name => 'INVOKE_WSC_LSI_NETTING_P' || FILENAME,
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
            WSC_LSI_PKG.WSC_LSI_NETTING_P('''||RECORD_TYPE||''','||P_BATCH_ID||');
       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for netting');

EXCEPTION
WHEN OTHERS THEN
  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Creating Netting Async Job-'||sqlerrm);
END; 


    PROCEDURE WSC_ASYNC_LSI_MATCH_PROCESS_P (
        RECORD_TYPE     VARCHAR2,
        ERRMSG     OUT     VARCHAR2,
        ERRCODE    OUT     VARCHAR2,
        FILENAME    IN VARCHAR2
    ) AS
        err_msg VARCHAR2(2000);
        LV_BATCH_ID  NUMBER;
        AB EXCEPTION;
    BEGIN

      IF RECORD_TYPE='AP-AR' THEN

        dbms_scheduler.create_job(job_name => 'INVOKE_WSC_LSI_APAR_MATCH_P' || FILENAME,
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
            WSC_LSI_PKG.WSC_LSI_APAR_MATCH_P('''
                                               || FILENAME
                                               || ''');

       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for matching AP and AR');
         ELSE

             dbms_scheduler.create_job(job_name => 'INVOKE_WSC_LSI_GL_MATCH_P' || FILENAME,
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
            WSC_LSI_PKG.WSC_LSI_JOURNALS_MATCH_P('''
                                               || FILENAME
                                               || ''');

       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for matching JOURNALS');

          END IF;      



       EXCEPTION
        WHEN OTHERS THEN

           Select BATCH_ID 
           into LV_BATCH_ID 
           from wsc_ahcs_lsi_control_t 
           where file_name=FILENAME;

          wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Creating Matching Async Job-'||sqlerrm); 
    END; 

    PROCEDURE WSC_ASYNC_LSI_FBDI_PROCESS_P( 
        p_batch_id NUMBER
    ) AS
        err_msg VARCHAR2(2000);
    BEGIN

    dbms_scheduler.create_job(job_name => 'INVOKE_WSC_LSI_AR_FBDI_P' || p_batch_id,
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
                 WSC_LSI_PKG.WSC_LSI_RECEIPT_FBDI_P('|| p_batch_id|| ');
       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for creating FBDI template for receipt');    

    EXCEPTION
        WHEN OTHERS THEN
            wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Creating FBDI Async Job-'||sqlerrm);
    END; 


    PROCEDURE WSC_LSI_LOOKUP_P
    (
      IN_WSC_LOOKUP IN WSC_AHCS_LSI_LOOKUP_T_TYPE_TABLE
    ) AS
    BEGIN
        Begin
         EXECUTE IMMEDIATE 'TRUNCATE TABLE WSC_AHCS_LSI_LOOKUP_T'; 
        Exception
         WHEN OTHERS THEN
            NULL;
        END; 
        FORALL i IN 1..IN_WSC_LOOKUP.count
            INSERT INTO WSC_AHCS_LSI_LOOKUP_T(
                LOOKUP_TYPE,
                LOOKUP_CODE,
                MEANING,
                DESCRIPTION,
                ATTRIBUTE1,
                ATTRIBUTE2,
                TAG,
                LEDGER_NAME,
                functional_curr,
                ATTRIBUTE3,
                ATTRIBUTE4 
            )VALUES(
                IN_WSC_LOOKUP(i).LOOKUP_TYPE,
                IN_WSC_LOOKUP(i).LOOKUP_CODE,
                IN_WSC_LOOKUP(i).MEANING,
                IN_WSC_LOOKUP(i).DESCRIPTION,
                IN_WSC_LOOKUP(i).ATTRIBUTE1,
                IN_WSC_LOOKUP(i).ATTRIBUTE2,
                IN_WSC_LOOKUP(i).TAG,
                IN_WSC_LOOKUP(i).LEDGER_NAME,
                IN_WSC_LOOKUP(i).CURRENCY_CODE,
                IN_WSC_LOOKUP(i).ATTRIBUTE3,
                IN_WSC_LOOKUP(i).ATTRIBUTE4
            );

    END WSC_LSI_LOOKUP_P;



    PROCEDURE WSC_LSI_EXCHAGE_RATE_P
    (
      IN_WSC_EXCHANGE_RATE IN WSC_AHCS_LSI_EXCHANGE_RATE_T_TYPE_TABLE
    ) AS

    BEGIN

        FORALL i IN 1..IN_WSC_EXCHANGE_RATE.count

            INSERT INTO WSC_AHCS_LSI_EXCHANGE_RATE_T(
                FROM_CURRENCY,
                TO_CURRENCY,
                CONVERSION_DATE,
                CONVERSION_RATE_TYPE,
                CONVERSION_TYPE,
                CONVERSION_RATE,
                INVERSE_CONVERSTION_RATE
            )Select 
                IN_WSC_EXCHANGE_RATE(i).FROM_CURRENCY,
                IN_WSC_EXCHANGE_RATE(i).TO_CURRENCY,
                IN_WSC_EXCHANGE_RATE(i).CONVERSION_DATE,
                IN_WSC_EXCHANGE_RATE(i).CONVERSION_RATE_TYPE,
                IN_WSC_EXCHANGE_RATE(i).CONVERSION_TYPE,
                ROUND(IN_WSC_EXCHANGE_RATE(i).CONVERSION_RATE,30),
                ROUND(IN_WSC_EXCHANGE_RATE(i).INVERSE_CONVERSTION_RATE,30)
              FROM DUAL WHERE NOT EXISTS (Select 1 from WSC_AHCS_LSI_EXCHANGE_RATE_T
                                          Where FROM_CURRENCY=IN_WSC_EXCHANGE_RATE(i).FROM_CURRENCY
                                          AND TO_CURRENCY=IN_WSC_EXCHANGE_RATE(i).TO_CURRENCY
                                          AND CONVERSION_DATE=IN_WSC_EXCHANGE_RATE(i).CONVERSION_DATE
                                          AND CONVERSION_RATE_TYPE=IN_WSC_EXCHANGE_RATE(i).CONVERSION_RATE_TYPE);

    END WSC_LSI_EXCHAGE_RATE_P;

 PROCEDURE WSC_LSI_JOURNALS_MATCH_P(P_FILE_NAME VARCHAR2)
 IS

   LV_BATCH_ID  NUMBER;
   L_EXTRACT    VARCHAR2(200);
   L_FILE_NAME  VARCHAR2(200);
   LV_ERROR_MSG VARCHAR2(200);
   LV_MATCH_COUNT   NUMBER;
   LV_ACC_DATE TIMESTAMP;
   L_ACC_DATE DATE;
   LV_GP_UNMATCHED NUMBER;

 BEGIN

   INSERT INTO WSC_AHCS_LSI_JOURNAL_T (LEDGER_NAME                     ,
                        LEGAL_ENTITY_NAME               ,
                        GL_BATCH_ID                     ,
                        GL_BATCH_NAME                   ,
                        GL_JOURNAL_ID                   ,
                        JOURNAL_HEADER_NAME             ,
                        JOURNAL_LINE_NUMBER             ,
                        GL_ACCOUNTING_DATE              ,
                        EXCHANGE_RATE_DATE              ,
                        EXCHANGE_RATE                   ,
                        EXCHANGE_RATE_TYPE              ,
                        SEGMENT1                        ,
                        SEGMENT2                        ,
                        SEGMENT3                        ,
                        SEGMENT4                        ,
                        SEGMENT5                        ,
                        SEGMENT6                        ,
                        SEGMENT7                        ,
                        SEGMENT8                        ,
                        SEGMENT9                        ,
                        JOURNAL_ACCOUNTING_SEQUENCE     ,
                        RUNNING_TOTAL_DR                ,
                        RUNNING_TOTAL_CR                ,
                        RUNNING_TOTAL_ACCOUNTED_DR      ,
                        RUNNING_TOTAL_ACCOUNTED_CR      ,
                        INTERCOMPANY_BATCH_NUMBER       ,
                        PROVIDER_LEGAL_ENTITY           ,
                        INTERCOMPANY_TRANSACTION_TYPE   ,
                        LEDGER_ID                       ,
                        ENTERED_CURRENCY_CODE           ,
                        INTERCOMPANY_TRANSACTION_NUMBER ,
                        JE_SOURCE                       ,
                        STATUS                          ,
                        ACTUAL_FLAG                     ,
                        ACCOUNTING_PERIOD               ,
                        LE                              ,
                        FILE_NAME                       ,
                        TO_BE_PROCESSED                 ,
                        FUNCTIONAL_CURRENCY_CODE        ,
                        BATCH_ID                        ,
                        EXTRACT_NAME                    ,
                        TO_BE_MATCHED                   ,
                        PARTY_TYPE_FLAG                 )
                            SELECT LEDGER_NAME                     ,
                        LEGAL_ENTITY_NAME               ,
                        GL_BATCH_ID                     ,
                        GL_BATCH_NAME                   ,
                        GL_JOURNAL_ID                   ,
                        JOURNAL_HEADER_NAME             ,
                        JOURNAL_LINE_NUMBER             ,
                        GL_ACCOUNTING_DATE              ,
                        EXCHANGE_RATE_DATE              ,
                        EXCHANGE_RATE                   ,
                        EXCHANGE_RATE_TYPE              ,
                        SEGMENT1                        ,
                        SEGMENT2                        ,
                        SEGMENT3                        ,
                        SEGMENT4                        ,
                        SEGMENT5                        ,
                        SEGMENT6                        ,
                        SEGMENT7                        ,
                        SEGMENT8                        ,
                        SEGMENT9                        ,
                        JOURNAL_ACCOUNTING_SEQUENCE     ,
                        RUNNING_TOTAL_DR                ,
                        RUNNING_TOTAL_CR                ,
                        RUNNING_TOTAL_ACCOUNTED_DR      ,
                        RUNNING_TOTAL_ACCOUNTED_CR      ,
                        INTERCOMPANY_BATCH_NUMBER       ,
                        PROVIDER_LEGAL_ENTITY           ,
                        INTERCOMPANY_TRANSACTION_TYPE   ,
                        LEDGER_ID                       ,
                        ENTERED_CURRENCY_CODE           ,
                        INTERCOMPANY_TRANSACTION_NUMBER ,
                        JE_SOURCE                       ,
                        STATUS                          ,
                        ACTUAL_FLAG                     ,
                        ACCOUNTING_PERIOD               ,
                        LE                              ,
                        FILE_NAME                       ,
                        TO_BE_PROCESSED                 ,
                        FUNCTIONAL_CURRENCY_CODE        ,
                        BATCH_ID                        ,
                        EXTRACT_NAME                    ,
                        'Y'                             ,
                        PARTY_TYPE_FLAG
   FROM WSC_AHCS_LSI_JOURNAL_TMP_T A
    WHERE NOT EXISTS ( SELECT 1 from WSC_AHCS_LSI_JOURNAL_T
                    WHERE GL_BATCH_ID=A.GL_BATCH_ID
                    AND GL_JOURNAL_ID=A.GL_JOURNAL_ID
                    AND JOURNAL_LINE_NUMBER=A.JOURNAL_LINE_NUMBER);
   /*   WHERE (SEGMENT1,SEGMENT6,RUNNING_TOTAL_DR,INTERCOMPANY_BATCH_NUMBER,LEDGER_NAME )NOT IN 
     (SELECT SEGMENT1,SEGMENT6,RUNNING_TOTAL_DR,INTERCOMPANY_BATCH_NUMBER,LEDGER_NAME FROM WSC_AHCS_LSI_JOURNAL_T); */

    Commit; 

   BEGIN  
  SELECT DISTINCT GL_ACCOUNTING_DATE
  INTO LV_ACC_DATE
  FROM WSC_AHCS_LSI_JOURNAL_TMP_T;

  LV_ACC_DATE:=SYSDATE;
  EXCEPTION 
    WHEN OTHERS THEN 
        LV_ACC_DATE:=SYSDATE;
   END;  

        BEGIN
           EXECUTE IMMEDIATE 'TRUNCATE TABLE WSC_AHCS_LSI_JOURNAL_TMP_T'; 
        Exception
            WHEN OTHERS THEN
                NULL;
        END;  

  Select WSC_LSI_APAR_BATCH_P
  INTO LV_BATCH_ID 
  FROM DUAL; 

  BEGIN
    SELECT CASE
        WHEN trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
           trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
        ELSE 
            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
        END
        INTO 
        L_ACC_DATE
        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
        AND trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
                AND ((trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
                      OR (trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));

END;



                 MERGE INTO WSC_AHCS_LSI_JOURNAL_MATCH_T a
                    USING ( SELECT GR.EXTRACT_NAME GR_EXTRACT_NAME,
                    GP.EXTRACT_NAME GP_EXTRACT_NAME,
                    L_ACC_DATE GR_GL_ACC_DATE,
                    GR.ENTERED_CURRENCY_CODE GR_ENTERED_CURRENCY_CODE, 
                    GR.FUNCTIONAL_CURRENCY_CODE GR_FUNCTIONAL_CURRENCY_CODE,
                    GR.EXCHANGE_RATE GR_EXCHANGE_RATE,
                    GR.EXCHANGE_RATE_DATE GR_EXCHANGE_RATE_DATE,
                    GR.JOURNAL_HEADER_NAME GR_GL_JOURNAL_NAME, 
                    GR.LEDGER_NAME GR_LEDGER_NAME, 
                    L_ACC_DATE GR_ACC_DATE,  
                    (NVL(GR.RUNNING_TOTAL_CR,0)-NVL(GR.RUNNING_TOTAL_DR,0)) GR_RUNNING_TOTAL_DR, 
                    (NVL(GR.RUNNING_TOTAL_ACCOUNTED_CR,0)-NVL(GR.RUNNING_TOTAL_ACCOUNTED_DR,0)) GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GR.EXCHANGE_RATE_TYPE GR_EXCHANGE_RATE_TYPE,
                    GR.SEGMENT1 GR_SEGMENT1,
                    GR.SEGMENT2 GR_SEGMENT2,
                    GR.SEGMENT3 GR_SEGMENT3,
                    GR.SEGMENT4 GR_SEGMENT4,
                    GR.SEGMENT5 GR_SEGMENT5,
                    GR.SEGMENT6 GR_SEGMENT6,
                    GR.SEGMENT7 GR_SEGMENT7,
                    GR.SEGMENT8 GR_SEGMENT8,
                    GR.SEGMENT9 GR_SEGMENT9,
                    GR.LEGAL_ENTITY_NAME GR_INTERCOMPANY_LEGAL_ENTITY, 
                    GR.PROVIDER_LEGAL_ENTITY GR_PROVIDER_LEGAL_ENTITY,
                    GR.INTERCOMPANY_TRANSACTION_TYPE GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    GR.INTERCOMPANY_BATCH_NUMBER GR_INTERCOMPANY_BATCH_NUMBER,
                    GR.INTERCOMPANY_TRANSACTION_NUMBER GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    GR.GL_BATCH_ID GR_GL_BATCH_ID,
                    GR.GL_JOURNAL_ID GR_GL_JOURNAL_ID,
                    GR.JOURNAL_LINE_NUMBER GR_JOURNAL_LINE_NUMBER,
                    GR.LE GR_LE,
                    GR.JOURNAL_ACCOUNTING_SEQUENCE GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    GP.JOURNAL_HEADER_NAME GP_GL_JOURNAL_NAME, 
                    GP.LEDGER_NAME GP_LEDGER_NAME, 
                    L_ACC_DATE GP_ACC_DATE, 
                    GP.EXCHANGE_RATE GP_EXCHANGE_RATE, 
                    GP.EXCHANGE_RATE_TYPE GP_EXCHANGE_RATE_TYPE, 
                    GP.EXCHANGE_RATE_DATE GP_EXCHANGE_RATE_DATE, 
                     (NVL(GP.RUNNING_TOTAL_DR,0)-NVL(GP.RUNNING_TOTAL_CR,0)) GP_RUNNING_TOTAL_DR, 
                    (NVL(GP.RUNNING_TOTAL_ACCOUNTED_DR,0)-NVL(GP.RUNNING_TOTAL_ACCOUNTED_CR,0)) GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GP.SEGMENT1 GP_SEGMENT1,
                    GP.SEGMENT2 GP_SEGMENT2,
                    GP.SEGMENT3 GP_SEGMENT3,
                    GP.SEGMENT4 GP_SEGMENT4,
                    GP.SEGMENT5 GP_SEGMENT5,
                    GP.SEGMENT6 GP_SEGMENT6,
                    GP.SEGMENT7 GP_SEGMENT7,
                    GP.SEGMENT8 GP_SEGMENT8,
                    GP.SEGMENT9 GP_SEGMENT9,
                    GP.LEGAL_ENTITY_NAME GP_LEGAL_ENTITY_NAME,
                    GP.PROVIDER_LEGAL_ENTITY GP_PROVIDER_LEGAL_ENTITY, 
                    GP.INTERCOMPANY_TRANSACTION_TYPE GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    GP.INTERCOMPANY_BATCH_NUMBER GP_INTERCOMPANY_BATCH_NUMBER, 
                    GP.ENTERED_CURRENCY_CODE GP_ENTERED_CURRENCY_CODE, 
                    GP.FUNCTIONAL_CURRENCY_CODE GP_FUNCTIONAL_CURRENCY_CODE,
                    GP.INTERCOMPANY_TRANSACTION_NUMBER GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    GP.GL_BATCH_ID GP_GL_BATCH_ID,
                    GP.GL_JOURNAL_ID GP_GL_JOURNAL_ID,
                    GP.JOURNAL_LINE_NUMBER GP_JOURNAL_LINE_NUMBER,
                    GP.LE GP_LE,
                    GP.JOURNAL_ACCOUNTING_SEQUENCE GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    GR.ACCOUNTING_PERIOD
                    FROM WSC_AHCS_LSI_JOURNAL_T GP, WSC_AHCS_LSI_JOURNAL_T GR
                    WHERE 1=1
                    ---AND NVL(GR.RUNNING_TOTAL_DR,0)=NVL(GP.RUNNING_TOTAL_DR,0)
                    AND GR.INTERCOMPANY_BATCH_NUMBER=GP.INTERCOMPANY_BATCH_NUMBER
                    AND GR.INTERCOMPANY_TRANSACTION_NUMBER=GP.INTERCOMPANY_TRANSACTION_NUMBER
                    AND GP.SEGMENT6=GR.SEGMENT1
                    AND GP.SEGMENT1=GR.SEGMENT6
                    AND GR.PARTY_TYPE_FLAG='R'
                    AND GP.PARTY_TYPE_FLAG='I'
                    AND GP.TO_BE_MATCHED='Y'
                    AND GR.TO_BE_MATCHED='Y'
                    AND NOT EXISTS(SELECT 1 FROM WSC_AHCS_LSI_JOURNAL_MATCH_T
                                   WHERE GR_GL_BATCH_ID=GR.GL_BATCH_ID
                                   AND GR_GL_JOURNAL_ID=GR.GL_JOURNAL_ID
                                   AND GR_JOURNAL_LINE_NUMBER=GR.JOURNAL_LINE_NUMBER)
                    AND NOT EXISTS(SELECT 1 FROM WSC_AHCS_LSI_JOURNAL_MATCH_T
                                   WHERE GP_GL_BATCH_ID=GP.GL_BATCH_ID
                                   AND GP_GL_JOURNAL_ID=GP.GL_JOURNAL_ID 
                                   AND GP_JOURNAL_LINE_NUMBER=GP.JOURNAL_LINE_NUMBER)) b
        ON (a.GR_INTERCOMPANY_BATCH_NUMBER = b.GR_INTERCOMPANY_BATCH_NUMBER 
        and a.GP_LEDGER_NAME=b.GP_LEDGER_NAME and a.GR_LEDGER_NAME=b.GR_LEDGER_NAME
        and a.GP_INTERCOMPANY_TRANSACTION_NUMBER=b.GP_INTERCOMPANY_TRANSACTION_NUMBER)
        WHEN NOT MATCHED THEN
                    INSERT (BATCH_ID,
                    GP_EXTRACT_NAME,
                    GR_EXTRACT_NAME,
                    GR_GL_ACCOUNTING_DATE,
                    GR_ENTERED_CURRENCY_CODE,
                    GR_FUNCTIONAL_CURRENCY_CODE,
                    GR_EXCHANGE_RATE, 
                    GR_EXCHANGE_RATE_TYPE, 
                    GR_EXCHANGE_RATE_DATE, 
                    GR_GL_JOURNAL_ID, 
                    GR_GL_JOURNAL_NAME,
                    GR_JOURNAL_LINE_NUMBER,
                    GR_LEDGER_NAME, 
                    GR_RUNNING_TOTAL_DR, 
                    GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GR_SEGMENT1,
                    GR_SEGMENT2,
                    GR_SEGMENT3,
                    GR_SEGMENT4,
                    GR_SEGMENT5,
                    GR_SEGMENT6,
                    GR_SEGMENT7,
                    GR_SEGMENT8,
                    GR_SEGMENT9,
                    GR_LEGAL_ENTITY_NAME, 
                    GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    GR_INTERCOMPANY_BATCH_NUMBER,
                    GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    GR_GL_BATCH_ID,
                    GR_LE,  
                    GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    GP_GL_ACCOUNTING_DATE,
                    GP_ENTERED_CURRENCY_CODE,
                    GP_FUNCTIONAL_CURRENCY_CODE,
                    GP_EXCHANGE_RATE, 
                    GP_EXCHANGE_RATE_TYPE, 
                    GP_EXCHANGE_RATE_DATE, 
                    GP_GL_JOURNAL_ID, 
                    GP_GL_JOURNAL_NAME,
                    GP_JOURNAL_LINE_NUMBER,
                    GP_LEDGER_NAME, 
                    GP_RUNNING_TOTAL_DR, 
                    GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GP_SEGMENT1,
                    GP_SEGMENT2,
                    GP_SEGMENT3,
                    GP_SEGMENT4,
                    GP_SEGMENT5,
                    GP_SEGMENT6,
                    GP_SEGMENT7,
                    GP_SEGMENT8,
                    GP_SEGMENT9,
                    GP_LEGAL_ENTITY_NAME, 
                    GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    GP_INTERCOMPANY_BATCH_NUMBER,
                    GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    GP_GL_BATCH_ID,
                    GP_LE,
                    GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    ACCOUNTING_PERIOD) 
                    VALUES (LV_BATCH_ID,
                    b.GP_EXTRACT_NAME,
                    b.GR_EXTRACT_NAME,
                    b.GR_GL_ACC_DATE,
                    b.GR_ENTERED_CURRENCY_CODE,
                    b.GR_FUNCTIONAL_CURRENCY_CODE,
                    b.GR_EXCHANGE_RATE, 
                    b.GR_EXCHANGE_RATE_TYPE, 
                    b.GR_EXCHANGE_RATE_DATE, 
                    b.GR_GL_JOURNAL_ID, 
                    b.GR_GL_JOURNAL_NAME,
                    b.GR_JOURNAL_LINE_NUMBER,
                    b.GR_LEDGER_NAME, 
                    b.GR_RUNNING_TOTAL_DR, 
                    b.GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    b.GR_SEGMENT1,
                    b.GR_SEGMENT2,
                    b.GR_SEGMENT3,
                    b.GR_SEGMENT4,
                    b.GR_SEGMENT5,
                    b.GR_SEGMENT6,
                    b.GR_SEGMENT7,
                    b.GR_SEGMENT8,
                    b.GR_SEGMENT9,
                    b.GR_INTERCOMPANY_LEGAL_ENTITY, 
                    b.GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    b.GR_INTERCOMPANY_BATCH_NUMBER,
                    b.GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    b.GR_GL_BATCH_ID,
                    b.GR_LE,
                    b.GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    b.GP_ACC_DATE,
                    b.GP_ENTERED_CURRENCY_CODE,
                    b.GP_FUNCTIONAL_CURRENCY_CODE,
                    b.GP_EXCHANGE_RATE, 
                    b.GP_EXCHANGE_RATE_TYPE, 
                    b.GP_EXCHANGE_RATE_DATE, 
                    b.GP_GL_JOURNAL_ID, 
                    b.GP_GL_JOURNAL_NAME,
                    b.GP_JOURNAL_LINE_NUMBER,
                    b.GP_LEDGER_NAME, 
                    b.GP_RUNNING_TOTAL_DR, 
                    b.GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    b.GP_SEGMENT1,
                    b.GP_SEGMENT2,
                    b.GP_SEGMENT3,
                    b.GP_SEGMENT4,
                    b.GP_SEGMENT5,
                    b.GP_SEGMENT6,
                    b.GP_SEGMENT7,
                    b.GP_SEGMENT8,
                    b.GP_SEGMENT9,
                    b.GP_LEGAL_ENTITY_NAME, 
                    b.GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    b.GP_INTERCOMPANY_BATCH_NUMBER,
                    b.GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    b.GP_GL_BATCH_ID,
                    b.GP_LE,
                    b.GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    to_char(b.GR_GL_ACC_DATE,'MON-YYYY'));

  IF SQL%ROWCOUNT >0 THEN

    LV_MATCH_COUNT :=SQL%ROWCOUNT;

   BEGIN
   SELECT
    LISTAGG(f_name, ',') WITHIN GROUP(ORDER BY f_name)
    INTO L_EXTRACT
FROM
    (
        SELECT unique(gp_extract_name) f_name
        FROM
            WSC_AHCS_LSI_JOURNAL_MATCH_T
        WHERE
            batch_id = LV_BATCH_ID
         UNION ALL
          SELECT unique(gr_extract_name) f_name
        FROM
            WSC_AHCS_LSI_JOURNAL_MATCH_T
        WHERE
            batch_id = LV_BATCH_ID
    );
    END;

    L_FILE_NAME := 'ORACLELSI_GL_'||to_char(sysdate,'DDMMYYYYHH24MISS');

   update WSC_AHCS_LSI_CONTROL_T
   set batch_id=LV_BATCH_ID,
      STATUS='MATCHED',
      INV_PAY_STATUS='NOT APPLICABLE',
      RECEIPT_STATUS='NOT APPLICABLE',
      INV_CREATE_STATUS='NOT APPLICABLE',
      INV_VALIDATION_STATUS='NOT APPLICABLE',
      TO_BE_PROCESSED='Y',
      LAST_UPDATED_DATE=SYSDATE,
      all_extracts=L_EXTRACT,
      file_name=L_FILE_NAME,
      MATCHED_COUNT=LV_MATCH_COUNT,
      ACCOUNTING_DATE=L_ACC_DATE
      --AHCS_ELIGIBLE_LINES=LV_MATCH_COUNT
   Where extract_name=P_FILE_NAME;

   commit;


    INSERT INTO WSC_AHCS_INT_CONTROL_T
			(BATCH_ID,
			SOURCE_APPLICATION,
			TARGET_APPLICATION,
			FILE_NAME,
			STATUS,
			SOURCE_SYSTEM,
			TARGET_SYSTEM,
			CREATED_BY,
			CREATED_DATE ,
			LAST_UPDATED_BY,
			LAST_UPDATED_DATE)
			values (
			LV_BATCH_ID,
			'Oracle LSI',
			'Oracle AHCS',
			L_FILE_NAME,
			'TRANSFORM_SUCCESS',
			'Oracle LSI'   ,
			'Oracle ERP Cloud' ,
			'FININT',
			SYSDATE,
			'FININT',
			SYSDATE
			);

   commit;

   update WSC_AHCS_LSI_JOURNAL_MATCH_T
   set file_name=L_FILE_NAME
   where batch_id=LV_BATCH_ID;

   commit;

    update WSC_AHCS_LSI_JOURNAL_T
   set file_name=L_FILE_NAME,
      batch_id=LV_BATCH_ID,
      GL_ACCOUNTING_DATE=L_ACC_DATE
    where to_be_matched = 'Y' and extract_name in (SELECT unique(gp_extract_name) f_name
                          FROM  WSC_AHCS_LSI_JOURNAL_MATCH_T
                          WHERE batch_id = LV_BATCH_ID
                           UNION ALL
                          SELECT unique(gr_extract_name) f_name
                        FROM
                            WSC_AHCS_LSI_JOURNAL_MATCH_T
                        WHERE
                            batch_id = LV_BATCH_ID);
    commit;


    update WSC_AHCS_LSI_JOURNAL_T a
   set status='MATCHED',
      TO_BE_MATCHED='N'
    where exists (SELECT 1
                  FROM  WSC_AHCS_LSI_JOURNAL_MATCH_T
                  WHERE batch_id = LV_BATCH_ID
                  AND a.GL_BATCH_ID=GP_GL_BATCH_ID
                  AND a.GL_JOURNAL_ID=GP_GL_JOURNAL_ID
                  AND a.JOURNAL_LINE_NUMBER=GP_JOURNAL_LINE_NUMBER
                  UNION ALL
                   SELECT 1
                  FROM  WSC_AHCS_LSI_JOURNAL_MATCH_T
                  WHERE batch_id = LV_BATCH_ID
                  AND a.GL_BATCH_ID=GR_GL_BATCH_ID
                  AND a.GL_JOURNAL_ID=GR_GL_JOURNAL_ID
                  AND a.JOURNAL_LINE_NUMBER=GR_JOURNAL_LINE_NUMBER);
    commit;

    WSC_LSI_NETTING_P('GL',LV_BATCH_ID);


 ELSE 

    update WSC_AHCS_LSI_CONTROL_T
   set STATUS='NOT MATCHED',
      TO_BE_PROCESSED='N',
      LAST_UPDATED_DATE=SYSDATE    
   Where extract_name=P_FILE_NAME;

   Commit;

 END IF; 

 begin
  select count(1) 
  INTO LV_GP_UNMATCHED
  from WSC_AHCS_LSI_JOURNAL_T 
  where status is null;
 END; 




 update wsc_ahcs_lsi_control_t 
 set AP_UNMATCH_COUNT=LV_GP_UNMATCHED
 where batch_id=LV_BATCH_ID;
 commit;


EXCEPTION
    WHEN OTHERS THEN

      update WSC_AHCS_LSI_CONTROL_T
   set STATUS='NOT MATCHED',
      TO_BE_PROCESSED='N',
      LAST_UPDATED_DATE=SYSDATE    
   Where extract_name=P_FILE_NAME;
   commit;

          LV_ERROR_MSG := substr(SQLERRM,1,200);

       insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (P_FILE_NAME ,
                    'ERROR IN MATCHING' ,
                    LV_ERROR_MSG,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    LV_BATCH_ID,
                    'Y');
                 Commit; 

          wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Journals Matching Process-'||sqlerrm);

END;  

PROCEDURE WSC_LSI_APAR_MATCH_P(P_FILE_NAME VARCHAR2)
IS

  Cursor Dist_payment(P_BATCH_ID NUMBER) is Select  AP_PAYMENT_CURRENCY,
                                                     AP_BU, 
                                                    AP_BANK_ACC,
                                                    AP_VENDOR_NAME, 
                                                     AP_VENDOR_SITE,
                                                    AP_EXCHANGE_RATE_TYPE FROM(
                                                    SELECT AP.AP_PAYMENT_CURRENCY,
                                                     AP.AP_BU, 
                                                    AP.AP_BANK_ACC,
                                                    AP.AP_VENDOR_NAME, 
                                                    AP.AP_VENDOR_SITE,
                                                    AP.AP_EXCHANGE_RATE_TYPE
                                                    FROM WSC_AHCS_LSI_AP_AR_MATCH_T AP
                                                    WHERE (AP.STATUS IS NULL OR AP.STATUS='ERROR')
                                                    AND BATCH_ID=P_BATCH_ID
                                                    Group by AP.AP_PAYMENT_CURRENCY,
                                                     AP.AP_BU, 
                                                    AP.AP_BANK_ACC,
                                                    AP.AP_VENDOR_NAME, 
                                                    AP.AP_VENDOR_SITE,
                                                    AP.AP_EXCHANGE_RATE_TYPE);

   /* Cursor C_INV_SELECTION( P_BATCH_ID NUMBER,
    P_AP_PAYMENT_CURRENCY VARCHAR2,
    P_AP_BU VARCHAR2,
    P_AP_BANK_ACC VARCHAR2,
    P_AP_VENDOR_NAME VARCHAR2,
    P_AP_VENDOR_SITE VARCHAR2,
    P_AP_EXCHANGE_RATE_TYPE VARCHAR2) is
                with main as (
              select ap_invoice_id,rownum from WSC_AHCS_LSI_AP_AR_MATCH_T
              where batch_id=P_BATCH_ID and AP_ENTERED_INVOICE_AMOUNT>0 and ap_payment_currency=P_AP_PAYMENT_CURRENCY
              AND AP_BU=P_AP_BU and AP_BANK_ACC=P_AP_BANK_ACC and AP_VENDOR_NAME=P_AP_VENDOR_NAME
              AND AP_VENDOR_SITE=P_AP_VENDOR_SITE AND NVL(AP_EXCHANGE_RATE_TYPE,'1')=NVL(P_AP_EXCHANGE_RATE_TYPE,'1')
              order by AP_ENTERED_INVOICE_AMOUNT desc
            ), submain as (
              select r.*,
                     ceil ( rownum / 250 ) grp
              from   main r
            )
              select grp,
                     listagg ( ap_invoice_id, ',' )
                       within group (
                         order by ap_invoice_id
                       ) vals
              from   submain
              group  by grp; */

      Cursor C_INV_SELECTION( P_BATCH_ID NUMBER,
    P_AP_PAYMENT_CURRENCY VARCHAR2,
    P_AP_BU VARCHAR2,
    P_AP_BANK_ACC VARCHAR2,
    P_AP_VENDOR_NAME VARCHAR2,
    P_AP_VENDOR_SITE VARCHAR2,
    P_AP_EXCHANGE_RATE_TYPE VARCHAR2) is
              select * from WSC_AHCS_LSI_AP_AR_MATCH_T APAR
              where batch_id=P_BATCH_ID and AP_ENTERED_INVOICE_AMOUNT>0 and ap_payment_currency=P_AP_PAYMENT_CURRENCY
              AND AP_BU=P_AP_BU and AP_BANK_ACC=P_AP_BANK_ACC and AP_VENDOR_NAME=P_AP_VENDOR_NAME
              AND AP_VENDOR_SITE=P_AP_VENDOR_SITE AND NVL(AP_EXCHANGE_RATE_TYPE,'1')=NVL(P_AP_EXCHANGE_RATE_TYPE,'1')
              AND NOT EXISTS (Select 1 from WSC_AHCS_LSI_AP_T
                                WHERE PAYMENT_CURRENCY=P_AP_PAYMENT_CURRENCY
                                AND BU=P_AP_BU
                                AND BANK_ACC=P_AP_BANK_ACC
                                AND VENDOR_NAME=P_AP_VENDOR_NAME
                                AND VENDOR_SITE=P_AP_VENDOR_SITE
                                AND INTERCOMPANY_BATCH_NUMBER=APAR.AP_INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=APAR.AP_IC_TRX_NUMBER
                               -- AND INVOICE_NUMBER=APAR.AP_INVOICE_NUMBER
                                )
              order by AP_ENTERED_INVOICE_AMOUNT desc;

        Cursor C_Credit_Memo(P_AP_PAYMENT_CURRENCY VARCHAR2,
    P_AP_BU VARCHAR2,
    P_AP_BANK_ACC VARCHAR2,
    P_AP_VENDOR_NAME VARCHAR2,
    P_AP_VENDOR_SITE VARCHAR2,
    P_AP_EXCHANGE_RATE_TYPE VARCHAR2) IS
        Select APART.*,LT.DESCRIPTION,LT.TAG,LT.LEDGER_NAME PAY_METHOD FROM WSC_AHCS_LSI_AP_AR_T APART,WSC_AHCS_LSI_LOOKUP_T LT   
        where record_type='AP' and check_id is null and batch_id is null and ENTERED_INVOICE_AMOUNT<0 and invoice_currency_code=P_AP_PAYMENT_CURRENCY
              AND BU=P_AP_BU and BANK_ACC=P_AP_BANK_ACC and VENDOR_CUST_NAME=P_AP_VENDOR_NAME
              AND VENDOR_CUST_SITE=P_AP_VENDOR_SITE AND NVL(EXCHANGE_RATE_TYPE,'1')=NVL(P_AP_EXCHANGE_RATE_TYPE,'1')
              AND NOT EXISTS (Select 1 FROM
                                WSC_AHCS_LSI_AP_T
                                WHERE 1=1 --INVOICE_NUMBER=APART.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=APART.IC_TRX_NUMBER
                                AND BU=APART.BU
                                AND INTERCOMPANY_BATCH_NUMBER=APART.INTERCOMPANY_BATCH_NUMBER)
             AND EXISTS (Select 1 FROM
                                WSC_AHCS_LSI_AP_AR_T
                                WHERE record_type='AR'
                                AND 1=1 --INVOICE_NUMBER=APART.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=APART.IC_TRX_NUMBER
                                --AND BU=APART.BU
                                AND ENTERED_INVOICE_AMOUNT=APART.ENTERED_INVOICE_AMOUNT
                                AND INTERCOMPANY_BATCH_NUMBER=APART.INTERCOMPANY_BATCH_NUMBER)
              AND LT.LOOKUP_TYPE='WSC_LSI_BANK_DETAILS'
              AND LT.ATTRIBUTE1=APART.INTERCOMPANY_LEGAL_ENTITY
              order by (ENTERED_INVOICE_AMOUNT) desc;

   LV_BATCH_ID NUMBER;        
   L_EXTRACT    VARCHAR2(500);
   L_FILE_NAME VARCHAR2(200);
   LV_ERROR_MSG VARCHAR2(200);
   LV_COUNTER1 NUMBER:=0;
   LV_COUNTER2 NUMBER:=0;
   L_ACC_DATE DATE;
   LV_PAYNUM NUMBER :=0;
   LV_MATCH_COUNT NUMBER;
   LV_AP_UNMATCHED NUMBER :=0;
   LV_AR_UNMATCHED NUMBER := 0;
   LV_ACC_DATE TIMESTAMP;
   LV_SUM_AP_ENTERED_AMT NUMBER := 0;
   LV_AP_COUNT NUMBER;
   LV_IC_BTCH_NUMBER VARCHAR2(180);
   LV_INVOICE_COUNTER NUMBER :=0;

BEGIN

 BEGIN
 DELETE FROM WSC_AHCS_LSI_AP_AR_T WHERE payment_number IS NULL  AND status IS NULL;
 COMMIT;
 Exception
    WHEN OTHERS THEN
        NULL;
 END; 

  BEGIN
  INSERT INTO WSC_AHCS_LSI_AP_AR_T 
    SELECT * FROM WSC_AHCS_LSI_AP_AR_TMP_T A
     WHERE NOT EXISTS (SELECT * FROM WSC_AHCS_LSI_AP_AR_T 
                    WHERE RECORD_TYPE=A.RECORD_TYPE 
                    AND INVOICE_ID=A.INVOICE_ID);
                  --  AND INVOICE_CURRENCY_CODE=A.INVOICE_CURRENCY_CODE
                  --  AND INTERCOMPANY_BATCH_NUMBER=A.INTERCOMPANY_BATCH_NUMBER
                  --  AND BU=A.BU);
   COMMIT;                  
    END; 

  BEGIN  
  SELECT DISTINCT ACCOUNTING_DATE
  INTO LV_ACC_DATE
  FROM WSC_AHCS_LSI_AP_AR_TMP_T;
  EXCEPTION 
    WHEN OTHERS THEN
        LV_ACC_DATE:=NULL;
   END;     



  Begin
       EXECUTE IMMEDIATE 'TRUNCATE TABLE WSC_AHCS_LSI_AP_AR_TMP_T'; 


Exception
  WHEN OTHERS THEN
    NULL;
  END;   

BEGIN
    SELECT CASE
        WHEN trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
           trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
        ELSE 
            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
        END
        INTO 
        L_ACC_DATE
        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
        AND trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
                AND ((trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
                      OR (trunc(CAST(NVL(LV_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));

END;

  Select WSC_LSI_APAR_BATCH_P
  INTO LV_BATCH_ID 
  FROM DUAL;



  MERGE INTO WSC_AHCS_LSI_AP_AR_MATCH_T a
             USING ( SELECT AP.extract_name extract_name_ap,
                            AP.INVOICE_DATE AP_INVOICE_DATE,
                            AP.INVOICE_CURRENCY_CODE AP_INVOICE_CURRENCY_CODE,
                             AP.BU AP_BU, 
                             LT.ATTRIBUTE2 AP_BANK_ACC, ---AP.BANK_ACC
                             AP.VENDOR_CUST_NAME AP_VENDOR_CUST_NAME, 
                            AP.VENDOR_CUST_SITE AP_VENDOR_CUST_SITE,
                            AP.EXCHANGE_RATE AP_EXCHANGE_RATE,
                            AP.EXCHANGE_RATE_DATE AP_EXCHANGE_RATE_DATE,
                            AP.INVOICE_NUMBER AP_INVOICE_NUMBER, 
                            AP.LEDGER_NAME AP_LEDGER_NAME, 
                            AP.ACCOUNTING_CLASS AP_ACCOUNTING_CLASS, 
                             L_ACC_DATE AP_ACCOUNTING_DATE,  
                            AP.ENTERED_INVOICE_AMOUNT AP_ENTERED_INVOICE_AMOUNT, 
                            AP.ACCOUNTED_INVOICE_AMOUNT AP_ACCOUNTED_INVOICE_AMOUNT, 
                            AP.EXCHANGE_RATE_TYPE AP_EXCHANGE_RATE_TYPE,
                            AP.GL_CODE_COMBINATION AP_GL_CODE_COMBINATION, 
                            AP.INTERCOMPANY_LEGAL_ENTITY AP_INTERCOMPANY_LEGAL_ENTITY, 
                            AP.INTERCOMPANY_TRANSACTION_TYPE AP_INTERCOMPANY_TRANSACTION_TYPE, 
                            AP.INTERCOMPANY_BATCH_NUMBER AP_INTERCOMPANY_BATCH_NUMBER,
                            AP.FUNCTIONAL_CURRENCY_CODE AP_FUNCTIONAL_CURRENCY_CODE,
                            AP.NETTING_LEDGER AP_NETTING_LEDGER,
                            AP.NETTING_FUN_CURR AP_NETTING_FUN_CURR,
                            AP.IC_TRX_NUMBER AP_IC_TRX_NUMBER,
                             AP.INVOICE_ID AP_INVOICE_ID,
                            AR.extract_name extract_name_ar,
                             AR.BU AR_BU, 
                             AR.BU_ID AR_BU_ID,
                            AR.INVOICE_NUMBER AR_INVOICE_NUMBER, 
                             AR.LEDGER_NAME AR_LEDGER_NAME, 
                            AR.ACCOUNTING_CLASS AR_ACCOUNTING_CLASS, 
                             AR.INVOICE_DATE AR_INVOICE_DATE, 
                             L_ACC_DATE AR_ACCOUNTING_DATE, 
                            AR.EXCHANGE_RATE AR_EXCHANGE_RATE, 
                            AR.EXCHANGE_RATE_TYPE AR_EXCHANGE_RATE_TYPE, 
                            AR.EXCHANGE_RATE_DATE AR_EXCHANGE_RATE_DATE, 
                            AR.ENTERED_INVOICE_AMOUNT AR_ENTERED_INVOICE_AMOUNT, 
                            AR.ACCOUNTED_INVOICE_AMOUNT AR_ACCOUNTED_INVOICE_AMOUNT, 
                            AR.GL_CODE_COMBINATION AR_GL_CODE_COMBINATION, 
                            AR.INTERCOMPANY_LEGAL_ENTITY AR_INTERCOMPANY_LEGAL_ENTITY, 
                            AR.INTERCOMPANY_TRANSACTION_TYPE AR_INTERCOMPANY_TRANSACTION_TYPE, 
                            AR.INTERCOMPANY_BATCH_NUMBER AR_INTERCOMPANY_BATCH_NUMBER, 
                            AR.VENDOR_CUST_NAME AR_VENDOR_CUST_NAME, 
                            AR.VENDOR_CUST_SITE AR_VENDOR_CUST_SITE, 
                            AR.ACCOUNT_NUMBER AR_ACCOUNT_NUMBER, 
                            AR.LOCKBOX_NUMBER AR_LOCKBOX_NUMBER,
                             AR.LOCKBOX_ID AR_LOCKBOX_ID,            
                            AR.BANK_ORIGINATION_NUMBER AR_BANK_ORIGINATION_NUMBER, 
                            AR.INVOICE_CURRENCY_CODE AR_INVOICE_CURRENCY_CODE, 
                            AR.FUNCTIONAL_CURRENCY_CODE AR_FUNCTIONAL_CURRENCY_CODE,
                            AR.IC_TRX_NUMBER AR_IC_TRX_NUMBER,
                             AR.INVOICE_ID AR_INVOICE_ID,
                            AP.ACCOUNTING_PERIOD,
                            LT.DESCRIPTION,
                            LT.TAG,
                            LT.LEDGER_NAME PAY_METHOD
                FROM WSC_AHCS_LSI_AP_AR_T AP,WSC_AHCS_LSI_AP_AR_T AR,
                    WSC_AHCS_LSI_LOOKUP_T LT
                WHERE 1=1 --AP.INVOICE_NUMBER=AR.INVOICE_NUMBER
                AND AP.RECORD_TYPE='AP'
                AND AR.RECORD_TYPE='AR'
                AND AP.ACCOUNTING_CLASS='LIABILITY'
                AND AR.ACCOUNTING_CLASS='RECEIVABLE'
                AND AP.ENTERED_INVOICE_AMOUNT=AR.ENTERED_INVOICE_AMOUNT
                AND AR.INTERCOMPANY_BATCH_NUMBER=AP.INTERCOMPANY_BATCH_NUMBER
                AND AR.IC_TRX_NUMBER=AP.IC_TRX_NUMBER
                AND AP.Check_id IS NULL
                AND AR.Payment_NUMber IS NULL
                AND AP.BATCH_ID IS NULL
                AND AR.BATCH_ID IS NULL
                AND substr(AP.GL_CODE_COMBINATION,1,4)=substr(AR.GL_CODE_COMBINATION,29,4)
                AND substr(AR.GL_CODE_COMBINATION,1,4)=substr(AP.GL_CODE_COMBINATION,29,4)
                AND NOT EXISTS (Select 1 FROM
                                WSC_AHCS_LSI_AP_T
                                WHERE 1=1 --INVOICE_NUMBER=AP.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=AP.IC_TRX_NUMBER
                                AND BU=AP.BU
                                AND INTERCOMPANY_BATCH_NUMBER=AP.INTERCOMPANY_BATCH_NUMBER)
                 AND NOT EXISTS (SELECT 1 FROM 
                                WSC_AHCS_LSI_AR_T
                                WHERE 1=1 --INVOICE_NUMBER=AR.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER
                                AND BU=AR.BU
                                AND INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER)
                  AND LT.lookup_type='WSC_LSI_BANK_DETAILS'
                  AND LT.ATTRIBUTE1=AP.INTERCOMPANY_LEGAL_ENTITY) b
            ON (a.AP_INTERCOMPANY_BATCH_NUMBER = b.AP_INTERCOMPANY_BATCH_NUMBER AND a.AP_BU = b.AP_BU AND a.AR_BU = b.AR_BU AND substr(a.AP_GL_CODE_COMBINATION,1,4)=substr(b.AR_GL_CODE_COMBINATION,29,4) and a.AR_IC_TRX_NUMBER=b.AR_IC_TRX_NUMBER and  a.AP_IC_TRX_NUMBER=b.AP_IC_TRX_NUMBER)
            WHEN NOT MATCHED THEN
                INSERT (BATCH_ID,
                        extract_name_ap,
                        extract_name_ar,
                        AP_PAYMENT_DATE,
                        AP_PAYMENT_TYPE,
                        AP_PAYMENT_DESC,
                        AP_PAYMENT_CURRENCY,
                        AP_BU, 
                        AP_VENDOR_NAME, 
                        AP_VENDOR_SITE,
                        AP_BANK_ACC,
                        AP_PAYMENT_METHOD,
                        AP_PAYMENT_PROCESS_PROFILE,
                        AP_PAYMENT_DOCUMENT,
                        AP_EXCHANGE_RATE, 
                        AP_EXCHANGE_RATE_TYPE, 
                        AP_EXCHANGE_RATE_DATE, 
                        AP_INVOICE_NUMBER, 
                        AP_LEDGER_NAME, 
                        AP_ACCOUNTING_CLASS, 
                        AP_INVOICE_DATE, 
                        AP_ACCOUNTING_DATE, 
                        AP_ENTERED_INVOICE_AMOUNT, 
                        AP_ACCOUNTED_INVOICE_AMOUNT, 
                        AP_GL_CODE_COMBINATION, 
                        AP_INTERCOMPANY_LEGAL_ENTITY, 
                        AP_INTERCOMPANY_TRANSACTION_TYPE, 
                        AP_INTERCOMPANY_BATCH_NUMBER,
                        AP_Discount_taken,
                        AP_installment_number,
                        AP_FUNCTIONAL_CURRENCY_CODE,
                        AP_NETTING_LEDGER,
                        AP_NETTING_FUN_CURR,
                          AP_IC_TRX_NUMBER,
                          AP_INVOICE_ID,
                          AR_BU,
                          AR_BU_ID,
                        AR_INVOICE_NUMBER, 
                        AR_LEDGER_NAME, 
                        AR_ACCOUNTING_CLASS, 
                        AR_INVOICE_DATE, 
                        AR_ACCOUNTING_DATE, 
                        AR_EXCHANGE_RATE, 
                        AR_EXCHANGE_RATE_TYPE, 
                        AR_EXCHANGE_RATE_DATE, 
                        AR_ENTERED_INVOICE_AMOUNT, 
                        AR_ACCOUNTED_INVOICE_AMOUNT, 
                        AR_GL_CODE_COMBINATION, 
                        AR_INTERCOMPANY_LEGAL_ENTITY, 
                        AR_INTERCOMPANY_TRANSACTION_TYPE, 
                        AR_INTERCOMPANY_BATCH_NUMBER, 
                        AR_CUST_NAME, 
                        AR_CUST_SITE, 
                        AR_ACCOUNT_NUMBER, 
                        AR_LOCKBOX_NUMBER, 
                      AR_LOCKBOX_ID,
                        AR_BANK_ORIGINATION_NUMBER, 
                        AR_INVOICE_CURRENCY_CODE, 
                        AR_FUNCTIONAL_CURRENCY_CODE,
                      AR_IC_TRX_NUMBER,
                      AR_INVOICE_ID,
                        ACCOUNTING_PERIOD) 
                VALUES (LV_BATCH_ID,
                        b.extract_name_ap,
                        b.extract_name_ar,
                        b.AP_INVOICE_DATE,
                        'Manual',
                        'Manual_Payment',
                        b.AP_INVOICE_CURRENCY_CODE,
                        b.AP_BU, 
                        b.AP_VENDOR_CUST_NAME, 
                        b.AP_VENDOR_CUST_SITE,
                        b.AP_BANK_ACC,
                        b.description, --'LSI',
                      b.tag, --'WSC Payment Process',
                      b.PAY_METHOD, --'IC CHECK',
                      b.AP_EXCHANGE_RATE, 
                      b.AP_EXCHANGE_RATE_TYPE, 
                        b.AP_EXCHANGE_RATE_DATE,
                        b.AP_INVOICE_NUMBER, 
                        b.AP_LEDGER_NAME, 
                        b.AP_ACCOUNTING_CLASS, 
                        b.AP_INVOICE_DATE, 
                        b.AP_ACCOUNTING_DATE,  
                        b.AP_ENTERED_INVOICE_AMOUNT, 
                        b.AP_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AP_GL_CODE_COMBINATION, 
                        b.AP_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AP_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AP_INTERCOMPANY_BATCH_NUMBER,
                        0,
                        1,
                        b.AP_FUNCTIONAL_CURRENCY_CODE,
                        b.AP_NETTING_LEDGER,
                        b.AP_NETTING_FUN_CURR,
                      b.AP_IC_TRX_NUMBER,
                       b.AP_INVOICE_ID,
                      b.AR_BU, 
                      b.AR_BU_ID,
                        b.AR_INVOICE_NUMBER, 
                        b.AR_LEDGER_NAME, 
                        b.AR_ACCOUNTING_CLASS, 
                        b.AR_INVOICE_DATE, 
                        b.AR_ACCOUNTING_DATE, 
                        b.AR_EXCHANGE_RATE, 
                        b.AR_EXCHANGE_RATE_TYPE, 
                        b.AR_EXCHANGE_RATE_DATE, 
                        b.AR_ENTERED_INVOICE_AMOUNT, 
                        b.AR_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AR_GL_CODE_COMBINATION, 
                        b.AR_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AR_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AR_INTERCOMPANY_BATCH_NUMBER, 
                        b.AR_VENDOR_CUST_NAME, 
                        b.AR_VENDOR_CUST_SITE, 
                        b.AR_ACCOUNT_NUMBER, 
                        b.AR_LOCKBOX_NUMBER, 
                      b.AR_LOCKBOX_ID,
                        b.AR_BANK_ORIGINATION_NUMBER, 
                        b.AR_INVOICE_CURRENCY_CODE, 
                        b.AR_FUNCTIONAL_CURRENCY_CODE,
                      b.AR_IC_TRX_NUMBER,
                      b.AR_INVOICE_ID,
                        b.ACCOUNTING_PERIOD); 


   IF SQL%ROWCOUNT >0 THEN

   LV_MATCH_COUNT := SQL%ROWCOUNT;

   BEGIN
   SELECT
    LISTAGG(f_name, ',') WITHIN GROUP(ORDER BY f_name)
    INTO L_EXTRACT
FROM
    (
        SELECT unique(extract_name_ap) f_name
        FROM
            WSC_AHCS_LSI_AP_AR_MATCH_T
        WHERE
            batch_id = LV_BATCH_ID
        UNION
        SELECT unique(extract_name_ar) f_name
        FROM
            WSC_AHCS_LSI_AP_AR_MATCH_T
        WHERE
            batch_id = LV_BATCH_ID
    );
    END;

    L_FILE_NAME := 'ORACLELSI_APAR_'||to_char(sysdate,'DDMMYYYYHH24MISS');

   update WSC_AHCS_LSI_CONTROL_T
   set batch_id=LV_BATCH_ID,
      STATUS='MATCHED',
      --TO_BE_PROCESSED='Y',
      LAST_UPDATED_DATE=SYSDATE,
      all_extracts=L_EXTRACT,
      file_name=L_FILE_NAME,
      accounting_date=L_ACC_DATE,
      MATCHED_COUNT=LV_MATCH_COUNT
   Where extract_name=P_FILE_NAME;

   commit;

       INSERT INTO WSC_AHCS_INT_CONTROL_T
                                           (BATCH_ID,
                                           SOURCE_APPLICATION,
                                           TARGET_APPLICATION,
                                           FILE_NAME,
                                           STATUS,
                                           SOURCE_SYSTEM,
                                           TARGET_SYSTEM,
                                           CREATED_BY,
                                           CREATED_DATE ,
                                           LAST_UPDATED_BY,
                                           LAST_UPDATED_DATE)
                                           values (
                                           LV_BATCH_ID,
                                           'Oracle LSI',
                                           'Oracle AHCS',
                                           L_FILE_NAME,
                                           'TRANSFORM_SUCCESS',
                                           'Oracle LSI'   ,
                                           'Oracle ERP Cloud' ,
                                           'FININT',
                                           SYSDATE,
                                           'FININT',
                                           SYSDATE
                                           );

   commit;

   update WSC_AHCS_LSI_AP_AR_MATCH_T
   set file_name=L_FILE_NAME
   where batch_id=LV_BATCH_ID;

   commit; 

  /*  update WSC_AHCS_LSI_AP_AR_T
   set file_name=L_FILE_NAME,
      batch_id=LV_BATCH_ID
    where (extract_name,INTERCOMPANY_BATCH_NUMBER) in (SELECT unique(extract_name_ap),AP_INTERCOMPANY_BATCH_NUMBER
                          FROM  WSC_AHCS_LSI_AP_AR_MATCH_T
                          WHERE batch_id = LV_BATCH_ID
                          UNION 
                          SELECT unique(extract_name_ar),AR_INTERCOMPANY_BATCH_NUMBER
                          FROM  WSC_AHCS_LSI_AP_AR_MATCH_T
                          WHERE batch_id = LV_BATCH_ID);
    commit;

    update WSC_AHCS_LSI_AP_AR_T a
    set a.status='MATCHED'
    where batch_id=LV_BATCH_ID
    AND EXISTS (Select 1
                    FROM WSC_AHCS_LSI_AP_AR_MATCH_T
                    WHERE ap_intercompany_batch_number=a.intercompany_batch_number
                    AND (AR_IC_TRX_NUMBER=a.IC_TRX_NUMBER OR AP_IC_TRX_NUMBER=a.IC_TRX_NUMBER)
                    AND a.GL_CODE_COMBINATION=GL_CODE_COMBINATION);
     commit; */



  For r_Dist_payment in Dist_payment(LV_BATCH_ID) LOOP

      LV_COUNTER1 := LV_COUNTER1+1;

    <<PAYNUM_RESET>>

      LV_PAYNUM := WSC_AP_PAYMENT_LSI_SEQ.NEXTVAL;
      LV_INVOICE_COUNTER := 1;
      LV_SUM_AP_ENTERED_AMT := 0;

For r_INV_SELECTION in C_INV_SELECTION(LV_BATCH_ID,r_Dist_payment.AP_PAYMENT_CURRENCY,r_Dist_payment.AP_BU,r_Dist_payment.AP_BANK_ACC,r_Dist_payment.AP_VENDOR_NAME,
r_Dist_payment.AP_VENDOR_SITE,r_Dist_payment.AP_EXCHANGE_RATE_TYPE) LOOP

         IF LV_INVOICE_COUNTER = 500 THEN
                 commit;
                 GOTO PAYNUM_RESET;
         END IF; 

        LV_INVOICE_COUNTER := LV_INVOICE_COUNTER +1;

        LV_SUM_AP_ENTERED_AMT := LV_SUM_AP_ENTERED_AMT + r_INV_SELECTION.AP_ENTERED_INVOICE_AMOUNT;
       -- logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC1',r_INV_SELECTION.intercompany_batch_number_ap,sysdate );

      /*  select sum(AP_ENTERED_INVOICE_AMOUNT) into LV_SUM_AP_ENTERED_AMT  from WSC_AHCS_LSI_AP_AR_MATCH_T where AP_INVOICE_ID in (  with rws as (
                                              select r_INV_SELECTION.VALS str from dual
                                            )
                                              select regexp_substr (
                                                       str,
                                                       '[^,]+',
                                                       1,
                                                       level
                                                     ) value
                                              from   rws
                                              connect by level <= 
                                                length ( str ) - length ( replace ( str, ',' ) ) + 1); */


       BEGIN
    /*      MERGE INTO WSC_AHCS_LSI_AP_T  a
             USING ( SELECT AP.FILE_NAME,
                            L_ACC_DATE AP_INVOICE_DATE,
                                                                                                    AP.AP_PAYMENT_CURRENCY,
                                                                                                     AP.AP_BU, 
                            LOOKUP.ATTRIBUTE2 AP_BANK_ACC,
                            LOOKUP.LEDGER_NAME PAYMENT_DOC,  (Basically Attribute3,in table structure, it is name as LEDGER_NAME but it is Payment Doc 
                                                                                                    AP.AP_VENDOR_NAME, 
                                                                                                    AP.AP_VENDOR_SITE,
                            AP.AP_EXCHANGE_RATE,
                                                                                                    AP.AP_EXCHANGE_RATE_DATE,
                                                                                                    AP.AP_INVOICE_NUMBER, 
                                                                                                    AP.AP_LEDGER_NAME, 
                                                                                                    AP.AP_ACCOUNTING_CLASS, 
                                                                                                     L_ACC_DATE AP_ACCOUNTING_DATE,   
                                                                                                    AP.AP_ENTERED_INVOICE_AMOUNT, 
                                                                                                    AP.AP_ACCOUNTED_INVOICE_AMOUNT, 
                            AP.AP_EXCHANGE_RATE_TYPE,
                                                                                                    AP.AP_GL_CODE_COMBINATION, 
                                                                                                    AP.AP_INTERCOMPANY_LEGAL_ENTITY, 
                                                                                                    AP.AP_INTERCOMPANY_TRANSACTION_TYPE, 
                                                                                                    AP.AP_INTERCOMPANY_BATCH_NUMBER,
                            AP.AP_FUNCTIONAL_CURRENCY_CODE,
                            AP.AP_NETTING_LEDGER,
                            AP.AP_NETTING_FUN_CURR,
                                                                                                    AP.AP_IC_TRX_NUMBER,
                                                                                                    AP.AP_INVOICE_ID,
                            to_char(L_ACC_DATE,'MON-YYYY') ACCOUNTING_PERIOD
                FROM WSC_AHCS_LSI_AP_AR_MATCH_T AP,wsc_ahcs_lsi_lookup_t LOOKUP
                WHERE 1=1
                 AND BATCH_ID=LV_BATCH_ID
                                                          AND (AP.STATUS IS NULL or AP.STATUS='ERROR')
                AND LOOKUP.ATTRIBUTE1=AP.AP_INTERCOMPANY_LEGAL_ENTITY
                AND LOOKUP.LOOKUP_TYPE='WSC_LSI_BANK_DETAILS'
                AND AP.AP_PAYMENT_CURRENCY=r_Dist_payment.AP_PAYMENT_CURRENCY
                AND AP.AP_BU=r_Dist_payment.AP_BU
                AND NVL(AP.AP_BANK_ACC,1)=NVL(r_Dist_payment.AP_BANK_ACC,1)
                AND AP.AP_VENDOR_NAME=r_Dist_payment.AP_VENDOR_NAME
                AND AP.AP_VENDOR_SITE=r_Dist_payment.AP_VENDOR_SITE
                AND DECODE(AP.AP_EXCHANGE_RATE_TYPE,NULL,'1',AP.AP_EXCHANGE_RATE_TYPE)=NVL(r_Dist_payment.AP_EXCHANGE_RATE_TYPE,'1')
                AND AP.AP_INVOICE_ID IN (  with rws as (
                                              select r_INV_SELECTION.VALS str from dual
                                            )
                                              select regexp_substr (
                                                       str,
                                                       '[^,]+',
                                                       1,
                                                       level
                                                     ) value
                                              from   rws
                                              connect by level <= 
                                                length ( str ) - length ( replace ( str, ',' ) ) + 1)
                AND NOT EXISTS (Select 1 from WSC_AHCS_LSI_AP_T
                                WHERE PAYMENT_CURRENCY=r_Dist_payment.AP_PAYMENT_CURRENCY
                                AND BU=r_Dist_payment.AP_BU
                                AND BANK_ACC=r_Dist_payment.AP_BANK_ACC
                                AND VENDOR_NAME=r_Dist_payment.AP_VENDOR_NAME
                                AND VENDOR_SITE=r_Dist_payment.AP_VENDOR_SITE
                                AND INTERCOMPANY_BATCH_NUMBER=AP.AP_INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=AP.AP_IC_TRX_NUMBER
                                AND INVOICE_NUMBER=AP.AP_INVOICE_NUMBER)) b
            ON (a.INVOICE_NUMBER = b.AP_INVOICE_NUMBER AND a.BU = b.AP_BU AND a.VENDOR_NAME=b.AP_VENDOR_NAME AND a.VENDOR_SITE=b.AP_VENDOR_SITE)
            WHEN NOT MATCHED THEN
                INSERT (BATCH_ID,
                        FILE_NAME,
                        PAYMENT_NUM ,
                        PAYMENT_DATE,
                        PAYMENT_TYPE,
                        PAYMENT_DESC,
                        PAYMENT_CURRENCY,
                        BU, 
                        VENDOR_NAME, 
                        VENDOR_SITE,
                        BANK_ACC,
                        PAYMENT_METHOD,
                        PAYMENT_PROCESS_PROFILE,
                        PAYMENT_DOCUMENT,
                        EXCHANGE_RATE, 
                        EXCHANGE_RATE_TYPE, 
                        EXCHANGE_RATE_DATE, 
                        INVOICE_NUMBER, 
                        LEDGER_NAME, 
                        ACCOUNTING_CLASS, 
                        INVOICE_DATE, 
                        ACCOUNTING_DATE, 
                        ENTERED_INVOICE_AMOUNT, 
                        ACCOUNTED_INVOICE_AMOUNT, 
                        GL_CODE_COMBINATION, 
                        INTERCOMPANY_LEGAL_ENTITY, 
                        INTERCOMPANY_TRANSACTION_TYPE, 
                        INTERCOMPANY_BATCH_NUMBER,
                        Discount_taken,
                        installment_number,
                        FUNCTIONAL_CURRENCY_CODE,
                        NETTING_LEDGER,
                        NETTING_FUN_CURR,
                                                                                      IC_TRX_NUMBER,
                                                                                      INVOICE_ID,
                        ACCOUNTING_PERIOD,
                        TO_BE_REPROCESSED) 
                VALUES (LV_BATCH_ID,
                        b.FILE_NAME,
                       LV_PAYNUM,
                        L_ACC_DATE,
                        'Manual',
                        'BU :'|| b.AP_BU||', PAAS Batch_ID :'||LV_BATCH_ID,
                        b.AP_PAYMENT_CURRENCY,
                        b.AP_BU, 
                        b.AP_VENDOR_NAME, 
                        b.AP_VENDOR_SITE,
                        b.AP_BANK_ACC,
                        'LSI',
                                                                                      'WSC Payment Process',
                                                                                      b.PAYMENT_DOC, ---'IC CHECK',
                                                                                      b.AP_EXCHANGE_RATE, 
                                                                                      b.AP_EXCHANGE_RATE_TYPE, 
                        L_ACC_DATE,  ---b.AP_EXCHANGE_RATE_DATE,
                        b.AP_INVOICE_NUMBER, 
                        b.AP_LEDGER_NAME, 
                        b.AP_ACCOUNTING_CLASS, 
                        b.AP_INVOICE_DATE, 
                        b.AP_ACCOUNTING_DATE,  
                        b.AP_ENTERED_INVOICE_AMOUNT, 
                        b.AP_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AP_GL_CODE_COMBINATION, 
                        b.AP_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AP_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AP_INTERCOMPANY_BATCH_NUMBER,
                        0,
                        1,
                        b.AP_FUNCTIONAL_CURRENCY_CODE,
                        b.AP_NETTING_LEDGER,
                        b.AP_NETTING_FUN_CURR,
                                                                                      b.AP_IC_TRX_NUMBER,
                                                                                      b.AP_INVOICE_ID,
                        b.ACCOUNTING_PERIOD,
                        'N');  */

              /* New Logic */  

              INSERT INTO WSC_AHCS_LSI_AP_T 
                    (
                    PAYMENT_NUM,
                    PAYMENT_DATE,
                    PAYMENT_TYPE,
                    PAYMENT_DESC,
                    PAYMENT_CURRENCY,
                    BU,
                    VENDOR_NAME,
                    VENDOR_SITE,
                    BANK_ACC,
                    PAYMENT_METHOD,
                    PAYMENT_PROCESS_PROFILE,
                    PAYMENT_DOCUMENT,
                    EXCHANGE_RATE,
                    EXCHANGE_RATE_TYPE,
                    EXCHANGE_RATE_DATE,
                    INVOICE_NUMBER,
                    LEDGER_NAME,
                    ACCOUNTING_CLASS,
                    INVOICE_DATE,
                    ACCOUNTING_DATE,
                    ENTERED_INVOICE_AMOUNT,
                    ACCOUNTED_INVOICE_AMOUNT,
                    GL_CODE_COMBINATION,
                    INTERCOMPANY_LEGAL_ENTITY,
                    INTERCOMPANY_TRANSACTION_TYPE,
                    INTERCOMPANY_BATCH_NUMBER,
                    DISCOUNT_TAKEN,
                    INSTALLMENT_NUMBER,
                    INTERCOMPANY_LEDGER,
                    INTERCOMPANY_FUN_CURR,
                    FUNCTIONAL_CURRENCY_CODE,
                    NETTING_LEDGER,
                    NETTING_FUN_CURR,
                    IC_TRX_NUMBER,
                    INVOICE_ID,
                    CHECK_ID,
                    BATCH_ID,
                    STATUS,
                    FILE_NAME,
                    ACCOUNTING_PERIOD,
                    TO_BE_PROCESSED,
                    ERROR_MESSAGE,
                    TO_BE_REPROCESSED
            ) VALUES (
                    LV_PAYNUM,
                    L_ACC_DATE,
                    'Manual',
                    'BU :'|| r_INV_SELECTION.AP_BU||', PAAS Batch_ID :'||LV_BATCH_ID,
                    r_INV_SELECTION.AP_PAYMENT_CURRENCY,
                    r_INV_SELECTION.AP_BU,
                    r_INV_SELECTION.AP_VENDOR_NAME,
                    r_INV_SELECTION.AP_VENDOR_SITE,
                    r_INV_SELECTION.AP_BANK_ACC,
                    r_INV_SELECTION.AP_PAYMENT_METHOD, --'LSI',
                    r_INV_SELECTION.AP_PAYMENT_PROCESS_PROFILE, --'WSC Payment Process',
                    r_INV_SELECTION.AP_PAYMENT_DOCUMENT, --'IC CHECK',
                    r_INV_SELECTION.AP_EXCHANGE_RATE,
                    decode(r_INV_SELECTION.AP_EXCHANGE_RATE_TYPE,'Month End Rate','Actual Rate','Month Average Rate','Actual Rate',r_INV_SELECTION.AP_EXCHANGE_RATE_TYPE),
                    r_INV_SELECTION.AP_EXCHANGE_RATE_DATE,
                    r_INV_SELECTION.AP_INVOICE_NUMBER,
                    r_INV_SELECTION.AP_LEDGER_NAME,
                    r_INV_SELECTION.AP_ACCOUNTING_CLASS,
                    r_INV_SELECTION.AP_INVOICE_DATE,
                    r_INV_SELECTION.AP_ACCOUNTING_DATE,
                    r_INV_SELECTION.AP_ENTERED_INVOICE_AMOUNT,
                    r_INV_SELECTION.AP_ACCOUNTED_INVOICE_AMOUNT,
                    r_INV_SELECTION.AP_GL_CODE_COMBINATION,
                    r_INV_SELECTION.AP_INTERCOMPANY_LEGAL_ENTITY,
                    r_INV_SELECTION.AP_INTERCOMPANY_TRANSACTION_TYPE,
                    r_INV_SELECTION.AP_INTERCOMPANY_BATCH_NUMBER,
                    0,
                    1,
                    NULL,
                    NULL,
                    r_INV_SELECTION.AP_FUNCTIONAL_CURRENCY_CODE,
                    r_INV_SELECTION.AP_NETTING_LEDGER,
                    r_INV_SELECTION.AP_NETTING_FUN_CURR,
                    r_INV_SELECTION.AP_IC_TRX_NUMBER,
                    r_INV_SELECTION.AP_INVOICE_ID,
                    NULL,
                    r_INV_SELECTION.BATCH_ID,
                    r_INV_SELECTION.STATUS,
                    r_INV_SELECTION.FILE_NAME,
                    to_char(L_ACC_DATE,'MON-YYYY'),
                    'Y',
                    NULL,
                    NULL
                    );     


        FOR i in C_Credit_Memo(r_Dist_payment.AP_PAYMENT_CURRENCY,r_Dist_payment.AP_BU,r_Dist_payment.AP_BANK_ACC,r_Dist_payment.AP_VENDOR_NAME,
r_Dist_payment.AP_VENDOR_SITE,r_Dist_payment.AP_EXCHANGE_RATE_TYPE)
            loop
               LV_INVOICE_COUNTER := LV_INVOICE_COUNTER +1;
                LV_SUM_AP_ENTERED_AMT := LV_SUM_AP_ENTERED_AMT + i.ENTERED_INVOICE_AMOUNT;
                LV_IC_BTCH_NUMBER := i.INTERCOMPANY_BATCH_NUMBER;
               if (LV_SUM_AP_ENTERED_AMT > 0) then
                    INSERT INTO WSC_AHCS_LSI_AP_T 
                    (
                    PAYMENT_NUM,
                    PAYMENT_DATE,
                    PAYMENT_TYPE,
                    PAYMENT_DESC,
                    PAYMENT_CURRENCY,
                    BU,
                    VENDOR_NAME,
                    VENDOR_SITE,
                    BANK_ACC,
                    PAYMENT_METHOD,
                    PAYMENT_PROCESS_PROFILE,
                    PAYMENT_DOCUMENT,
                    EXCHANGE_RATE,
                    EXCHANGE_RATE_TYPE,
                    EXCHANGE_RATE_DATE,
                    INVOICE_NUMBER,
                    LEDGER_NAME,
                    ACCOUNTING_CLASS,
                    INVOICE_DATE,
                    ACCOUNTING_DATE,
                    ENTERED_INVOICE_AMOUNT,
                    ACCOUNTED_INVOICE_AMOUNT,
                    GL_CODE_COMBINATION,
                    INTERCOMPANY_LEGAL_ENTITY,
                    INTERCOMPANY_TRANSACTION_TYPE,
                    INTERCOMPANY_BATCH_NUMBER,
                    DISCOUNT_TAKEN,
                    INSTALLMENT_NUMBER,
                    INTERCOMPANY_LEDGER,
                    INTERCOMPANY_FUN_CURR,
                    FUNCTIONAL_CURRENCY_CODE,
                    NETTING_LEDGER,
                    NETTING_FUN_CURR,
                    IC_TRX_NUMBER,
                    INVOICE_ID,
                    CHECK_ID,
                    BATCH_ID,
                    STATUS,
                    FILE_NAME,
                    ACCOUNTING_PERIOD,
                    TO_BE_PROCESSED,
                    ERROR_MESSAGE,
                    TO_BE_REPROCESSED
            ) VALUES (
                    LV_PAYNUM,
                    L_ACC_DATE,
                    'Manual',
                    'BU :'|| i.BU||', PAAS Batch_ID :'||LV_BATCH_ID,
                    i.INVOICE_CURRENCY_CODE,
                    i.BU,
                    i.VENDOR_CUST_NAME,
                    i.VENDOR_CUST_SITE,
                    i.BANK_ACC,
                    i.description, --'LSI',
                    i.tag, --'WSC Payment Process',
                    i.pay_method, --'IC CHECK',
                    i.EXCHANGE_RATE,
                    decode(i.EXCHANGE_RATE_TYPE,'Month End Rate','Actual Rate','Month Average Rate','Actual Rate',i.EXCHANGE_RATE_TYPE),
                    i.EXCHANGE_RATE_DATE,
                    i.INVOICE_NUMBER,
                    i.LEDGER_NAME,
                    i.ACCOUNTING_CLASS,
                    i.INVOICE_DATE,
                    i.ACCOUNTING_DATE,
                    i.ENTERED_INVOICE_AMOUNT,
                    i.ACCOUNTED_INVOICE_AMOUNT,
                    i.GL_CODE_COMBINATION,
                    i.INTERCOMPANY_LEGAL_ENTITY,
                    i.INTERCOMPANY_TRANSACTION_TYPE,
                    i.INTERCOMPANY_BATCH_NUMBER,
                    0,
                    1,
                    NULL,
                    NULL,
                    i.FUNCTIONAL_CURRENCY_CODE,
                    i.NETTING_LEDGER,
                    i.NETTING_FUN_CURR,
                    i.IC_TRX_NUMBER,
                    i.INVOICE_ID,
                    NULL,
                    r_INV_SELECTION.BATCH_ID,
                    NULL,
                    i.FILE_NAME,
                    i.ACCOUNTING_PERIOD,
                    'Y',
                    NULL,
                    NULL
                    );
                    commit;
                else
                   LV_SUM_AP_ENTERED_AMT := LV_SUM_AP_ENTERED_AMT - i.ENTERED_INVOICE_AMOUNT;
                    exit;
                end if;

               IF LV_INVOICE_COUNTER = 500 THEN
                  commit;
                   EXIT;
               END IF;   
          end loop;   
       Commit; 


  EXCEPTION
    WHEN OTHERS THEN

     LV_COUNTER2 := LV_COUNTER2 +1;

      LV_ERROR_MSG := substr(SQLERRM,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (P_FILE_NAME ,
                    'AP Records not merged in WSC_AHCS_LSI_AP_T' ,
                    LV_ERROR_MSG||':- AP Records not populated for '||LV_IC_BTCH_NUMBER||' '||r_Dist_payment.AP_BU||' '||r_Dist_payment.AP_VENDOR_NAME||' '||r_Dist_payment.AP_VENDOR_SITE||' '||r_Dist_payment.AP_BANK_ACC||' '||r_Dist_payment.AP_PAYMENT_CURRENCY||' '||r_Dist_payment.AP_EXCHANGE_RATE_TYPE,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    LV_BATCH_ID,
                    'Y');
                 Commit; 

              END; 

            Commit; 
          END LOOP; 

      END LOOP;    


   IF LV_COUNTER1 = LV_COUNTER2 THEN 

          wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in AP-AR Matching Process-'||sqlerrm);
   END IF; 



   Update WSC_AHCS_LSI_AP_AR_T a
   SET a.STATUS_REASON='Credit Memo',
        STATUS=NULL,
        BATCH_ID=NULL
   WHERE a.ENTERED_INVOICE_AMOUNT < 0
   AND NOT EXISTS (SELECT 1 
                   FROM WSC_AHCS_LSI_AP_T
                   WHERE INTERCOMPANY_BATCH_NUMBER=a.INTERCOMPANY_BATCH_NUMBER
                   AND IC_TRX_NUMBER=a.IC_TRX_NUMBER)
                   AND NOT EXISTS (SELECT 1            /*** bug fix INC2679428***/
           FROM WSC_AHCS_LSI_CONTROL_T
           WHERE CM_FLAG='Y'
                   AND BATCH_ID=a.batch_id);
    commit;   

    update WSC_AHCS_LSI_AP_AR_T a
   set file_name=L_FILE_NAME,
      batch_id=LV_BATCH_ID,
      status='MATCHED',
      accounting_date=L_ACC_DATE
    where  EXISTS (SELECT 1 
                   FROM WSC_AHCS_LSI_AP_T
                   WHERE INTERCOMPANY_BATCH_NUMBER=a.INTERCOMPANY_BATCH_NUMBER
                   AND IC_TRX_NUMBER=a.IC_TRX_NUMBER
                   and BATCH_ID=LV_BATCH_ID) AND batch_id IS NULL;
    commit;

 begin
  select count(1) 
  INTO LV_AP_UNMATCHED
  from wsc_ahcs_lsi_ap_ar_t 
  where  record_type='AP'
  AND INVOICE_NUMBER NOT LIKE '%LSI'
and status is null;
exception
 when others then
    LV_AP_UNMATCHED:=0;
END; 

begin
  select count(1) 
  INTO LV_AR_UNMATCHED
  from wsc_ahcs_lsi_ap_ar_t 
  where  record_type='AR'
and status is null;
Exception
 WHEN OTHERS THEN
    LV_AR_UNMATCHED := 0;
END;

BEGIN
 Select count(1)
   INTO LV_AP_COUNT
   FROM WSC_AHCS_LSI_AP_T
   WHERE BATCH_ID=LV_BATCH_ID;
EXCEPTION
    WHEN OTHERS THEN
        LV_AP_COUNT:= 0;
 END;       



 update WSC_AHCS_LSI_CONTROL_T
   set  MATCHED_COUNT=MATCHED_COUNT||'/'||LV_AP_COUNT,
        AP_UNMATCH_COUNT=LV_AP_UNMATCHED,
        AR_UNMATCH_COUNT=LV_AR_UNMATCHED
   Where batch_id=LV_BATCH_ID;
   commit;

 IF  LV_AP_COUNT=0 THEN
  UPDATE WSC_AHCS_LSI_CONTROL_T
  SET STATUS='NOT MATCHED',
  BATCH_ID=NULL
  WHERE BATCH_ID=LV_BATCH_ID;
  commit;
 END IF; 

    merge into WSC_AHCS_LSI_AP_AR_T a
USING (Select PAYMENT_NUM,
               invoice_number,
               BU,
               File_Name,
               vendor_name,
               vendor_site,
               accounting_period,
               intercompany_batch_number,
               ic_trx_number
        FROM WSC_AHCS_LSI_AP_T
        WHERE (STATUS IS NULL OR STATUS='ERROR')
        AND BATCH_ID=LV_BATCH_ID) b
   ON  (a.invoice_number=b.invoice_number and a.BU=b.BU and a.VENDOR_CUST_NAME=b.vendor_name and a.VENDOR_CUST_SITE=b.vendor_site 
   and a.record_type='AP' and a.intercompany_batch_number=b.intercompany_batch_number and a.ic_trx_number=b.ic_trx_number)    
 WHEN MATCHED THEN 
   UPDATE SET a.payment_number= b.payment_num,
              a.accounting_period=b.accounting_period,
              a.file_name=b.file_name ;


BEGIN
             MERGE INTO WSC_AHCS_LSI_AR_T  a
             USING ( SELECT  AR.AR_BU,
                AR.FILE_NAME,
                                               AR.AR_BU_ID,
                AR.AR_INVOICE_NUMBER, 
                AR.AR_LEDGER_NAME, 
                AR.AR_ACCOUNTING_CLASS, 
                AR.AR_INVOICE_DATE, 
                L_ACC_DATE AR_ACCOUNTING_DATE,  ----L_ACC_DATE 
                AR.AR_EXCHANGE_RATE, 
                AR.AR_EXCHANGE_RATE_TYPE, 
                AR.AR_EXCHANGE_RATE_DATE, 
                AR.AR_ENTERED_INVOICE_AMOUNT, 
                AR.AR_ACCOUNTED_INVOICE_AMOUNT, 
                AR.AR_GL_CODE_COMBINATION, 
                AR.AR_INTERCOMPANY_LEGAL_ENTITY, 
                AR.AR_INTERCOMPANY_TRANSACTION_TYPE, 
                AR.AR_INTERCOMPANY_BATCH_NUMBER, 
                AR.AR_CUST_NAME, 
                AR.AR_CUST_SITE, 
                AR.AR_ACCOUNT_NUMBER, 
                AR.AR_LOCKBOX_NUMBER,
                                                          AR.AR_LOCKBOX_ID,     
                AR.AR_BANK_ORIGINATION_NUMBER, 
                AR.AR_INVOICE_CURRENCY_CODE, 
                AR.AR_FUNCTIONAL_CURRENCY_CODE,
                                                          AR.AR_IC_TRX_NUMBER,
                                                          AR.AR_INVOICE_ID,
                AR.AP_PAYMENT_NUM,
                to_char(L_ACC_DATE,'MON-YYYY') ACCOUNTING_PERIOD
                FROM WSC_AHCS_LSI_AP_AR_MATCH_T AR
                WHERE 1=1
                AND batch_id=LV_BATCH_ID
                AND (AR.STATUS IS NULL or AR.STATUS='ERROR')
                AND NOT EXISTS (Select 1 FROM WSC_AHCS_LSI_AR_T
                                WHERE INTERCOMPANY_BATCH_NUMBER=AR.AR_INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=AR.AR_IC_TRX_NUMBER)
                AND EXISTS (Select 1 FROM WSC_AHCS_LSI_AP_T
                                WHERE INTERCOMPANY_BATCH_NUMBER=AR.AP_INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=AR.AP_IC_TRX_NUMBER)) b
            ON (a.INVOICE_NUMBER = b.AR_INVOICE_NUMBER AND a.BU=b.AR_BU AND a.CUST_NAME=b.AR_CUST_NAME AND a.CUST_SITE=b.AR_CUST_SITE)
            WHEN NOT MATCHED THEN
                INSERT (BATCH_ID,
                        FILE_NAME,
                        BU,
                                                                                      BU_ID,
                        INVOICE_NUMBER, 
                        LEDGER_NAME, 
                        ACCOUNTING_CLASS, 
                        INVOICE_DATE, 
                        ACCOUNTING_DATE, 
                        EXCHANGE_RATE, 
                        EXCHANGE_RATE_TYPE, 
                        EXCHANGE_RATE_DATE, 
                        ENTERED_INVOICE_AMOUNT, 
                        ACCOUNTED_INVOICE_AMOUNT, 
                        GL_CODE_COMBINATION, 
                        INTERCOMPANY_LEGAL_ENTITY, 
                        INTERCOMPANY_TRANSACTION_TYPE, 
                        INTERCOMPANY_BATCH_NUMBER, 
                        CUST_NAME, 
                        CUST_SITE, 
                        ACCOUNT_NUMBER, 
                        LOCKBOX_NUMBER, 
                                                                                      LOCKBOX_ID,
                        BANK_ORIGINATION_NUMBER, 
                        INVOICE_CURRENCY_CODE, 
                        FUNCTIONAL_CURRENCY_CODE,
                                                                                      IC_TRX_NUMBER,
                                                                                      INVOICE_ID,
                        AP_PAYMENT_NUM,
                        ACCOUNTING_PERIOD,
                        TO_BE_REPROCESSED) 
                VALUES (LV_BATCH_ID,
                        b.FILE_NAME, 
                        b.AR_BU, 
                                                                                      b.AR_BU_ID,
                        b.AR_INVOICE_NUMBER, 
                        b.AR_LEDGER_NAME, 
                        b.AR_ACCOUNTING_CLASS, 
                        b.AR_INVOICE_DATE, 
                        L_ACC_DATE,
                        b.AR_EXCHANGE_RATE, 
                        b.AR_EXCHANGE_RATE_TYPE, 
                        b.AR_EXCHANGE_RATE_DATE, 
                        b.AR_ENTERED_INVOICE_AMOUNT, 
                        b.AR_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AR_GL_CODE_COMBINATION, 
                        b.AR_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AR_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AR_INTERCOMPANY_BATCH_NUMBER, 
                        b.AR_CUST_NAME, 
                        b.AR_CUST_SITE, 
                        b.AR_ACCOUNT_NUMBER, 
                        b.AR_LOCKBOX_NUMBER, 
                                                                                      b.AR_LOCKBOX_ID,
                        b.AR_BANK_ORIGINATION_NUMBER, 
                        b.AR_INVOICE_CURRENCY_CODE, 
                        b.AR_FUNCTIONAL_CURRENCY_CODE,
                                                                                      b.AR_IC_TRX_NUMBER,
                                                                                      b.AR_INVOICE_ID,
                        b.AP_PAYMENT_NUM,
                        b.ACCOUNTING_PERIOD,
                        'N');
                        commit;

                   MERGE INTO WSC_AHCS_LSI_AR_T  a
             USING ( SELECT  AR.BU,
                AR.FILE_NAME,
                                               AR.BU_ID,
                AR.INVOICE_NUMBER, 
                AR.LEDGER_NAME, 
                AR.ACCOUNTING_CLASS, 
                AR.INVOICE_DATE, 
                L_ACC_DATE ACCOUNTING_DATE,  ----L_ACC_DATE 
                AR.EXCHANGE_RATE, 
                AR.EXCHANGE_RATE_TYPE, 
                AR.EXCHANGE_RATE_DATE, 
                AR.ENTERED_INVOICE_AMOUNT, 
                AR.ACCOUNTED_INVOICE_AMOUNT, 
                AR.GL_CODE_COMBINATION, 
                AR.INTERCOMPANY_LEGAL_ENTITY, 
                AR.INTERCOMPANY_TRANSACTION_TYPE, 
                AR.INTERCOMPANY_BATCH_NUMBER, 
                AR.VENDOR_CUST_NAME, 
                AR.VENDOR_CUST_SITE, 
                AR.ACCOUNT_NUMBER, 
                AR.LOCKBOX_NUMBER,
                                                          AR.LOCKBOX_ID,     
                AR.BANK_ORIGINATION_NUMBER, 
                AR.INVOICE_CURRENCY_CODE, 
                AR.FUNCTIONAL_CURRENCY_CODE,
                                                          AR.IC_TRX_NUMBER,
                                                          AR.INVOICE_ID,
                to_char(L_ACC_DATE,'MON-YYYY') ACCOUNTING_PERIOD
                FROM WSC_AHCS_LSI_AP_AR_T AR
                WHERE 1=1
				AND AR.RECORD_TYPE='AR'
                AND batch_id=LV_BATCH_ID
				AND AR.ENTERED_INVOICE_AMOUNT<0
                AND (AR.STATUS IS NULL or AR.STATUS='ERROR')
                AND NOT EXISTS (Select 1 FROM WSC_AHCS_LSI_AR_T
                                WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER)
                AND EXISTS (Select 1 FROM WSC_AHCS_LSI_AP_T
                                WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
                                AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER)) b
            ON (a.INVOICE_NUMBER = b.INVOICE_NUMBER AND a.BU=b.BU AND a.CUST_NAME=b.VENDOR_CUST_NAME AND a.CUST_SITE=b.VENDOR_CUST_SITE)
            WHEN NOT MATCHED THEN
                INSERT (BATCH_ID,
                        FILE_NAME,
                        BU,
                                                                                      BU_ID,
                        INVOICE_NUMBER, 
                        LEDGER_NAME, 
                        ACCOUNTING_CLASS, 
                        INVOICE_DATE, 
                        ACCOUNTING_DATE, 
                        EXCHANGE_RATE, 
                        EXCHANGE_RATE_TYPE, 
                        EXCHANGE_RATE_DATE, 
                        ENTERED_INVOICE_AMOUNT, 
                        ACCOUNTED_INVOICE_AMOUNT, 
                        GL_CODE_COMBINATION, 
                        INTERCOMPANY_LEGAL_ENTITY, 
                        INTERCOMPANY_TRANSACTION_TYPE, 
                        INTERCOMPANY_BATCH_NUMBER, 
                        CUST_NAME, 
                        CUST_SITE, 
                        ACCOUNT_NUMBER, 
                        LOCKBOX_NUMBER, 
                                                                                      LOCKBOX_ID,
                        BANK_ORIGINATION_NUMBER, 
                        INVOICE_CURRENCY_CODE, 
                        FUNCTIONAL_CURRENCY_CODE,
                                                                                      IC_TRX_NUMBER,
                                                                                      INVOICE_ID,
                        ACCOUNTING_PERIOD,
                        TO_BE_REPROCESSED) 
                VALUES (LV_BATCH_ID,
                        b.FILE_NAME, 
                        b.BU, 
					    b.BU_ID,
                        b.INVOICE_NUMBER, 
                        b.LEDGER_NAME, 
                        b.ACCOUNTING_CLASS, 
                        b.INVOICE_DATE, 
                        L_ACC_DATE,
                        b.EXCHANGE_RATE, 
                        b.EXCHANGE_RATE_TYPE, 
                        b.EXCHANGE_RATE_DATE, 
                        b.ENTERED_INVOICE_AMOUNT, 
                        b.ACCOUNTED_INVOICE_AMOUNT, 
                        b.GL_CODE_COMBINATION, 
                        b.INTERCOMPANY_LEGAL_ENTITY, 
                        b.INTERCOMPANY_TRANSACTION_TYPE, 
                        b.INTERCOMPANY_BATCH_NUMBER, 
                        b.VENDOR_CUST_NAME, 
                        b.VENDOR_CUST_SITE, 
                        b.ACCOUNT_NUMBER, 
                        b.LOCKBOX_NUMBER, 
					    b.LOCKBOX_ID,
                        b.BANK_ORIGINATION_NUMBER, 
                        b.INVOICE_CURRENCY_CODE, 
                        b.FUNCTIONAL_CURRENCY_CODE,
						b.IC_TRX_NUMBER,
						b.INVOICE_ID,
                        b.ACCOUNTING_PERIOD,
                        'N');    
                        commit;

            WSC_ASYNC_LSI_FBDI_PROCESS_P(LV_BATCH_ID);   

  update WSC_AHCS_LSI_CONTROL_T
   set TO_BE_PROCESSED='Y'
    Where batch_id=LV_BATCH_ID;
    commit;

  EXCEPTION
    WHEN OTHERS THEN

      LV_ERROR_MSG := substr(SQLERRM,1,200);

        insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (P_FILE_NAME ,
                    'AR Records not merged in WSC_AHCS_LSI_AR_T' ,
                    LV_ERROR_MSG||':- AR Records not populated for batch id'||LV_BATCH_ID,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    LV_BATCH_ID,
                    'Y');
                 Commit;       

            wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in AP-AR Matching Process-'||sqlerrm);

            END;           

       Commit; 
   ELSE    
      update WSC_AHCS_LSI_CONTROL_T
   set STATUS='NOT MATCHED',
      TO_BE_PROCESSED='N',
      LAST_UPDATED_DATE=SYSDATE,
      all_extracts=L_EXTRACT
   Where extract_name=P_FILE_NAME; 
       commit;

       END IF; 

     Begin
     DELETE FROM WSC_AHCS_LSI_AP_AR_MATCH_T where batch_id=LV_BATCH_ID;
     commit;
Exception
      WHEN OTHERS THEN
        NULL;
      END;   

EXCEPTION
    WHEN OTHERS THEN

     update WSC_AHCS_LSI_CONTROL_T
   set STATUS='NOT MATCHED',
      TO_BE_PROCESSED='N',
      LAST_UPDATED_DATE=SYSDATE,
      all_extracts=L_EXTRACT
   Where extract_name=P_FILE_NAME; 
       commit;

      LV_ERROR_MSG := substr(SQLERRM,1,200);

       insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (P_FILE_NAME ,
                    'ERROR IN MATCHING' ,
                    LV_ERROR_MSG,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    LV_BATCH_ID,
                    'Y');
                 Commit; 

                  wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in AP-AR Matching Process-'||sqlerrm);

  END WSC_LSI_APAR_MATCH_P;



  PROCEDURE WSC_LSI_RECEIPT_FBDI_P(P_BATCH_ID NUMBER)
  IS

  Cursor Transmission_header is 
          select  BU,
                  lockbox_number,
				  bank_origination_number		
	  from WSC_AHCS_LSI_AR_T AR
      Where (status is null or Status='ERROR')
      AND batch_id=P_BATCH_ID
      AND lockbox_number is not null
      AND NOT EXISTS ( SELECT 1 
                      FROM wsc_lsi_receipt_fbdi_t
                      WHERE segment1=6
                      AND batch_id=P_BATCH_ID
                      AND segment23=AR.INVOICE_NUMBER
                      AND segment30=AR.BU
                      AND LOCKBOX_NUMBER=AR.LOCKBOX_NUMBER)
      GROUP BY BU, lockbox_number,
			  bank_origination_number;



  Cursor lockboxpay(lokbox_number varchar2,bank_origina_number varchar2) is 
  Select ART.*,LT.DESCRIPTION,LT.ATTRIBUTE2 from WSC_AHCS_LSI_AR_T ART,WSC_AHCS_LSI_LOOKUP_T LT
  WHERE lockbox_number=lokbox_number
  AND batch_id=P_BATCH_ID
  AND bank_origination_number=bank_origina_number
  AND LT.lookup_type='WSC_LSI_BANK_DETAILS'
  AND LT.ATTRIBUTE1=ART.INTERCOMPANY_LEGAL_ENTITY
  AND (status is null or Status='ERROR');

   LV_ITEM_NUMBER	NUMBER;
   LV_RECEIPT_NUM   VARCHAR2(100);

   LV_RECEIPT_BATCH          VARCHAR2(100);

   LV_LOCKBOX_EXCEPTION     EXCEPTION;
   LV_Counter              NUMBER :=0;
   LV_COUNTER_REC6          NUMBER :=0;
   LV_FILE_NAME                 VARCHAR2(200);



  BEGIN


    SELECT FILE_NAME INTO LV_FILE_NAME FROM WSC_AHCS_LSI_CONTROL_T
      WHERE BATCH_ID = P_BATCH_ID;

   BEGIN
    DELETE FROM Wsc_LSI_RECEIPT_FBDI_T WHERE BATCH_ID=P_BATCH_ID;
    commit;
   EXCEPTION
    WHEN OTHERS THEN
        NULL;
   END; 

  For rTransmission_header in Transmission_header LOOP

 BEGIN
  if rTransmission_header.lockbox_number IS NULL or rTransmission_header.bank_origination_number IS NULL THEN

    RAISE LV_LOCKBOX_EXCEPTION;  

 END IF; 

 LV_RECEIPT_BATCH:='LSIBATCH'||to_char(SYSDATE,'DDMMYYHH24MISS');

	insert into Wsc_LSI_RECEIPT_FBDI_T
    ( REC_FBDI_SEQ,
       SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
        BANK_ORIGINATION_NUMBER)
      VALUES
      ( WSC_AHCS_FBDI_SEQ.nextval,
         1,
        NULL,
        NULL, --rTransmission_header.Bank_Origination_Number,
        NULL, --to_char(SYSDATE,'YYMMDD'),
        NULL, --to_char(SYSDATE,'HH24:MI:SS'),
        NULL, --rTransmission_header.LV_REC_COUNT,
        NULL, --rTransmission_header.LV_ENTERED_INV_AMT,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
        rTransmission_header.Bank_Origination_Number);

    --RECORD2 SERVICE HEADER
       insert into Wsc_LSI_RECEIPT_FBDI_T
    (  REC_FBDI_SEQ,
       SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
        BANK_ORIGINATION_NUMBER)
      VALUES
      (WSC_AHCS_FBDI_SEQ.nextval,
        2,
        NULL, --to_char(SYSDATE,'YYMMDD'),
        NULL, --to_char(SYSDATE,'HH24:MI:SS'),
		NULL,
		NULL, --rTransmission_header.Bank_Origination_Number,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
        rTransmission_header.Bank_Origination_Number);

   ---RECORD3 BATCH HEADER


      insert into Wsc_LSI_RECEIPT_FBDI_T
     ( REC_FBDI_SEQ, 
    SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
        BANK_ORIGINATION_NUMBER)
      VALUES
      ( WSC_AHCS_FBDI_SEQ.nextval,
         3,
        LV_RECEIPT_BATCH,
        NULL, --rBatchheader.Functional_Currency_Code,
		NULL,--rc2.EXCHANGE_RATE_TYPE,
		NULL,
        NULL,
        rTransmission_header.Lockbox_Number,
        NULL, --to_char(SYSDATE,'YYMMDD'),
        NULL, --to_char(SYSDATE,'HH24:MI:SS'),
        NULL, --rBatchheader.LV_REC_COUNT,
        NULL, --rBatchheader.LV_ENTERED_INV_AMT,
        NULL, --'LSI RECEIPTS',
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
		rTransmission_header.Bank_Origination_Number);

	--RECORD4 OVERFLOW PAYMENT
/*
     insert into Wsc_LSI_RECEIPT_FBDI_T
    (SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29)
      VALUES
      (4,
        'LSI'||to_char(SYSDATE,'DDMMYYHH24MISS'),
        WSC_LSI_ITEM_NUM_SEQ.nextval,
		NULL,
		1,
		NULL,
		NULL,
		NULL,
        rBatchheader.EXCHANGE_RATE_TYPE,
		NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        rBatchheader.Lockbox_Number,
        to_char(SYSDATE,'YYMMDD'),
        to_char(SYSDATE,'HH24:MI:SS'),
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL); */

  --RECORD5 LOCKBOX HEADER

     insert into Wsc_LSI_RECEIPT_FBDI_T
    ( REC_FBDI_SEQ, 
    SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
	    BANK_ORIGINATION_NUMBER)
      VALUES
      ( WSC_AHCS_FBDI_SEQ.nextval,
         5,
        NULL, --rBatchheader.Functional_Currency_Code,
        NULL,
		rTransmission_header.Lockbox_Number,
		NULL, --to_char(SYSDATE,'YYMMDD'),
        NULL, --to_char(SYSDATE,'HH24:MI:SS'),
		NULL, --1,
		NULL, --rBatchheader.LV_REC_COUNT,
		NULL, --rBatchheader.LV_ENTERED_INV_AMT,
		NULL,
        NULL, --rBatchheader.Bank_Origination_Number,
		NULL,
		NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
		rTransmission_header.Bank_Origination_Number);



--RECORD6 PAYMENT

   for rlockboxpay in lockboxpay(rTransmission_header.lockbox_number,
rTransmission_header.bank_origination_number) LOOP

  LV_ITEM_NUMBER := WSC_LSI_ITEM_NUM_SEQ.nextval; 
  LV_RECEIPT_NUM := 'LSIRECEIPT'||WSC_LSI_RECEIPT_NUM_SEQ.nextval;
  LV_COUNTER_REC6 := LV_COUNTER_REC6 +1;

   insert into Wsc_LSI_RECEIPT_FBDI_T
    (  REC_FBDI_SEQ,
       SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        SEGMENT31,
        SEGMENT32,
        BATCH_ID,
        LOCKBOX_NUMBER,
		BANK_ORIGINATION_NUMBER)
      VALUES
      ( WSC_AHCS_FBDI_SEQ.nextval,
        6,
	   LV_RECEIPT_BATCH,
        LV_ITEM_NUMBER,
		DECODE(sign(rlockboxpay.ENTERED_INVOICE_AMOUNT),-1,0,rlockboxpay.ENTERED_INVOICE_AMOUNT*100),
		NULL,
		NULL, --rlockboxpay.CUST_NAME,
		LV_RECEIPT_NUM,
		to_char(rlockboxpay.invoice_date,'YYMMDD'),
		rlockboxpay.Invoice_Currency_Code,
        rlockboxpay.EXCHANGE_RATE_TYPE,
		NULL,
		rlockboxpay.Account_Number,
		rlockboxpay.CUST_SITE,
		NULL,
		NULL,
		rlockboxpay.description, --'LSI',
		NULL,
		rlockboxpay.attribute2, --'IC BANK '||rlockboxpay.Lockbox_Number,
		rlockboxpay.Lockbox_Number,
		to_char(rlockboxpay.accounting_date,'YYMMDD'),
        NULL, --to_char(SYSDATE,'HH24:MI:SS'),
		NULL,
		rlockboxpay.INVOICE_NUMBER,
		NULL,
		NULL,
		NULL, --rlockboxpay.Invoice_Currency_Code,
		NULL,
        rlockboxpay.ENTERED_INVOICE_AMOUNT*100,
		NULL,
        rTransmission_header.BU,
        rlockboxpay.batch_id,
        rlockboxpay.ap_payment_num,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
		rTransmission_header.Bank_Origination_Number);

  /* update WSC_AHCS_LSI_AP_AR_T set payment_number=LV_RECEIPT_NUM
   Where lockbox_number = rTransmission_header.lockbox_number
   AND bank_origination_number =rTransmission_header.bank_origination_number
   AND INVOICE_NUMBER=rlockboxpay.INVOICE_NUMBER
   AND Account_Number = rlockboxpay.Account_Number
   AND VENDOR_CUST_SITE = rlockboxpay.CUST_SITE
   AND BATCH_ID=P_BATCH_ID;
   commit; */---17Jul

   update WSC_AHCS_LSI_AR_T set receipt_num=LV_RECEIPT_NUM
   Where lockbox_number = rTransmission_header.lockbox_number
   AND bank_origination_number =rTransmission_header.bank_origination_number
   AND INVOICE_NUMBER=rlockboxpay.INVOICE_NUMBER
   AND Account_Number = rlockboxpay.Account_Number
   AND CUST_SITE = rlockboxpay.CUST_SITE
   AND BATCH_ID=P_BATCH_ID;
   commit;


    END LOOP;	

 ---RECORD7 BATCH TRAILER

    insert into Wsc_LSI_RECEIPT_FBDI_T
    (  REC_FBDI_SEQ,
       SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
		BANK_ORIGINATION_NUMBER)
      VALUES
      (WSC_AHCS_FBDI_SEQ.nextval,
         7,
	    LV_RECEIPT_BATCH,
        NULL, --rBatchheader.functional_Currency_Code,
		NULL, --rBatchheader.EXCHANGE_RATE_TYPE,
		NULL,
		NULL,
		rTransmission_header.Lockbox_Number,
		NULL, --to_char(SYSDATE,'YYMMDD'),
		NULL, --to_char(SYSDATE,'HH24:MI:SS'),
		NULL, --rBatchheader.LV_REC_COUNT,
		NULL, --rBatchheader.LV_ENTERED_INV_AMT,
		NULL, --'LSI',
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
        NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
		rTransmission_header.Bank_Origination_Number);

 --RECORD8 LOCKBOX TRAILER

    insert into Wsc_LSI_RECEIPT_FBDI_T
    ( REC_FBDI_SEQ,
      SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
		BANK_ORIGINATION_NUMBER)
      VALUES
      (WSC_AHCS_FBDI_SEQ.nextval,
        8,
	    NULL, --rBatchheader.functional_currency_code,
		NULL,
		rTransmission_header.Lockbox_Number,
		NULL, --to_char(SYSDATE,'YYMMDD'),
		NULL, --to_char(SYSDATE,'HH24:MI:SS'),
		NULL, --1,
		NULL, --rBatchheader.LV_REC_COUNT,
		NULL, --rBatchheader.LV_ENTERED_INV_AMT,
		NULL,
		rTransmission_header.BANK_ORIGINATION_NUMBER,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
		rTransmission_header.Bank_Origination_Number);

 --RECORD9 TRANSMISSION TRAILER

    insert into Wsc_LSI_RECEIPT_FBDI_T
    ( REC_FBDI_SEQ,
      SEGMENT1  ,
        SEGMENT2  ,
        SEGMENT3  ,
        SEGMENT4  ,
        SEGMENT5  ,
        SEGMENT6  ,
        SEGMENT7  ,
        SEGMENT8  ,
        SEGMENT9  ,
        SEGMENT10 ,
        SEGMENT11 ,
        SEGMENT12 ,
        SEGMENT13 ,
        SEGMENT14 ,
        SEGMENT15 ,
        SEGMENT16 ,
        SEGMENT17 ,
        SEGMENT18 ,
        SEGMENT19 ,
        SEGMENT20 ,
        SEGMENT21 ,
        SEGMENT22 ,
        SEGMENT23 ,
        SEGMENT24 ,
        SEGMENT25 ,
        SEGMENT26 ,
        SEGMENT27 ,
        SEGMENT28 ,
        SEGMENT29,
        SEGMENT30,
        BATCH_ID,
        LOCKBOX_NUMBER,
		BANK_ORIGINATION_NUMBER)
      VALUES
      ( WSC_AHCS_FBDI_SEQ.nextval,
        9,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
        NULL,
        NULL,
        rTransmission_header.BU,
        P_BATCH_ID,
        rTransmission_header.lockbox_number,
        rTransmission_header.Bank_Origination_Number);
    EXCEPTION 
     WHEN LV_LOCKBOX_EXCEPTION THEN
           insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'NO LOCKBOX' ,
                    'Lockbox Not Set for BU :'||rTransmission_header.BU,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                Commit;    
       END; 

     LV_Counter := LV_Counter +1 ;  

	END LOOP;

	COMMIT;

IF LV_Counter >0 AND LV_COUNTER_REC6 >0 THEN
     update WSC_AHCS_LSI_CONTROL_T
   set FBDI_STATUS='Y',
   LAST_UPDATED_DATE=SYSDATE
   Where batch_id=P_BATCH_ID;

    Commit;
  ELSE
        insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'NO FBDI CREATED' ,
                    'FBDI File not Created',
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit;   

     wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'NO FBDI FILE CREATED-'||sqlerrm);             

    END IF;

 EXCEPTION  
   WHEN OTHERS THEN
                  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Receipt FBDI Process-'||sqlerrm);
  END WSC_LSI_RECEIPT_FBDI_P;

   PROCEDURE WSC_LSI_CALL_PAYMENT_RECEIPT_P(P_BATCH_ID NUMBER,P_FILE_NAME VARCHAR2)
   IS
      x_user_name  VARCHAR2(80);
	  x_password   VARCHAR2(200);
	  x_url   VARCHAR2(200);
      x_err_flag  VARCHAR2(5) := 'N';
      l_body   VARCHAR2(80);
      l_clob   CLOB;
    BEGIN
 IF P_BATCH_ID IS NOT NULL THEN 

  BEGIN
    BEGIN
        SELECT user_name  
	       ,(replace(password, CHR(38), CHR(38)||'amp;')) 
	   	   , url  
		INTO x_user_name  
		   , x_password  
		   , x_url  
	FROM xx_imd_details  
	   WHERE ROWNUM=1;  


	EXCEPTION  
	  WHEN OTHERS  
       THEN	   
	     x_err_flag:='Y';     
	END; 

IF x_err_flag!='Y' THEN   

l_body := '{ "BATCH_ID" : '||P_BATCH_ID||' }';

  apex_web_service.g_request_headers.delete();   
        apex_web_service.g_request_headers(1).name := 'Content-Type';   
        apex_web_service.g_request_headers(1).value := 'application/json';

 l_clob := apex_web_service.make_rest_request(  
        p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WES_WSC_GBL_LSI_CRE_AR_REC_DAT/1.0/lsi',   
        p_http_method => 'POST',   
        p_username => x_user_name,   
        p_password => x_password,   
        p_body => l_body); 


 /* apex_web_service.g_request_headers.delete();   
        apex_web_service.g_request_headers(1).name := 'Content-Type';   
        apex_web_service.g_request_headers(1).value := 'application/json';

 l_clob := apex_web_service.make_rest_request(   
        p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WES_WSC_GBL_LSI_CRE_AP_PAY_DAT_I/1.0/lsi',   
        p_http_method => 'POST',   
        p_username => x_user_name,   
        p_password => x_password,   
        p_body => l_body);  */

 END IF; 
Exception 
    WHEN OTHERS THEN
      wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in INV Payment/Receipt INT Call-'||sqlerrm);

 END;                         
    ELSE
        wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in INV Payment/Receipt INT Call-'||sqlerrm);

    END IF; 

 EXCEPTION
    WHEN OTHERS THEN
                  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in INV Payment/Receipt INT Call-'||sqlerrm);

END WSC_LSI_CALL_PAYMENT_RECEIPT_P;

   PROCEDURE WSC_LSI_NETTING_P(RECORD_TYPE VARCHAR2,P_BATCH_ID NUMBER)
    IS  


	  Cursor C1_extract_AP_AR_rec
	   IS 
	      Select AP.GL_CODE_COMBINATION AP_CCID,AR.GL_CODE_COMBINATION AR_CCID,
			AP.LEDGER_NAME AP_LEDGER,AR.LEDGER_NAME AR_LEDGER,
			SYSDATE AP_INVOICE_DATE,SYSDATE AR_INVOICE_DATE,
			SYSDATE AP_EXCHANGE_DATE,SYSDATE AR_EXCHANGE_DATE,
			AP.EXCHANGE_RATE AP_EXCHANGE_RATE,AR.EXCHANGE_RATE AR_EXCHANGE_RATE,
			NVL((Select AP_EXCH.CONVERSION_RATE FROM
            WSC_AHCS_LSI_EXCHANGE_RATE_T AP_EXCH 
            WHERE AP_EXCH.FROM_CURRENCY=AP.functional_Currency_Code
	       AND AP_EXCH.TO_CURRENCY=NET_AP.FUNCTIONAL_CURR
           AND to_date(AP_EXCH.CONVERSION_DATE,'YYYY-MM-DD')=trunc(sysdate)
	       AND AP_EXCH.CONVERSION_RATE_TYPE=AP.EXCHANGE_RATE_TYPE),1) AP_EXCHANGE_RATE_NETTING,
           AP.EXCHANGE_RATE_TYPE AP_EXCHANGE_RATE_TYPE,
           EXCH_RATE.MEANING AR_EXCHANGE_RATE_TYPE,
		   NVL((Select AR_EXCH.CONVERSION_RATE FROM
           WSC_AHCS_LSI_EXCHANGE_RATE_T AR_EXCH 
           WHERE AR_EXCH.FROM_CURRENCY=AR.functional_Currency_Code
	       AND AR_EXCH.TO_CURRENCY=NET_AR.FUNCTIONAL_CURR
           AND to_date(AR_EXCH.CONVERSION_DATE,'YYYY-MM-DD')=trunc(sysdate)
	       AND AR_EXCH.CONVERSION_RATE_TYPE=AR.EXCHANGE_RATE_TYPE),1) AR_EXCHANGE_RATE_NETTING,
			AP.payment_currency invoice_currency_code_AP,AR.invoice_currency_code invoice_currency_code_AR,
		  AP.entered_invoice_amount entered_invoice_amount_AP,AR.entered_invoice_amount entered_invoice_amount_AR,
		  AP.functional_Currency_Code functional_Currency_Code_AP,AR.functional_Currency_Code functional_Currency_Code_AR,
		  AP.accounted_invoice_amount accounted_invoice_amount_AP,AR.accounted_invoice_amount accounted_invoice_amount_AR,
		  AP.intercompany_legal_entity intercompany_legal_entity_AP,AR.intercompany_legal_entity intercompany_legal_entity_AR,
		  AP.intercompany_transaction_type intercompany_transaction_type_AP,AR.intercompany_transaction_type intercompany_transaction_type_AR,
		  AP.intercompany_batch_number intercompany_batch_number_AP,
		  NET_AP.LEDGER_NAME NETTING_AP_LEDGER,NET_AR.LEDGER_NAME NETTING_AR_LEDGER,
          NET_AP.FUNCTIONAL_CURR NETTING_AP_FUN_CURR,NET_AR.FUNCTIONAL_CURR NETTING_AR_FUN_CURR,
		  GETNETTINGLE(substr(AP.GL_CODE_COMBINATION,1,4),AP.LEDGER_NAME,AR.LEDGER_NAME) NETTING_AP_LE,GETNETTINGLE(substr(AR.GL_CODE_COMBINATION,1,4),AP.LEDGER_NAME,AR.LEDGER_NAME) NETTING_AR_LE,
		  AP.invoice_number invoice_number_AP,AR.invoice_number invoice_number_AR ,
          NET_AP.Attribute1 AP_Final_BU,NET_AR.Attribute1 AR_Final_BU,
		  ISFINALBU(substr(AR.GL_CODE_COMBINATION,1,instr(AR.GL_CODE_COMBINATION,'.',1)-1),substr(AP.GL_CODE_COMBINATION,1,instr(AP.GL_CODE_COMBINATION,'.',1)-1),AP.LEDGER_NAME,AR.LEDGER_NAME) FINAL_BU_CON,
          ISNettingLEFinal(substr(AP.GL_CODE_COMBINATION,1,instr(AP.GL_CODE_COMBINATION,'.',1)-1),NET_AP.TAG,AP.LEDGER_NAME,AR.LEDGER_NAME) AP_Final_Netting_LE,WSC_LSI_PKG.ISNettingLEFinal(substr(AR.GL_CODE_COMBINATION,1,instr(AR.GL_CODE_COMBINATION,'.',1)-1),NET_AR.TAG,AP.LEDGER_NAME,AR.LEDGER_NAME) AR_Final_Netting_LE,
          NET_AP.Attribute2 AP_Final_by_rel_Netting_LE,NET_AR.Attribute2 AR_Final_by_rel_Netting_LE,
          AR.IC_TRX_NUMBER IC_TRX_NUMBER,
          AP.INVOICE_ID AP_INVOICE_ID,AR.INVOICE_ID AR_INVOICE_ID,
          AP.ACCOUNTING_PERIOD
	   from WSC_AHCS_LSI_AP_T AP,WSC_AHCS_LSI_AR_T AR,
       WSC_AHCS_LSI_LOOKUP_T NET_AP,WSC_AHCS_LSI_LOOKUP_T NET_AR,
	   WSC_AHCS_LSI_LOOKUP_T EXCH_RATE
	   Where 1=1 --AP.invoice_number=AR.invoice_number
       AND AP.intercompany_batch_number=AR.intercompany_batch_number
       AND AP.ic_trx_number=AR.ic_trx_number
        AND AP.ENTERED_INVOICE_AMOUNT=AR.ENTERED_INVOICE_AMOUNT
        AND AP.BATCH_ID=AR.BATCH_ID
        AND AP.BATCH_ID=P_BATCH_ID
        AND substr(AP.GL_CODE_COMBINATION,1,4)=substr(AR.GL_CODE_COMBINATION,29,4)
	   AND NET_AR.LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
	   AND NET_AR.DESCRIPTION=AR.intercompany_legal_entity
	   AND NET_AP.LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
       AND NET_AP.DESCRIPTION=AP.intercompany_legal_entity
	   AND EXCH_RATE.LOOKUP_TYPE = 'GL_DAILY_CONVERSION_TYPES'
	   AND EXCH_RATE.MEANING = NVL(AP.EXCHANGE_RATE_TYPE,'Actual Rate')
       AND AP.CHECK_ID IS NOT NULL 
       AND AR.RECEIPT_NUM IS NOT NULL
       AND AP.STATUS='SUCCESS'
       AND AR.STATUS='SUCCESS'
       AND NOT EXISTS (SELECT 1 FROM WSC_AHCS_LSI_NETTING_ENTRY_T
                       WHERE 1=1
                       AND ID1=AP.INVOICE_ID
                       AND ID2=AR.INVOICE_ID); 

      Cursor C1_extract_GL_rec IS
      Select JOURNAL_MAT.GR_SEGMENT1||'.'||JOURNAL_MAT.GR_SEGMENT2||'.'||JOURNAL_MAT.GR_SEGMENT3||'.'||JOURNAL_MAT.GR_SEGMENT4||'.'||JOURNAL_MAT.GR_SEGMENT5||'.'||JOURNAL_MAT.GR_SEGMENT6||'.'||JOURNAL_MAT.GR_SEGMENT7||'.'||JOURNAL_MAT.GR_SEGMENT8||'.'||JOURNAL_MAT.GR_SEGMENT9 AP_CCID,
                JOURNAL_MAT.GP_SEGMENT1||'.'||JOURNAL_MAT.GP_SEGMENT2||'.'||JOURNAL_MAT.GP_SEGMENT3||'.'||JOURNAL_MAT.GP_SEGMENT4||'.'||JOURNAL_MAT.GP_SEGMENT5||'.'||JOURNAL_MAT.GP_SEGMENT6||'.'||JOURNAL_MAT.GP_SEGMENT7||'.'||JOURNAL_MAT.GP_SEGMENT8||'.'||JOURNAL_MAT.GP_SEGMENT9 AR_CCID,
                JOURNAL_MAT.GR_SEGMENT1,JOURNAL_MAT.GR_SEGMENT2,JOURNAL_MAT.GR_SEGMENT3,JOURNAL_MAT.GR_SEGMENT4,JOURNAL_MAT.GR_SEGMENT5,JOURNAL_MAT.GR_SEGMENT6,JOURNAL_MAT.GR_SEGMENT7,JOURNAL_MAT.GR_SEGMENT8,JOURNAL_MAT.GR_SEGMENT9,
                JOURNAL_MAT.GP_SEGMENT1,JOURNAL_MAT.GP_SEGMENT2,JOURNAL_MAT.GP_SEGMENT3,JOURNAL_MAT.GP_SEGMENT4,JOURNAL_MAT.GP_SEGMENT5,JOURNAL_MAT.GP_SEGMENT6,JOURNAL_MAT.GP_SEGMENT7,JOURNAL_MAT.GP_SEGMENT8,JOURNAL_MAT.GP_SEGMENT9,
                JOURNAL_MAT.GR_LEDGER_NAME AP_LEDGER,JOURNAL_MAT.GP_LEDGER_NAME AR_LEDGER,
				SYSDATE AP_INVOICE_DATE,SYSDATE AR_INVOICE_DATE,
                JOURNAL_MAT.GR_EXCHANGE_RATE_DATE AP_EXCHANGE_DATE,JOURNAL_MAT.GP_EXCHANGE_RATE_DATE AR_EXCHANGE_DATE,
                JOURNAL_MAT.GR_GL_ACCOUNTING_DATE AP_ACC_DATE,JOURNAL_MAT.GP_GL_ACCOUNTING_DATE AR_ACC_DATE,
                JOURNAL_MAT.GR_EXCHANGE_RATE AP_EXCHANGE_RATE,JOURNAL_MAT.GP_EXCHANGE_RATE AR_EXCHANGE_RATE,
			/*NVL((Select AP_EXCH.CONVERSION_RATE FROM
            WSC_AHCS_LSI_EXCHANGE_RATE_T AP_EXCH
            WHERE AP_EXCH.FROM_CURRENCY=JOURNAL_MAT.GR_functional_Currency_Code
               AND AP_EXCH.TO_CURRENCY=NET_AP.FUNCTIONAL_CURR
           AND to_date(AP_EXCH.CONVERSION_DATE,'YYYY-MM-DD')=trunc(sysdate)
               AND AP_EXCH.CONVERSION_RATE_TYPE=JOURNAL_MAT.GR_EXCHANGE_RATE_TYPE),1) AP_EXCHANGE_RATE_NETTING,
			   NVL((Select AR_EXCH.CONVERSION_RATE FROM
			    WSC_AHCS_LSI_EXCHANGE_RATE_T AR_EXCH
				WHERE AR_EXCH.FROM_CURRENCY=JOURNAL_MAT.GP_functional_Currency_Code
               AND AR_EXCH.TO_CURRENCY=NET_AR.FUNCTIONAL_CURR
           AND to_date(AR_EXCH.CONVERSION_DATE,'YYYY-MM-DD')=trunc(sysdate)
               AND AR_EXCH.CONVERSION_RATE_TYPE=JOURNAL_MAT.GP_EXCHANGE_RATE_TYPE),1) AR_EXCHANGE_RATE_NETTING,*/
                EXCH_RATE2.MEANING AP_EXCHANGE_RATE_TYPE,
                EXCH_RATE1.MEANING AR_EXCHANGE_RATE_TYPE,        
                JOURNAL_MAT.GR_ENTERED_CURRENCY_CODE invoice_currency_code_AP,
                JOURNAL_MAT.GP_ENTERED_CURRENCY_CODE   invoice_currency_code_AR,
                JOURNAL_MAT.GR_RUNNING_TOTAL_DR entered_invoice_amount_AP,JOURNAL_MAT.GP_RUNNING_TOTAL_DR entered_invoice_amount_AR, 
                JOURNAL_MAT.GR_functional_Currency_Code     functional_Currency_Code_AP,
                JOURNAL_MAT.GP_functional_Currency_Code functional_Currency_Code_AR,
                JOURNAL_MAT.GR_RUNNING_TOTAL_ACCOUNTED_DR accounted_invoice_amount_AP,JOURNAL_MAT.GP_RUNNING_TOTAL_ACCOUNTED_DR accounted_invoice_amount_AR, 
                JOURNAL_MAT.GR_SEGMENT1 intercompany_legal_entity_AP,JOURNAL_MAT.GP_SEGMENT1 intercompany_legal_entity_AR,
                JOURNAL_MAT.GR_INTERCOMPANY_TRANSACTION_TYPE intercompany_transaction_type_AP,JOURNAL_MAT.GP_INTERCOMPANY_TRANSACTION_TYPE intercompany_transaction_type_AR,
                JOURNAL_MAT.GR_INTERCOMPANY_BATCH_NUMBER intercompany_batch_number_AP, 
                NET_AP.LEDGER_NAME NETTING_AP_LEDGER,NET_AR.LEDGER_NAME NETTING_AR_LEDGER,
                NET_AP.FUNCTIONAL_CURR NETTING_AP_FUN_CURR,NET_AR.FUNCTIONAL_CURR NETTING_AR_FUN_CURR,
                --NET_AP.TAG NETTING_AP_LE,NET_AR.TAG NETTING_AR_LE,
                GETNETTINGLE(JOURNAL_MAT.GR_SEGMENT1,JOURNAL_MAT.GR_LEDGER_NAME,JOURNAL_MAT.GP_LEDGER_NAME) NETTING_AP_LE,GETNETTINGLE(JOURNAL_MAT.GP_SEGMENT1,JOURNAL_MAT.GR_LEDGER_NAME,JOURNAL_MAT.GP_LEDGER_NAME) NETTING_AR_LE,
                --JOURNAL_MAT.GR_GL_JOURNAL_NAME JOURNAL_NAME_GR,JOURNAL_MAT.GP_GL_JOURNAL_NAME JOURNAL_NAME_GP ,
                JOURNAL_MAT.GR_JOURNAL_ACCOUNTING_SEQUENCE||'-'||JOURNAL_MAT.GP_JOURNAL_ACCOUNTING_SEQUENCE JOURNAL_NAME_GR,
                JOURNAL_MAT.GR_JOURNAL_ACCOUNTING_SEQUENCE||'-'||JOURNAL_MAT.GP_JOURNAL_ACCOUNTING_SEQUENCE JOURNAL_NAME_GP,
                NET_AP.Attribute1 AP_Final_BU,NET_AR.Attribute1 AR_Final_BU,
				ISFINALBU(JOURNAL_MAT.GP_SEGMENT1,JOURNAL_MAT.GR_SEGMENT1,JOURNAL_MAT.GR_LEDGER_NAME,JOURNAL_MAT.GP_LEDGER_NAME) FINAL_BU_CON,
				 WSC_LSI_PKG.ISNettingLEFinal(JOURNAL_MAT.GR_SEGMENT1,NET_AP.TAG,JOURNAL_MAT.GR_LEDGER_NAME,JOURNAL_MAT.GP_LEDGER_NAME) AP_Final_Netting_LE,
				 WSC_LSI_PKG.ISNettingLEFinal(JOURNAL_MAT.GP_SEGMENT1,NET_AR.TAG,JOURNAL_MAT.GR_LEDGER_NAME,JOURNAL_MAT.GP_LEDGER_NAME) AR_Final_Netting_LE,
                ----WSC_LSI_PKG.ISNettingLEFinal(NET_AP.TAG) AP_Final_Netting_LE,WSC_LSI_PKG.ISNettingLEFinal(NET_AP.TAG) AR_Final_Netting_LE,
                NET_AP.Attribute2 AP_Final_by_rel_Netting_LE,NET_AR.Attribute2 AR_Final_by_rel_Netting_LE,
                JOURNAL_MAT.GP_INTERCOMPANY_TRANSACTION_NUMBER IC_TRX_NUMBER ,
                JOURNAL_MAT.GR_GL_JOURNAL_ID GR_JOURNAL_ID,JOURNAL_MAT.GP_GL_JOURNAL_ID GP_JOURNAL_ID, 
                JOURNAL_MAT.GR_GL_BATCH_ID GR_BATCH_ID,JOURNAL_MAT.GP_GL_BATCH_ID GP_BATCH_ID,
                JOURNAL_MAT.GR_JOURNAL_LINE_NUMBER,JOURNAL_MAT.GP_JOURNAL_LINE_NUMBER,
                to_char(SYSDATE,'MON-YYYY') ACCOUNTING_PERIOD
                from WSC_AHCS_LSI_JOURNAL_MATCH_T JOURNAL_MAT,
                WSC_AHCS_LSI_LOOKUP_T NET_AP,WSC_AHCS_LSI_LOOKUP_T NET_AR,
				WSC_AHCS_LSI_LOOKUP_T EXCH_RATE1,WSC_AHCS_LSI_LOOKUP_T EXCH_RATE2
                Where  NET_AR.LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
                AND NET_AR.DESCRIPTION=JOURNAL_MAT.GP_SEGMENT1
                AND NET_AP.LOOKUP_TYPE='WSC_LSI_NETTING_RELATIONSHIPS'
                AND NET_AP.DESCRIPTION=JOURNAL_MAT.GR_SEGMENT1
				AND EXCH_RATE1.LOOKUP_TYPE = 'GL_DAILY_CONVERSION_TYPES'
	            AND EXCH_RATE1.LOOKUP_CODE = decode(JOURNAL_MAT.GP_EXCHANGE_RATE_TYPE,'300000275885426','300000275885425','300000275885427','300000275885425',JOURNAL_MAT.GR_EXCHANGE_RATE_TYPE)
                AND EXCH_RATE2.LOOKUP_TYPE = 'GL_DAILY_CONVERSION_TYPES'
	            AND EXCH_RATE2.LOOKUP_CODE = decode(JOURNAL_MAT.GR_EXCHANGE_RATE_TYPE,'300000275885426','300000275885425','300000275885427','300000275885425',JOURNAL_MAT.GR_EXCHANGE_RATE_TYPE)
                AND JOURNAL_MAT.BATCH_ID=P_BATCH_ID
                AND NOT EXISTS (SELECT 1 FROM WSC_AHCS_LSI_NETTING_ENTRY_T
                       WHERE 1=1
                       AND ID1=JOURNAL_MAT.GR_GL_BATCH_ID
                       AND ID2=JOURNAL_MAT.GP_GL_BATCH_ID
                       AND ID3=JOURNAL_MAT.GR_GL_JOURNAL_ID
                       AND ID4=JOURNAL_MAT.GP_GL_JOURNAL_ID
                       AND ID5=JOURNAL_MAT.GR_JOURNAL_LINE_NUMBER
                       AND ID6=JOURNAL_MAT.GP_JOURNAL_LINE_NUMBER
                       AND SCENARIO NOT IN ('Common-Step 1',
                                            'Common-Step 1',
                                            'Common-Step 2',
                                            'Common-Step 2'));

        LV_FILE_NAME VARCHAR2(200);
	    LV_AP_NETTING_LE VARCHAR2(20);
	   LV_AR_NETTING_LE VARCHAR2(20);
       LV_AP_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AR_NETTING_LE_FINAL VARCHAR2(20);
	   LV_AP_IS_PRIORITY_BU NUMBER;
	   LV_AR_IS_PRIORITY_BU NUMBER;
       LV_AR_NETTING_RATE   NUMBER;
	  LV_AR_NETTING_RATE_SC5_2   NUMBER;
      LV_AR_NETTING_RATE_51   NUMBER;
	  LV_AR_NETTING_RATE_SC4_1 NUMBER;
	  LV_AR_NETTING_RATE_SC4_2 NUMBER;
      LV_AR_NETTING_RATE_SC52   NUMBER;
      LV_AR_NETTING_RATE_551   NUMBER;
      LV_AR_NETTING_RATE_SC6A1   NUMBER;
      LV_AR_NETTING_RATE91   NUMBER;
      LV_AR_NETTING_RATE92   NUMBER;
      LV_AR_NETTING_RATE6A241   NUMBER;
      LV_AR_NETTING_RATE_SC6A2   NUMBER;
      LV_AP_NETTING_IS_PRIORITY_BU NUMBER;
      LV_AR_NETTING_IS_PRIORITY_BU NUMBER;
      COUNTER                      NUMBER := 0;
      LV_COUNTER            NUMBER:=0;
      LV_FINAL_COUNTER      NUMBER:=0;
      LV_ERROR              VARCHAR2(200):=NULL;
	  LV_ATTIBUTE2_P		VARCHAR2(10);
	  LV_ATTIBUTE2_R		VARCHAR2(10);
      LV_AHCS_ELIGIBLE_COUNT NUMBER;
      LV_AP_UNMATCHED NUMBER;
      LV_AR_UNMATCHED NUMBER;
      LV_ACC_DATE TIMESTAMP;
      LV_AP_EXCHANGE_RATE_TYPE  VARCHAR2(50);
      LV_AR_EXCHANGE_RATE_TYPE  VARCHAR2(50);
      LV_TEMP number;
      LV_NET_AP_LEDGER_NAME  VARCHAR2(50);
      LV_NET_AP_FUN_CURRENCY_CODE    VARCHAR2(50);
      LV_NET_AR_LEDGER_NAME  VARCHAR2(50);
      LV_NET_AR_FUN_CURRENCY_CODE    VARCHAR2(50);


 BEGIN

 --- EXECUTE IMMEDIATE 'TRUNCATE TABLE WSC_AHCS_LSI_NETTING_ENTRY_T';

    BEGIN
	SELECT FILE_NAME INTO LV_FILE_NAME FROM WSC_AHCS_LSI_CONTROL_T
	WHERE BATCH_ID = P_BATCH_ID;
	END; 




If RECORD_TYPE='AP-AR' THEN

	FOR rc1 in C1_extract_AP_AR_rec LOOP

	  LV_AP_NETTING_LE := rc1.NETTING_AP_LE;
       logging_insert('Oracle LSI','' , 1, rc1.NETTING_AP_LE,'',sysdate );
	  LV_AR_NETTING_LE := rc1.NETTING_AR_LE;
      logging_insert('Oracle LSI','' , 1, rc1.NETTING_AR_LE,'',sysdate );
	/*  LV_AP_NETTING_LE_FINAL := ISNettingLEFinal(rc1.NETTING_AP_LE);
      logging_insert('Oracle LSI','' , 1, LV_AP_NETTING_LE_FINAL,'',sysdate );
	  LV_AR_NETTING_LE_FINAL := ISNettingLEFinal(rc1.NETTING_AR_LE);
       logging_insert('Oracle LSI','' , 1, LV_AR_NETTING_LE_FINAL,'',sysdate ); */
	  LV_AP_IS_PRIORITY_BU :=ISPriorityBU(substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1));
       logging_insert('Oracle LSI','' , 1, LV_AP_IS_PRIORITY_BU,'',sysdate );
	  LV_AR_IS_PRIORITY_BU :=ISPriorityBU(substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1));
       logging_insert('Oracle LSI','' , 1, LV_AR_IS_PRIORITY_BU,'',sysdate );
      LV_AP_NETTING_IS_PRIORITY_BU :=ISPriorityBU(rc1.NETTING_AP_LE);
       logging_insert('Oracle LSI','' , 1, LV_AP_IS_PRIORITY_BU,'',sysdate );
	  LV_AR_NETTING_IS_PRIORITY_BU :=ISPriorityBU(rc1.NETTING_AR_LE);
       logging_insert('Oracle LSI','' , 1, LV_AR_IS_PRIORITY_BU,'',sysdate );

      IF GetEMEA(rc1.AP_LEDGER)='No' THEN
        Select LEDGER_NAME,CURRENCY_CODE
        INTO LV_NET_AP_LEDGER_NAME,LV_NET_AP_FUN_CURRENCY_CODE
        FROM WSC_GL_LEGAL_ENTITIES_T
        WHERE FLEX_SEGMENT_VALUE=LV_AP_NETTING_LE;
      ELSE 
        LV_NET_AP_LEDGER_NAME :=rc1.NETTING_AP_LEDGER;
        LV_NET_AP_FUN_CURRENCY_CODE := rc1.NETTING_AP_FUN_CURR;
      END IF;  

      IF GetEMEA(rc1.AR_LEDGER)='No' THEN
        Select LEDGER_NAME,CURRENCY_CODE
        INTO LV_NET_AR_LEDGER_NAME,LV_NET_AR_FUN_CURRENCY_CODE
        FROM WSC_GL_LEGAL_ENTITIES_T
        WHERE FLEX_SEGMENT_VALUE=LV_AR_NETTING_LE;
      ELSE 
        LV_NET_AR_LEDGER_NAME :=rc1.NETTING_AR_LEDGER;
        LV_NET_AR_FUN_CURRENCY_CODE := rc1.NETTING_AR_FUN_CURR;
      END IF;  



       COUNTER := 0;

     BEGIN  

	----------------------------------------------------------------------------------
	/*********************************Scenario 1************************************/
	----------------------------------------------------------------------------------
	 IF (LV_AP_NETTING_LE=LV_AR_NETTING_LE AND rc1.AP_Final_Netting_LE='Yes' AND rc1.AR_Final_Netting_LE='Yes' AND  LV_AP_IS_PRIORITY_BU<=0 and LV_AR_IS_PRIORITY_BU<=0) THEN
           logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC1',rc1.intercompany_batch_number_ap,sysdate );

            LSI_SC1(P_BATCH_ID                       ,
                    rc1.AR_CCID                          ,
                    rc1.AR_LEDGER                        ,
                    rc1.functional_Currency_Code_AR      ,
                    rc1.accounted_invoice_amount_AR      ,
                    rc1.intercompany_legal_entity_AR     ,
                    rc1.intercompany_transaction_type_AR ,
                    rc1.invoice_number_AR                ,
                    rc1.AP_CCID                          ,
                    rc1.AP_LEDGER                        ,
                    rc1.functional_Currency_Code_AP      ,
                    rc1.accounted_invoice_amount_AP      ,
                    rc1.intercompany_transaction_type_AP ,
                    rc1.invoice_number_AP                ,
                    rc1.NETTING_AR_LE                    ,
                    LV_NET_AR_LEDGER_NAME, ---rc1.NETTING_AR_LEDGER                ,
                    rc1.AR_EXCHANGE_RATE_NETTING         ,
                    LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR              ,
                    rc1.AP_EXCHANGE_RATE_NETTING         ,
                    LV_NET_AP_FUN_CURRENCY_CODE, --- rc1.NETTING_AP_FUN_CURR              ,
                    rc1.intercompany_legal_entity_AP     ,
                    rc1.NETTING_AP_LE                    ,
                    LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER                ,
                    rc1.AP_EXCHANGE_RATE_TYPE 			,
                    rc1.AR_EXCHANGE_RATE_TYPE			,
                    RECORD_TYPE             ,
                    rc1.IC_TRX_NUMBER           ,
                    rc1.AP_INVOICE_ID             ,
                    rc1.AR_INVOICE_ID            ,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    rc1.ACCOUNTING_PERIOD,
                    rc1.intercompany_batch_number_ap);   

               COUNTER := COUNTER +1;     

  ----------------------------------------------------------------------------------
  /*********************Scenario 2 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF ((LV_AP_NETTING_LE<>LV_AR_NETTING_LE AND rc1.AP_Final_Netting_LE='Yes' AND rc1.AR_Final_Netting_LE='Yes' AND  rc1.AP_Final_BU='No' and rc1.AR_Final_BU='No' and rc1.FINAL_BU_CON='No')) THEN
     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC2',rc1.intercompany_batch_number_ap,sysdate );

        LSI_SC2(rc1.AR_CCID                          ,                
                            P_BATCH_ID                       ,
                            rc1.AR_LEDGER                        ,
                            rc1.FUNCTIONAL_CURRENCY_CODE_AR      ,
                            rc1.ACCOUNTED_INVOICE_AMOUNT_AR      ,
                            rc1.INTERCOMPANY_LEGAL_ENTITY_AR     ,
                            rc1.INTERCOMPANY_TRANSACTION_TYPE_AR ,
                            rc1.INVOICE_NUMBER_AP			     ,
                            rc1.AP_CCID                          ,
                            rc1.AP_LEDGER                        ,
                            rc1.FUNCTIONAL_CURRENCY_CODE_AP      ,
                            rc1.ACCOUNTED_INVOICE_AMOUNT_AP      ,
                            rc1.INTERCOMPANY_TRANSACTION_TYPE_AP ,
                            rc1.INTERCOMPANY_LEGAL_ENTITY_AP     ,
                            rc1.NETTING_AR_LE                    ,
                            LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER                ,
                            rc1.AR_EXCHANGE_RATE_NETTING         ,
                            LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR              ,
                            rc1.NETTING_AP_LE                    ,
                            LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER                ,
                            rc1.AP_EXCHANGE_RATE_NETTING         ,
                            LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR              ,
                            rc1.AP_EXCHANGE_RATE_TYPE 			 ,
                            rc1.AR_EXCHANGE_RATE_TYPE			 ,
                            RECORD_TYPE					 ,
                            rc1.IC_TRX_NUMBER 					 ,
                            rc1.AP_INVOICE_ID                    ,
                            rc1.AR_INVOICE_ID                    ,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            rc1.ACCOUNTING_PERIOD,
                            rc1.intercompany_batch_number_ap); 

                        COUNTER := COUNTER +1;    


  ----------------------------------------------------------------------------------
  /*********************Scenario 3 ******************************************/
  ----------------------------------------------------------------------------------  
      ---Manish
	ELSIF (rc1.AP_Final_BU='Yes' AND rc1.AR_Final_BU='Yes') OR (rc1.FINAL_BU_CON='Yes')THEN
   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC3',rc1.intercompany_batch_number_ap,sysdate );

     LSI_SC3(rc1.AR_CCID                         ,                    
                    P_BATCH_ID                      ,
                    rc1.AR_LEDGER                       ,
                    rc1.FUNCTIONAL_CURRENCY_CODE_AR     ,
                    rc1.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                    rc1.INTERCOMPANY_LEGAL_ENTITY_AR    ,
                    rc1.INTERCOMPANY_TRANSACTION_TYPE_AR,
                    rc1.INVOICE_NUMBER_AP			    ,
                    rc1.AP_CCID                         ,
                    rc1.AP_LEDGER                       ,
                    rc1.FUNCTIONAL_CURRENCY_CODE_AP     ,
                    rc1.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                    rc1.INTERCOMPANY_TRANSACTION_TYPE_AP,
                    rc1.INTERCOMPANY_LEGAL_ENTITY_AP    ,
                    rc1.NETTING_AR_LE                   ,
                    LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                    rc1.AR_EXCHANGE_RATE_NETTING        ,
                    LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                    rc1.NETTING_AP_LE                   ,
                    LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                    rc1.AP_EXCHANGE_RATE_NETTING        ,
                    LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                    rc1.AP_EXCHANGE_RATE_TYPE 		  ,
                    rc1.AR_EXCHANGE_RATE_TYPE			,
                    RECORD_TYPE					,
                    rc1.IC_TRX_NUMBER 					,
                    rc1.AP_INVOICE_ID                   ,
                    rc1.AR_INVOICE_ID                   ,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    rc1.ACCOUNTING_PERIOD,
                    rc1.intercompany_batch_number_ap);   

                 COUNTER := COUNTER +1;   



  ----------------------------------------------------------------------------------
  /*********************Scenario 4.1 ******************************************/
  ----------------------------------------------------------------------------------  

	 ELSIF (LV_AR_IS_PRIORITY_BU!=0 AND LV_AP_NETTING_LE=substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1)) THEN
       logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC4.1',rc1.intercompany_batch_number_ap,sysdate );

     LSI_SC4_1(rc1.AR_CCID                         ,               
                P_BATCH_ID                      ,
                rc1.AR_LEDGER                       ,
                rc1.FUNCTIONAL_CURRENCY_CODE_AR     ,
                rc1.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                rc1.INTERCOMPANY_LEGAL_ENTITY_AR    ,
                rc1.INTERCOMPANY_TRANSACTION_TYPE_AR,
                rc1.INVOICE_NUMBER_AP			    ,
                rc1.AP_CCID                         ,
                rc1.AP_LEDGER                       ,
                rc1.FUNCTIONAL_CURRENCY_CODE_AP     ,
                rc1.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                rc1.INTERCOMPANY_TRANSACTION_TYPE_AP,
                rc1.INTERCOMPANY_LEGAL_ENTITY_AP    ,
                rc1.NETTING_AR_LE                   ,
                LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                rc1.AR_EXCHANGE_RATE_NETTING        ,
                LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                rc1.NETTING_AP_LE                   ,
                LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                rc1.AP_EXCHANGE_RATE_NETTING        ,
                LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                rc1.ENTERED_INVOICE_AMOUNT_AP       ,
                rc1.AP_EXCHANGE_RATE_TYPE 		  ,
                rc1.AR_EXCHANGE_RATE_TYPE			,
               RECORD_TYPE					,
                rc1.IC_TRX_NUMBER 					,
                rc1.AP_INVOICE_ID                   ,
                rc1.AR_INVOICE_ID                   ,
                NULL,
                NULL,
                NULL,
                NULL,
                rc1.ACCOUNTING_PERIOD,
                rc1.intercompany_batch_number_ap);  

              COUNTER := COUNTER +1;  


	---Scenario 4.1 - END ---
  ----------------------------------------------------------------------------------
  /*********************Scenario 4.2 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF (LV_AP_IS_PRIORITY_BU!=0 AND LV_AR_NETTING_LE=substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1)) THEN

      logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC4.2',rc1.intercompany_batch_number_ap,sysdate );
     LSI_SC4_2(rc1.AR_CCID                         ,   
                P_BATCH_ID  					,
                rc1.AR_LEDGER                       ,
                rc1.FUNCTIONAL_CURRENCY_CODE_AR     ,
                rc1.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                rc1.INTERCOMPANY_LEGAL_ENTITY_AR    ,
                rc1.INTERCOMPANY_TRANSACTION_TYPE_AR,
                rc1.INVOICE_NUMBER_AP			    ,
                rc1.AP_CCID                         ,
                rc1.AP_LEDGER                       ,
                rc1.FUNCTIONAL_CURRENCY_CODE_AP     ,
                rc1.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                rc1.INTERCOMPANY_TRANSACTION_TYPE_AP,
                rc1.INTERCOMPANY_LEGAL_ENTITY_AP    ,
                rc1.NETTING_AR_LE                   ,
                LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                rc1.AR_EXCHANGE_RATE_NETTING        ,
                LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                rc1.NETTING_AP_LE                   ,
                LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                rc1.AP_EXCHANGE_RATE_NETTING        ,
                LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                rc1.AP_EXCHANGE_RATE_TYPE 		    ,
                rc1.AR_EXCHANGE_RATE_TYPE			,
                RECORD_TYPE						,
                rc1.IC_TRX_NUMBER 					,
                rc1.AP_INVOICE_ID                   ,
                rc1.AR_INVOICE_ID                   ,
                NULL,
                NULL,
                NULL,
                NULL,
                rc1.ACCOUNTING_PERIOD,
                rc1.intercompany_batch_number_ap);  

               COUNTER := COUNTER +1; 


 ----------------------------------------------------------------------------------
  /*********************Scenario 5.1 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF ((LV_AR_IS_PRIORITY_BU>0 AND LV_AP_NETTING_LE!=substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1) AND LV_AP_IS_PRIORITY_BU=0 AND rc1.AP_Final_Netting_LE='Yes' AND (GetEMEA(rc1.AP_LEDGER)='Yes' OR GetEMEA(rc1.AR_LEDGER)='Yes')) OR 
    ( LV_AR_IS_PRIORITY_BU <> 0 AND LV_AP_NETTING_LE!=substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1) AND LV_AP_IS_PRIORITY_BU=0 AND GetEMEA(rc1.AP_LEDGER)='No' AND GetEMEA(rc1.AR_LEDGER)='No')) THEN

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC5.1',rc1.intercompany_batch_number_ap,sysdate );
   LSI_SC5_1(P_BATCH_ID                ,
            rc1.AR_CCID                         ,   
            rc1.AR_LEDGER                       ,
            rc1.FUNCTIONAL_CURRENCY_CODE_AR     ,
            rc1.ACCOUNTED_INVOICE_AMOUNT_AR     ,
            rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
            rc1.INTERCOMPANY_LEGAL_ENTITY_AR    ,
            rc1.INTERCOMPANY_TRANSACTION_TYPE_AR,
            rc1.INVOICE_NUMBER_AP			    ,
            rc1.INVOICE_NUMBER_AR               ,
            rc1.AP_CCID                         ,
            rc1.AP_LEDGER                       ,
            rc1.FUNCTIONAL_CURRENCY_CODE_AP     ,
            rc1.ACCOUNTED_INVOICE_AMOUNT_AP     ,
            rc1.INTERCOMPANY_TRANSACTION_TYPE_AP,
            rc1.INTERCOMPANY_LEGAL_ENTITY_AP    ,
            rc1.NETTING_AR_LE                   ,
            LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
            rc1.AR_EXCHANGE_RATE_NETTING        ,
            LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
            rc1.NETTING_AP_LE                   ,
            LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
            rc1.AP_EXCHANGE_RATE_NETTING        ,
            LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
            rc1.AP_EXCHANGE_RATE_TYPE 		    ,
            rc1.AR_EXCHANGE_RATE_TYPE			,
            RECORD_TYPE						,
            rc1.IC_TRX_NUMBER 					,
            rc1.AP_INVOICE_ID                   ,
            rc1.AR_INVOICE_ID                   ,
            NULL,
            NULL,
            NULL,
            NULL,
            rc1.ACCOUNTING_PERIOD);                   

      COUNTER := COUNTER +1;

    ----------------------------------------------------------------------------------
  /*********************Scenario 5.2 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF ((LV_AP_IS_PRIORITY_BU>0 AND LV_AR_NETTING_LE!=substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1) AND LV_AR_IS_PRIORITY_BU=0 AND rc1.AR_Final_Netting_LE='Yes' AND (GetEMEA(rc1.AP_LEDGER)='Yes' OR GetEMEA(rc1.AR_LEDGER)='Yes')) OR 
    ( LV_AP_IS_PRIORITY_BU <> 0 AND LV_AR_NETTING_LE!=substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1) AND LV_AR_IS_PRIORITY_BU=0 AND GetEMEA(rc1.AP_LEDGER)='No' AND GetEMEA(rc1.AR_LEDGER)='No')) THEN    

            logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC5.2',rc1.intercompany_batch_number_ap,sysdate );
                  LSI_SC5_2(P_BATCH_ID				,
                        rc1.AR_CCID                         ,  
                        rc1.AR_LEDGER                       ,
                        rc1.FUNCTIONAL_CURRENCY_CODE_AR     ,
                        rc1.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc1.INTERCOMPANY_LEGAL_ENTITY_AR    ,
                        rc1.INTERCOMPANY_TRANSACTION_TYPE_AR,
                        rc1.INVOICE_NUMBER_AP			    ,
                        rc1.INVOICE_NUMBER_AR               ,
                        rc1.AP_CCID                         ,
                        rc1.AP_LEDGER                       ,
                        rc1.FUNCTIONAL_CURRENCY_CODE_AP     ,
                        rc1.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                        rc1.INTERCOMPANY_TRANSACTION_TYPE_AP,
                        rc1.INTERCOMPANY_LEGAL_ENTITY_AP    ,
                        rc1.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                        rc1.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                        rc1.AP_EXCHANGE_RATE_TYPE 		    ,
                        rc1.AR_EXCHANGE_RATE_TYPE			,
                        RECORD_TYPE					,
                        rc1.IC_TRX_NUMBER 					,
                        rc1.AP_INVOICE_ID                   ,
                        rc1.AR_INVOICE_ID                   ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD);                   

            COUNTER := COUNTER +1;

----------------------------------------------------------------------------------
  /*********************Scenario 6A-1 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF (LV_AR_NETTING_IS_PRIORITY_BU<>0 AND  rc1.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AP_LE)!=GetNettingNettingLE(rc1.NETTING_AR_LE) AND substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1)!=rc1.NETTING_AR_LE  AND rc1.AP_Final_Netting_LE='No' AND (rc1.AR_Final_BU!='Yes' OR rc1.AP_Final_BU!='Yes') AND rc1.FINAL_BU_CON='No') THEN    

      logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6A1',rc1.intercompany_batch_number_ap,sysdate );
                         LSI_SC6A1(P_BATCH_ID            ,
                                        rc1.AR_CCID                         ,
                                        rc1.AR_LEDGER                       ,
                                        rc1.functional_Currency_Code_AR     ,
                                        rc1.accounted_invoice_amount_AR     ,
                                        rc1.intercompany_legal_entity_AR    ,
                                        rc1.intercompany_transaction_type_AR,
                                        rc1.invoice_number_AR               ,
                                        rc1.AP_CCID                         ,
                                        rc1.AP_LEDGER                       ,
                                        rc1.functional_Currency_Code_AP     ,
                                        rc1.accounted_invoice_amount_AP     ,
                                        rc1.intercompany_transaction_type_AP,
                                        rc1.invoice_number_AP               ,
                                        rc1.NETTING_AR_LE                   ,
                                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                                        rc1.intercompany_legal_entity_AP    ,
                                        rc1.NETTING_AP_LE                   ,
                                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                                        rc1.AP_EXCHANGE_RATE_TYPE           ,
                                        rc1.AR_EXCHANGE_RATE_TYPE           ,
                                        RECORD_TYPE                    ,
                                        rc1.IC_TRX_NUMBER                   ,
                                        rc1.AP_INVOICE_ID                   ,
                                        rc1.AR_INVOICE_ID                   ,
                                        NULL,
                                        NULL,
                                        NULL,
                                        NULL,
                                        rc1.ACCOUNTING_PERIOD               ,
                                        rc1.INTERCOMPANY_BATCH_NUMBER_AP);


            COUNTER := COUNTER +1;                            

----------------------------------------------------------------------------------
  /*********************Scenario 6A-2 ******************************************/
  ----------------------------------------------------------------------------------  
	ELSIF (LV_AP_NETTING_IS_PRIORITY_BU<>0 AND  rc1.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AP_LE)!=GetNettingNettingLE(rc1.NETTING_AR_LE) AND substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1)!=rc1.NETTING_AP_LE  AND rc1.AR_Final_Netting_LE='No' AND (rc1.AR_Final_BU!='Yes' OR rc1.AP_Final_BU!='Yes') AND rc1.FINAL_BU_CON='No') THEN    

     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6A2',rc1.intercompany_batch_number_ap,sysdate );
                        LSI_SC6A2(P_BATCH_ID                  ,
                                rc1.AR_CCID                         ,
                                rc1.AR_LEDGER                       ,
                                rc1.functional_Currency_Code_AR     ,
                                rc1.accounted_invoice_amount_AR     ,
                                rc1.intercompany_legal_entity_AR    ,
                                rc1.intercompany_transaction_type_AR,
                                rc1.invoice_number_AR               ,
                                rc1.AP_CCID                         ,
                                rc1.AP_LEDGER                       ,
                                rc1.functional_Currency_Code_AP     ,
                                rc1.accounted_invoice_amount_AP     ,
                                rc1.intercompany_transaction_type_AP,
                                rc1.invoice_number_AP               ,
                                rc1.NETTING_AR_LE                   ,
                                LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                                rc1.AR_EXCHANGE_RATE_NETTING        ,
                                LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                                rc1.AP_EXCHANGE_RATE_NETTING        ,
                                LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                                rc1.intercompany_legal_entity_AP    ,
                                rc1.NETTING_AP_LE                   ,
                                LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                                rc1.AP_EXCHANGE_RATE_TYPE           ,
                                rc1.AR_EXCHANGE_RATE_TYPE           ,
                                RECORD_TYPE                           ,
                                rc1.IC_TRX_NUMBER                   ,
                                rc1.AP_INVOICE_ID                   ,
                                rc1.AR_INVOICE_ID                   ,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                rc1.ACCOUNTING_PERIOD,
                                rc1.INTERCOMPANY_BATCH_NUMBER_AP);

                COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 6B1 ******************************************/
  ----------------------------------------------------------------------------------  

  ELSIF (LV_AR_NETTING_IS_PRIORITY_BU<>0 AND rc1.AR_Final_Netting_LE='Yes' AND GetNettingNettingLE(rc1.NETTING_AP_LE)=GetNettingNettingLE(rc1.NETTING_AR_LE) AND substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1)!=rc1.NETTING_AR_LE  AND rc1.AP_Final_Netting_LE='No' AND (rc1.AR_Final_BU!='Yes' OR rc1.AP_Final_BU!='Yes') AND rc1.FINAL_BU_CON='No') THEN
       logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6B1',rc1.intercompany_batch_number_ap,sysdate );
                   LSI_SC6B1(P_BATCH_ID                ,
                            rc1.AR_CCID                         ,
                            rc1.AR_LEDGER                       ,
                            rc1.functional_Currency_Code_AR     ,
                            rc1.accounted_invoice_amount_AR     ,
                            rc1.intercompany_legal_entity_AR    ,
                            rc1.intercompany_transaction_type_AR,
                            rc1.invoice_number_AR               ,
                            rc1.AP_CCID                         ,
                            rc1.AP_LEDGER                       ,
                            rc1.functional_Currency_Code_AP     ,
                            rc1.accounted_invoice_amount_AP     ,
                            rc1.intercompany_transaction_type_AP,
                            rc1.invoice_number_AP               ,
                            rc1.NETTING_AR_LE                   ,
                            LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                            rc1.AR_EXCHANGE_RATE_NETTING        ,
                            LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                            rc1.AP_EXCHANGE_RATE_NETTING        ,
                            LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                            rc1.intercompany_legal_entity_AP    ,
                            rc1.NETTING_AP_LE                   ,
                            LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                            rc1.AP_EXCHANGE_RATE_TYPE           ,
                            rc1.AR_EXCHANGE_RATE_TYPE           ,
                            RECORD_TYPE                         ,
                            rc1.IC_TRX_NUMBER                   ,
                            rc1.AP_INVOICE_ID                   ,
                            rc1.AR_INVOICE_ID                   ,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            rc1.ACCOUNTING_PERIOD               ,
                            rc1.INTERCOMPANY_BATCH_NUMBER_AP);                                            

                    COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 6B2 ******************************************/
  ----------------------------------------------------------------------------------                                              

  ELSIF (LV_AP_NETTING_IS_PRIORITY_BU<>0 AND rc1.AP_Final_Netting_LE='Yes' AND GetNettingNettingLE(rc1.NETTING_AP_LE)=GetNettingNettingLE(rc1.NETTING_AR_LE) AND substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1)!=rc1.NETTING_AP_LE  AND rc1.AR_Final_Netting_LE='No' AND (rc1.AR_Final_BU!='Yes' OR rc1.AP_Final_BU!='Yes') AND rc1.FINAL_BU_CON='No') THEN

    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6B2',rc1.intercompany_batch_number_ap,sysdate );

             LSI_SC6B2(P_BATCH_ID                ,
                        rc1.AR_CCID                         ,
                        rc1.AR_LEDGER                       ,
                        rc1.functional_Currency_Code_AR     ,
                        rc1.accounted_invoice_amount_AR     ,
                        rc1.intercompany_legal_entity_AR    ,
                        rc1.intercompany_transaction_type_AR,
                        rc1.invoice_number_AR               ,
                        rc1.AP_CCID                         ,
                        rc1.AP_LEDGER                       ,
                        rc1.functional_Currency_Code_AP     ,
                        rc1.accounted_invoice_amount_AP     ,
                        rc1.intercompany_transaction_type_AP,
                        rc1.invoice_number_AP               ,
                        rc1.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                        rc1.intercompany_legal_entity_AP    ,
                        rc1.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                        rc1.AP_EXCHANGE_RATE_TYPE           ,
                        rc1.AR_EXCHANGE_RATE_TYPE           ,
                        RECORD_TYPE		                    ,
                        rc1.IC_TRX_NUMBER                   ,
                        rc1.AP_INVOICE_ID                   ,
                        rc1.AR_INVOICE_ID                   ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD               ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP);                                         

                    COUNTER := COUNTER +1;
  ----------------------------------------------------------------------------------
  /*********************Scenario 7A1 ******************************************/
  ----------------------------------------------------------------------------------  
   ELSIF (LV_AR_IS_PRIORITY_BU>0 AND rc1.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AP_LE)=substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1)) THEN

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7A1',rc1.intercompany_batch_number_ap,sysdate );
    LSI_SC7A1(P_BATCH_ID                             ,
                        rc1.AR_CCID                         ,
                        rc1.AR_LEDGER                       ,
                        rc1.functional_Currency_Code_AR     ,
                        rc1.accounted_invoice_amount_AR     ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc1.intercompany_legal_entity_AR    ,
                        rc1.intercompany_transaction_type_AR,
                        rc1.invoice_number_AR               ,
                        rc1.AP_CCID                         ,
                        rc1.AP_LEDGER                       ,
                        rc1.functional_Currency_Code_AP     ,
                        rc1.accounted_invoice_amount_AP     ,
                        rc1.intercompany_transaction_type_AP,
                        rc1.invoice_number_AP               ,
                        rc1.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                        rc1.intercompany_legal_entity_AP    ,
                        rc1.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                        rc1.AP_EXCHANGE_RATE_TYPE           ,
                        rc1.AR_EXCHANGE_RATE_TYPE           ,
                        RECORD_TYPE                     ,
                        rc1.IC_TRX_NUMBER                   ,
                        rc1.AP_INVOICE_ID                   ,
                        rc1.AR_INVOICE_ID                   ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD );                                           

                    COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 7A2 ******************************************/
  ----------------------------------------------------------------------------------  
   ELSIF (LV_AP_IS_PRIORITY_BU>0 AND rc1.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AR_LE)=substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1)) THEN 

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7A2',rc1.intercompany_batch_number_ap,sysdate );
    LSI_SC7A2( P_BATCH_ID                             ,
                        rc1.AR_CCID                         ,
                        rc1.AR_LEDGER                       ,
                        rc1.functional_Currency_Code_AR     ,
                        rc1.accounted_invoice_amount_AR     ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc1.intercompany_legal_entity_AR    ,
                        rc1.intercompany_transaction_type_AR,
                        rc1.invoice_number_AR               ,
                        rc1.AP_CCID                         ,
                        rc1.AP_LEDGER                       ,
                        rc1.functional_Currency_Code_AP     ,
                        rc1.accounted_invoice_amount_AP     ,
                        rc1.intercompany_transaction_type_AP,
                        rc1.invoice_number_AP               ,
                        rc1.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                        rc1.intercompany_legal_entity_AP    ,
                        rc1.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                        rc1.AP_EXCHANGE_RATE_TYPE           ,
                        rc1.AR_EXCHANGE_RATE_TYPE           ,
                        RECORD_TYPE                     ,
                        rc1.IC_TRX_NUMBER                   ,
                        rc1.AP_INVOICE_ID                   ,
                        rc1.AR_INVOICE_ID                   ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD );                                           

                    COUNTER := COUNTER +1;
  ----------------------------------------------------------------------------------
  /*********************Scenario 7B1 ******************************************/
  ----------------------------------------------------------------------------------  
    ELSIF (LV_AR_IS_PRIORITY_BU>0 AND rc1.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AP_LE)!=substr(rc1.AR_CCID,1,instr(rc1.AR_CCID,'.',1)-1)) THEN 

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7B1',rc1.intercompany_batch_number_ap,sysdate );
      LSI_SC7B1(P_BATCH_ID               ,
                        rc1.AR_CCID                          ,
                        rc1.AR_LEDGER                        ,
                        rc1.functional_Currency_Code_AR      ,
                        rc1.accounted_invoice_amount_AR      ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP     ,
                        rc1.intercompany_legal_entity_AR     ,
                        rc1.intercompany_transaction_type_AR ,
                        rc1.invoice_number_AR                ,
                        rc1.AP_CCID                          ,
                        rc1.AP_LEDGER                        ,
                        rc1.functional_Currency_Code_AP      ,
                        rc1.accounted_invoice_amount_AP      ,
                        rc1.intercompany_transaction_type_AP ,
                        rc1.invoice_number_AP                ,
                        rc1.NETTING_AR_LE                    ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER                ,
                        rc1.AR_EXCHANGE_RATE_NETTING         ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR              ,
                        rc1.AP_EXCHANGE_RATE_NETTING         ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR              ,
                        rc1.intercompany_legal_entity_AP     ,
                        rc1.NETTING_AP_LE                    ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER                ,
                        rc1.AP_EXCHANGE_RATE_TYPE            ,
                        rc1.AR_EXCHANGE_RATE_TYPE            ,
                        RECORD_TYPE                      ,
                        rc1.IC_TRX_NUMBER                    ,
                        rc1.AP_INVOICE_ID                    ,
                        rc1.AR_INVOICE_ID                    ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD);
            COUNTER := COUNTER +1;

 ----------------------------------------------------------------------------------
  /*********************Scenario 7B2 ******************************************/
  ----------------------------------------------------------------------------------                                            

    ELSIF (LV_AP_IS_PRIORITY_BU>0 AND rc1.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc1.NETTING_AR_LE)!=substr(rc1.AP_CCID,1,instr(rc1.AP_CCID,'.',1)-1)) THEN                                        

       logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7B2',rc1.intercompany_batch_number_ap,sysdate );
        logging_insert('Oracle LSI',P_BATCH_ID ,1, RECORD_TYPE,rc1.intercompany_batch_number_ap,sysdate );

            LSI_SC7B2( P_BATCH_ID                             ,
                        rc1.AR_CCID                         ,
                        rc1.AR_LEDGER                       ,
                        rc1.functional_Currency_Code_AR     ,
                        rc1.accounted_invoice_amount_AR     ,
                        rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc1.intercompany_legal_entity_AR    ,
                        rc1.intercompany_transaction_type_AR,
                        rc1.invoice_number_AR               ,
                        rc1.AP_CCID                         ,
                        rc1.AP_LEDGER                       ,
                        rc1.functional_Currency_Code_AP     ,
                        rc1.accounted_invoice_amount_AP     ,
                        rc1.intercompany_transaction_type_AP,
                        rc1.invoice_number_AP               ,
                        rc1.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                        rc1.AR_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                        rc1.AP_EXCHANGE_RATE_NETTING        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                        rc1.intercompany_legal_entity_AP    ,
                        rc1.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                        rc1.AP_EXCHANGE_RATE_TYPE           ,
                        rc1.AR_EXCHANGE_RATE_TYPE           ,
                        RECORD_TYPE                     ,
                        rc1.IC_TRX_NUMBER                   ,
                        rc1.AP_INVOICE_ID                   ,
                        rc1.AR_INVOICE_ID                   ,
                        NULL,
                        NULL,
                        NULL,
                        NULL,
                        rc1.ACCOUNTING_PERIOD );                                           


           COUNTER := COUNTER +1;
 ----------------------------------------------------------------------------------
  /*********************Scenario 8 ******************************************/
  ----------------------------------------------------------------------------------  

	ELSIF (rc1.AR_Final_Netting_LE='No' AND rc1.AP_Final_Netting_LE='No' AND (GetEMEA(rc1.AR_LEDGER)='Yes' OR GetEMEA(rc1.AP_LEDGER)='Yes')) THEN    

       logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC8',rc1.intercompany_batch_number_ap,sysdate );
              LSI_SC8(P_BATCH_ID                  ,
                    rc1.AR_CCID                         ,
                    rc1.AR_LEDGER                       ,
                    rc1.functional_Currency_Code_AR     ,
                    rc1.accounted_invoice_amount_AR     ,
                    rc1.INTERCOMPANY_BATCH_NUMBER_AP    ,
                    rc1.intercompany_legal_entity_AR    ,
                    rc1.intercompany_transaction_type_AR,
                    rc1.invoice_number_AR               ,
                    rc1.AP_CCID                         ,
                    rc1.AP_LEDGER                       ,
                    rc1.functional_Currency_Code_AP     ,
                    rc1.accounted_invoice_amount_AP     ,
                    rc1.intercompany_transaction_type_AP,
                    rc1.invoice_number_AP               ,
                    rc1.NETTING_AR_LE                   ,
                    LV_NET_AR_LEDGER_NAME, --rc1.NETTING_AR_LEDGER               ,
                    rc1.AR_EXCHANGE_RATE_NETTING        ,
                    LV_NET_AR_FUN_CURRENCY_CODE, --rc1.NETTING_AR_FUN_CURR             ,
                    rc1.AP_EXCHANGE_RATE_NETTING        ,
                    LV_NET_AP_FUN_CURRENCY_CODE, --rc1.NETTING_AP_FUN_CURR             ,
                    rc1.intercompany_legal_entity_AP    ,
                    rc1.NETTING_AP_LE                   ,
                    LV_NET_AP_LEDGER_NAME, --rc1.NETTING_AP_LEDGER               ,
                    rc1.AP_EXCHANGE_RATE_TYPE           ,
                    rc1.AR_EXCHANGE_RATE_TYPE           ,
                    RECORD_TYPE                    ,
                    rc1.IC_TRX_NUMBER                   ,
                    rc1.AP_INVOICE_ID                   ,
                    rc1.AR_INVOICE_ID                   ,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    rc1.ACCOUNTING_PERIOD);

           COUNTER := COUNTER +1;         

      END IF;

      IF COUNTER = 0 or COUNTER >1 THEN
         insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_MULTI_OR_NO_SCN' ,
                    'Multiple or NO Scenario Applied for IC :'||rc1.INTERCOMPANY_BATCH_NUMBER_AP ,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit;   
        END IF; 
     END; 
     Commit;

  /*    IF rc1.entered_invoice_amount_AR<0 THEN
        Update WSC_AHCS_LSI_NETTING_ENTRY_T
        SET ENTERED_AMT= (-1 * ENTERED_AMT),
            ACCOUNTED_AMT= (-1 * ACCOUNTED_AMT)
        WHERE IC_BATCH_NUMBER=rc1.intercompany_batch_number_AP
        AND IC_TRX_NUMBER=rc1.IC_TRX_NUMBER;
        commit;
     END IF;  */

    END LOOP; 


   Update WSC_AHCS_LSI_NETTING_ENTRY_T
   SET TO_BE_PROCESSED='Y'
   WHERE BATCH_ID=P_BATCH_ID
   AND TO_BE_PROCESSED IS NULL;
   commit;


   BEGIN 
  SELECT count(1)
  INTO LV_COUNTER
  FROM (select intercompany_batch_number||'-'||IC_TRX_NUMBER  
        from wsc_ahcs_lsi_ap_t a
        where batch_id=P_BATCH_ID 
        and status='SUCCESS' 
        intersect
        select intercompany_batch_number||'-'||IC_TRX_NUMBER 
        from wsc_ahcs_lsi_ar_t a
        where batch_id=P_BATCH_ID 
        and status='SUCCESS' 

        );
  Exception 
    WHEN OTHERS THEN
      LV_COUNTER := 0;
  END;

  BEGIN 
  SELECT count(distinct IC_BATCH_NUMBER||'-'||IC_TRX_NUMBER)
  INTO LV_FINAL_COUNTER
  FROM WSC_AHCS_LSI_NETTING_ENTRY_T
  WHERE  BATCH_ID=P_BATCH_ID;
  Exception 
    WHEN OTHERS THEN
      LV_FINAL_COUNTER := 0;
  END;          

 logging_insert('Oracle LSI',P_BATCH_ID ,1, 'LV_COUNTER_NOT_SUCCESS',LV_COUNTER,NULL );

  IF LV_COUNTER > 0 THEN
     update WSC_AHCS_LSI_CONTROL_T
   set NETTING_STATUS=CASE WHEN LV_COUNTER=LV_FINAL_COUNTER THEN 'SUCCESS' 
                            WHEN LV_FINAL_COUNTER=0 THEN 'NOT SUCCESS' ELSE 'PARTIAL SUCCESS' END,
   LAST_UPDATED_DATE=SYSDATE,
   AHCS_ELIGIBLE_LINES = LV_COUNTER,
   AHCS_FINAL_COUNT=LV_FINAL_COUNTER
   Where BATCH_ID=P_BATCH_ID;

    commit;

    update wsc_ahcs_int_control_t
    set GROUP_ID = null,
        STATUS = 'TRANSFORM_SUCCESS'
    where batch_id = p_batch_id;

    commit;
  ELSE   
  logging_insert('Oracle LSI',P_BATCH_ID ,1, 'LV_COUNTER_NOT_SUCCESSelse',LV_COUNTER,NULL );
    update WSC_AHCS_LSI_CONTROL_T
   set NETTING_STATUS='NOT SUCCESS',
   LAST_UPDATED_DATE=SYSDATE
   Where BATCH_ID=P_BATCH_ID;
    commit;
  END IF;

  ELSIF RECORD_TYPE='GL' THEN

    	FOR rc2 in C1_extract_GL_rec LOOP


	  LV_AP_NETTING_LE := rc2.NETTING_AP_LE;
       logging_insert('Oracle LSI',p_batch_id , 1, rc2.NETTING_AP_LE,'',sysdate );
	  LV_AR_NETTING_LE := rc2.NETTING_AR_LE;
      logging_insert('Oracle LSI',p_batch_id , 1, rc2.NETTING_AR_LE,'',sysdate );
/*	  LV_AP_NETTING_LE_FINAL := ISNettingLEFinal(rc2.NETTING_AP_LE);
      logging_insert('Oracle LSI','' , 1, LV_AP_NETTING_LE_FINAL,'',sysdate );
	  LV_AR_NETTING_LE_FINAL := ISNettingLEFinal(rc2.NETTING_AR_LE);
       logging_insert('Oracle LSI','' , 1, LV_AR_NETTING_LE_FINAL,'',sysdate ); */
	  LV_AP_IS_PRIORITY_BU :=ISPriorityBU(substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1));
       logging_insert('Oracle LSI',p_batch_id , 1, LV_AP_IS_PRIORITY_BU,'',sysdate );
	  LV_AR_IS_PRIORITY_BU :=ISPriorityBU(substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1));
       logging_insert('Oracle LSI',p_batch_id , 1, LV_AR_IS_PRIORITY_BU,'',sysdate );
      LV_AP_NETTING_IS_PRIORITY_BU :=ISPriorityBU(rc2.NETTING_AP_LE);
       logging_insert('Oracle LSI',p_batch_id , 1, LV_AP_IS_PRIORITY_BU,'',sysdate );
	  LV_AR_NETTING_IS_PRIORITY_BU :=ISPriorityBU(rc2.NETTING_AR_LE);
       logging_insert('Oracle LSI',p_batch_id , 1, LV_AR_IS_PRIORITY_BU,'',sysdate ); 

     BEGIN

     COUNTER := 0;



      IF GetEMEA(rc2.AP_LEDGER)='No' THEN
        Select LEDGER_NAME,CURRENCY_CODE
        INTO LV_NET_AP_LEDGER_NAME,LV_NET_AP_FUN_CURRENCY_CODE
        FROM WSC_GL_LEGAL_ENTITIES_T
        WHERE FLEX_SEGMENT_VALUE=LV_AP_NETTING_LE;
      ELSE 
        LV_NET_AP_LEDGER_NAME :=rc2.NETTING_AP_LEDGER;
        LV_NET_AP_FUN_CURRENCY_CODE := rc2.NETTING_AP_FUN_CURR;
      END IF;  

      IF GetEMEA(rc2.AR_LEDGER)='No' THEN
        Select LEDGER_NAME,CURRENCY_CODE
        INTO LV_NET_AR_LEDGER_NAME,LV_NET_AR_FUN_CURRENCY_CODE
        FROM WSC_GL_LEGAL_ENTITIES_T
        WHERE FLEX_SEGMENT_VALUE=LV_AR_NETTING_LE;
      ELSE 
        LV_NET_AR_LEDGER_NAME :=rc2.NETTING_AR_LEDGER;
        LV_NET_AR_FUN_CURRENCY_CODE := rc2.NETTING_AR_FUN_CURR;
      END IF; 

     ----------------------------------------------------------------------------------
	/*********************************Common Steps for All Scenarios************************************/
	----------------------------------------------------------------------------------

    logging_insert('Oracle LSI',p_batch_id , 1, 'Common step for all scenarios - start','',sysdate );



  BEGIN
 SELECT ACCOUNTING_DATE
 INTO LV_ACC_DATE 
 FROM WSC_AHCS_LSI_CONTROL_T
 WHERE BATCH_ID=P_BATCH_ID;
EXCEPTION
    WHEN OTHERS THEN
       LV_ACC_DATE:=NULL;
 END;  


     Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC4_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = rc2.invoice_currency_code_AR
      AND To_currency= rc2.functional_Currency_Code_AR
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(decode(rc2.AR_EXCHANGE_RATE_TYPE,'User','Actual Rate'),'Actual Rate');

      Exception
      WHEN OTHERS THEN
      LV_AR_NETTING_RATE_SC4_1 :=1;
End; 



     INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T (
  LSI_NETTING_ENTRY_ID, SCENARIO, EVENT_TYPE, 
  TRANSACTION, LE, LEDGER, LINE_TYPE, 
  EXCHANGE_RATE_DATE,
  EXCHANGE_RATE, 
  GL_NATURAL_ACC, ENTERED_CURR, ENTERED_AMT, 
  ACCOUNTED_CURR, ACCOUNTED_AMT, ACCOUNTING_DATE, 
  IC_LE, SOURCE_TRX_NUMBER, IC_BATCH_NUMBER, 
  BATCH_ID, GL_LEGAL_ENTITY, GL_OPER_GRP, 
  GL_ACCT, GL_DEPT, GL_SITE, GL_IC, 
  GL_PROJECTS, GL_FUT_1, GL_FUT_2, 
  EXCHANGE_RATE_TYPE, FILE_NAME, RECORD_TYPE, 
  IC_TRX_NUMBER, ID1,ID2,ID3,ID4,ID5,ID6, ACCOUNTING_PERIOD, 
  EVENT_CLASS
) 
VALUES 
  (  
    WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 
    'Common-Step 1', 
    'LSI_LIABILITY_SWITCH', 
    'GL ENTRY FOR GL FLOW', 
    substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1) ,  
    rc2.AR_LEDGER,
    'AHCS Cash Clearing', 
    to_char(rc2.AR_EXCHANGE_DATE,'YYYY-MM-DD') , 
    LV_AR_NETTING_RATE_SC4_1, 
    'IC Clearing AP AR-IC Clearing AP AR', 
    rc2.invoice_currency_code_AR, --GP_CURRENCY_CODE, 
    ROUND(rc2.entered_invoice_amount_AR, 30), --ROUND(GP_RUNNING_TOTAL_DR, 4),
    rc2.functional_Currency_Code_AR, --GP_CURRENCY_CODE, 
    ROUND(rc2.accounted_invoice_amount_AR,30), --ROUND(LV_AR_NETTING_RATE_SC4_1 * rc2.entered_invoice_amount_AR, 4), --ROUND(GP_RUNNING_TOTAL_DR, 4), 
    to_char(rc2.AR_ACC_DATE,'YYYY-MM-DD'), 
    '0000', 
    rc2.JOURNAL_NAME_GP,  
    rc2.intercompany_batch_number_AP , --IC_BATCH_NUMBER, 
    P_BATCH_ID, 
    substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1) , --GP_LE, 
    '4120', 
    '000000', 
    '0000', 
    '00000', 
    '0000', 
    '0000', 
    '0000', 
    '0000', 
    rc2.AR_EXCHANGE_RATE_TYPE, --GP_EXCHANGE_RATE_TYPE, 
    LV_FILE_NAME,  --LV_FILE_NAME, 
    'GL', 
    rc2.IC_TRX_NUMBER, --GP_INTERCOMPANY_TRANSACTION_NUMBER, 
    rc2.GR_BATCH_ID,
    rc2.GP_BATCH_ID,
    rc2.GR_JOURNAL_ID,
    rc2.GP_JOURNAL_ID, --GP_GL_JOURNAL_ID, 
    rc2.GR_JOURNAL_LINE_NUMBER,
    rc2.GP_JOURNAL_LINE_NUMBER,
    rc2.ACCOUNTING_PERIOD, 
    'ORACLE_LSI'
  );


  INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T (
  LSI_NETTING_ENTRY_ID, SCENARIO, EVENT_TYPE, 
  TRANSACTION, LE, LEDGER, LINE_TYPE, 
  EXCHANGE_RATE_DATE, EXCHANGE_RATE, 
  GL_NATURAL_ACC, ENTERED_CURR, ENTERED_AMT, 
  ACCOUNTED_CURR, ACCOUNTED_AMT, ACCOUNTING_DATE, 
  IC_LE, SOURCE_TRX_NUMBER, IC_BATCH_NUMBER, 
  BATCH_ID, GL_LEGAL_ENTITY, GL_OPER_GRP, 
  GL_ACCT, GL_DEPT, GL_SITE, GL_IC, 
  GL_PROJECTS, GL_FUT_1, GL_FUT_2, 
  EXCHANGE_RATE_TYPE, FILE_NAME, RECORD_TYPE, 
  IC_TRX_NUMBER, ID1,ID2,ID3,ID4,ID5,ID6, ACCOUNTING_PERIOD, 
  EVENT_CLASS
) 
VALUES 
  (
    WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 
    'Common-Step 1', 
    'LSI_LIABILITY_SWITCH', 
    'GL ENTRY FOR GL FLOW', 
    substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1) , --null, --GP_LE, 
    rc2.AR_LEDGER, --GP_LEDGER, 
    'AHCS IC AR', 
    to_char(rc2.AR_EXCHANGE_DATE,'YYYY-MM-DD'), --GP_GL_POSTED_DATE, 
    LV_AR_NETTING_RATE_SC4_1, 
    '114001-INTERCOMPANY ACCOUNTS RECEIVABLE - LEGACY', 
    rc2.invoice_currency_code_AR, --GP_CURRENCY_CODE, 
    ROUND(-1 * rc2.entered_invoice_amount_AR, 4), --ROUND(-1 * GP_RUNNING_TOTAL_DR, 4), 
    rc2.functional_Currency_Code_AR, --GP_CURRENCY_CODE, 
    ROUND(-1*rc2.accounted_invoice_amount_AR,4), ----ROUND(-1 * LV_AR_NETTING_RATE_SC4_1 * rc2.entered_invoice_amount_AR, 4), --ROUND(-1 * GP_RUNNING_TOTAL_DR, 4), 
    to_char(rc2.AR_ACC_DATE,'YYYY-MM-DD'), 
    substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1), --GR_LE, 
    rc2.JOURNAL_NAME_GP, --GP_GL_JOURNAL_ID, 
    rc2.intercompany_batch_number_AP , --IC_BATCH_NUMBER, 
    P_BATCH_ID, 
    rc2.GP_SEGMENT1, --GP_LE, 
    rc2.GP_SEGMENT2, ---'4120', 
    rc2.GP_SEGMENT3, 
    rc2.GP_SEGMENT4, 
    rc2.GP_SEGMENT5, 
    rc2.GP_SEGMENT6, ---substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1), --GR_LE, 
    rc2.GP_SEGMENT7, 
    rc2.GP_SEGMENT8, 
    rc2.GP_SEGMENT9, 
    rc2.AR_EXCHANGE_RATE_TYPE, --GP_EXCHANGE_RATE_TYPE, 
    LV_FILE_NAME,  --LV_FILE_NAME, 
    'GL', 
    rc2.IC_TRX_NUMBER, --GP_INTERCOMPANY_TRANSACTION_NUMBER, 
    rc2.GR_BATCH_ID,
    rc2.GP_BATCH_ID,
    rc2.GR_JOURNAL_ID,
    rc2.GP_JOURNAL_ID, --GP_GL_JOURNAL_ID, 
    rc2.GR_JOURNAL_LINE_NUMBER,
    rc2.GP_JOURNAL_LINE_NUMBER,
    rc2.ACCOUNTING_PERIOD, 
    'ORACLE_LSI'
  );



Begin
      select conversion_rate
      into LV_AR_NETTING_RATE_SC4_1
      from WSC_AHCS_LSI_EXCHANGE_RATE_T
      Where From_Currency = rc2.invoice_currency_code_AP
      AND To_currency= rc2.functional_Currency_Code_AP
      AND conversion_date=to_char(LV_ACC_DATE,'YYYY-MM-DD')
      AND conversion_rate_type=NVL(decode(rc2.AR_EXCHANGE_RATE_TYPE,'User','Actual Rate'),'Actual Rate');

      Exception
      WHEN OTHERS THEN
      LV_AR_NETTING_RATE_SC4_1 :=1;
End; 

INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T (
  LSI_NETTING_ENTRY_ID, SCENARIO, EVENT_TYPE, 
  TRANSACTION, LE, LEDGER, LINE_TYPE, 
  EXCHANGE_RATE_DATE, EXCHANGE_RATE, 
  GL_NATURAL_ACC, ENTERED_CURR, ENTERED_AMT, 
  ACCOUNTED_CURR, ACCOUNTED_AMT, ACCOUNTING_DATE, 
  IC_LE, SOURCE_TRX_NUMBER, IC_BATCH_NUMBER, 
  BATCH_ID, GL_LEGAL_ENTITY, GL_OPER_GRP, 
  GL_ACCT, GL_DEPT, GL_SITE, GL_IC, 
  GL_PROJECTS, GL_FUT_1, GL_FUT_2, 
  EXCHANGE_RATE_TYPE, FILE_NAME, RECORD_TYPE, 
  IC_TRX_NUMBER, ID1,ID2,ID3,ID4,ID5,ID6, ACCOUNTING_PERIOD, 
  EVENT_CLASS
) 
VALUES 
  (
    WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 
    'Common-Step 2', 
    'LSI_LIABILITY_SWITCH', 
    'GL ENTRY FOR GL FLOW', 
    substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1) , --GR_LE, 
    rc2.AP_LEDGER,--GR_LEDGER, 
    'AHCS IC AP', 
    to_char(rc2.AP_EXCHANGE_DATE,'YYYY-MM-DD') , --GR_GL_POSTED_DATE, 
    LV_AR_NETTING_RATE_SC4_1, 
    '212001-INTERCOMPANY ACCOUNTS PAYABLE - LEGACY', 
    rc2.invoice_currency_code_AP, --GR_CURRENCY_CODE, 
    ROUND(rc2.entered_invoice_amount_AP, 4), --ROUND(GR_RUNNING_TOTAL_DR, 4), 
    rc2.functional_Currency_Code_AP, --GR_CURRENCY_CODE, 
    ROUND(rc2.accounted_invoice_amount_AP,4), ----ROUND(LV_AR_NETTING_RATE_SC4_1*rc2.entered_invoice_amount_AP, 4), --ROUND(GR_RUNNING_TOTAL_DR, 4), 
    to_char(rc2.AP_ACC_DATE,'YYYY-MM-DD'), 
    '0000',--GP_LE, 
    rc2.JOURNAL_NAME_GR, --GP_GL_JOURNAL_ID, 
    rc2.intercompany_batch_number_AP , --IC_BATCH_NUMBER, 
    P_BATCH_ID, 
    rc2.GR_SEGMENT1, --GP_LE, 
    rc2.GR_SEGMENT2, ---'4120', 
    rc2.GR_SEGMENT3, 
    rc2.GR_SEGMENT4, 
    rc2.GR_SEGMENT5, 
    rc2.GR_SEGMENT6, ---substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1), --GR_LE, 
    rc2.GR_SEGMENT7, 
    rc2.GR_SEGMENT8, 
    rc2.GR_SEGMENT9, 
    rc2.AP_EXCHANGE_RATE_TYPE, --GR_EXCHANGE_RATE_TYPE, 
    LV_FILE_NAME, 
    'GL', 
    rc2.IC_TRX_NUMBER , --, --GR_INTERCOMPANY_TRANSACTION_NUMBER, 
    rc2.GR_BATCH_ID,
    rc2.GP_BATCH_ID,
    rc2.GR_JOURNAL_ID,
    rc2.GP_JOURNAL_ID, --GP_GL_JOURNAL_ID, 
    rc2.GR_JOURNAL_LINE_NUMBER,
    rc2.GP_JOURNAL_LINE_NUMBER,
    rc2.ACCOUNTING_PERIOD, 
    'ORACLE_LSI'
  );
---- step 2.2
INSERT INTO WSC_AHCS_LSI_NETTING_ENTRY_T (
  LSI_NETTING_ENTRY_ID, SCENARIO, EVENT_TYPE, 
  TRANSACTION, LE, LEDGER, LINE_TYPE, 
  EXCHANGE_RATE_DATE, EXCHANGE_RATE, 
  GL_NATURAL_ACC, ENTERED_CURR, ENTERED_AMT, 
  ACCOUNTED_CURR, ACCOUNTED_AMT, ACCOUNTING_DATE, 
  IC_LE, SOURCE_TRX_NUMBER, IC_BATCH_NUMBER, 
  BATCH_ID, GL_LEGAL_ENTITY, GL_OPER_GRP, 
  GL_ACCT, GL_DEPT, GL_SITE, GL_IC, 
  GL_PROJECTS, GL_FUT_1, GL_FUT_2, 
  EXCHANGE_RATE_TYPE, FILE_NAME, RECORD_TYPE, 
  IC_TRX_NUMBER, ID1,ID2,ID3,ID4,ID5,ID6, ACCOUNTING_PERIOD, 
  EVENT_CLASS
) 
VALUES 
  (
    WSC_LSI_NETTING_ENTRY_ID_SEQ.nextval, 
    'Common-Step 2', 
    'LSI_LIABILITY_SWITCH', 
    'GL ENTRY FOR GL FLOW', 
    substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1) , --GR_LE, 
    rc2.AP_LEDGER,--GR_LEDGER, 
    'AHCS Cash Clearing', 
    to_char(rc2.AP_EXCHANGE_DATE,'YYYY-MM-DD'), --GR_GL_POSTED_DATE, 
    LV_AR_NETTING_RATE_SC4_1, 
    'IC Clearing AP AR-IC Clearing AP AR', 
    rc2.invoice_currency_code_AP, --GR_CURRENCY_CODE, 
    ROUND(-1 * rc2.entered_invoice_amount_AP, 4), --ROUND(-1 * GR_RUNNING_TOTAL_DR, 4), 
    rc2.functional_Currency_Code_AP, --GR_CURRENCY_CODE, 
    ROUND(-1*rc2.accounted_invoice_amount_AP,4), --ROUND(-1 * LV_AR_NETTING_RATE_SC4_1 * rc2.entered_invoice_amount_AP, 4), --ROUND(-1 * GR_RUNNING_TOTAL_DR, 4), 
    to_char(rc2.AP_ACC_DATE,'YYYY-MM-DD'), 
    '0000', 
    rc2.JOURNAL_NAME_GR, --GP_GL_JOURNAL_ID, 
    rc2.intercompany_batch_number_AP , --IC_BATCH_NUMBER, 
    P_BATCH_ID, 
    substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1) , --GR_LE, 
    '4120', 
    '000000', 
    '0000', 
    '00000', 
    '0000', 
    '0000', 
    '0000', 
    '0000', 
    rc2.AP_EXCHANGE_RATE_TYPE, --GR_EXCHANGE_RATE_TYPE, 
    LV_FILE_NAME, 
    'GL', 
    rc2.IC_TRX_NUMBER , --GR_INTERCOMPANY_TRANSACTION_NUMBER, 
    rc2.GR_BATCH_ID,
    rc2.GP_BATCH_ID,
    rc2.GR_JOURNAL_ID,
    rc2.GP_JOURNAL_ID, --GP_GL_JOURNAL_ID, 
    rc2.GR_JOURNAL_LINE_NUMBER,
    rc2.GP_JOURNAL_LINE_NUMBER,
    RC2.ACCOUNTING_PERIOD, 
    'ORACLE_LSI'
  );

  SELECT
  decode(rc2.AP_EXCHANGE_RATE_TYPE,'User','Actual Rate',rc2.AP_EXCHANGE_RATE_TYPE), 
  decode(rc2.AR_EXCHANGE_RATE_TYPE,'User','Actual Rate',rc2.AR_EXCHANGE_RATE_TYPE)
  into LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE
  FROM DUAL;

 logging_insert('Oracle LSI',p_batch_id , 1, 'Common step for all scenarios - end','',sysdate );
              ----------------------------------------------------------------------------------
              /*********************************Scenario 1************************************/
              ----------------------------------------------------------------------------------
              IF (LV_AP_NETTING_LE=LV_AR_NETTING_LE AND rc2.AP_Final_Netting_LE='Yes' AND rc2.AR_Final_Netting_LE='Yes' AND  LV_AP_IS_PRIORITY_BU<=0 and LV_AR_IS_PRIORITY_BU<=0) THEN
          logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC1',rc2.intercompany_batch_number_ap,sysdate );

            LSI_SC1(P_BATCH_ID                       ,
                    rc2.AR_CCID                          ,
                    rc2.AR_LEDGER                        ,
                    rc2.functional_Currency_Code_AR      ,
                    rc2.accounted_invoice_amount_AR      ,
                    rc2.GP_SEGMENT1     ,
                    rc2.intercompany_transaction_type_AR ,
                    rc2.JOURNAL_NAME_GP                ,
                    rc2.AP_CCID                          ,
                    rc2.AP_LEDGER                        ,
                    rc2.functional_Currency_Code_AP      ,
                    rc2.accounted_invoice_amount_AP      ,
                    rc2.intercompany_transaction_type_AP ,
                    rc2.JOURNAL_NAME_GR                ,
                    rc2.NETTING_AR_LE                    ,
                    LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER                ,
                    NULL         ,
                    LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR              ,
                    null         ,
                    LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR              ,
                    rc2.GR_SEGMENT1     ,
                    rc2.NETTING_AP_LE                    ,
                    LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER                ,
                    LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                    RECORD_TYPE             ,
                    rc2.IC_TRX_NUMBER           ,
                    rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                    rc2.GR_JOURNAL_ID             ,
                    rc2.GP_JOURNAL_ID            ,
                    rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                    rc2.ACCOUNTING_PERIOD,
                    rc2.intercompany_batch_number_ap);  

          COUNTER := COUNTER +1;     




  ----------------------------------------------------------------------------------
  /*********************Scenario 2 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF ((LV_AP_NETTING_LE<>LV_AR_NETTING_LE AND rc2.AP_Final_Netting_LE='Yes' AND rc2.AR_Final_Netting_LE='Yes' AND  rc2.AP_Final_BU='No' and rc2.AR_Final_BU='No'and rc2.FINAL_BU_CON='No')) THEN
      logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC2',rc2.intercompany_batch_number_ap,sysdate );

        LSI_SC2(rc2.AR_CCID                          ,                
                            P_BATCH_ID                       ,
                            rc2.AR_LEDGER                        ,
                            rc2.FUNCTIONAL_CURRENCY_CODE_AR      ,
                            rc2.ACCOUNTED_INVOICE_AMOUNT_AR      ,
                            rc2.GP_SEGMENT1     ,
                            rc2.INTERCOMPANY_TRANSACTION_TYPE_AR ,
                            rc2.JOURNAL_NAME_GR                                                ,
                            rc2.AP_CCID                          ,
                            rc2.AP_LEDGER                        ,
                            rc2.FUNCTIONAL_CURRENCY_CODE_AP      ,
                            rc2.ACCOUNTED_INVOICE_AMOUNT_AP      ,
                            rc2.INTERCOMPANY_TRANSACTION_TYPE_AP ,
                            rc2.GR_SEGMENT1     ,
                            rc2.NETTING_AR_LE                    ,
                            LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER                ,
                            NULL         ,
                            LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR              ,
                            rc2.NETTING_AP_LE                    ,
                            LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER                ,
                            NULL         ,
                            LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR              ,
                            LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                            RECORD_TYPE                                                             ,
                            rc2.IC_TRX_NUMBER                                                                 ,
                            rc2.GR_BATCH_ID,
                            rc2.GP_BATCH_ID,
                            rc2.GR_JOURNAL_ID                    ,
                            rc2.GP_JOURNAL_ID                    ,
                            rc2.GR_JOURNAL_LINE_NUMBER,
                            rc2.GP_JOURNAL_LINE_NUMBER,
                            rc2.ACCOUNTING_PERIOD,
                            rc2.intercompany_batch_number_ap);          
             COUNTER := COUNTER +1;




  ----------------------------------------------------------------------------------
  /*********************Scenario 3 ******************************************/
  ----------------------------------------------------------------------------------  
      ---Manish
              ELSIF (rc2.AP_Final_BU='Yes' AND rc2.AR_Final_BU='Yes') OR (rc2.FINAL_BU_CON='Yes')THEN
         logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC3',rc2.intercompany_batch_number_ap,sysdate );


     LSI_SC3(rc2.AR_CCID                         ,                    
                    P_BATCH_ID                      ,
                    rc2.AR_LEDGER                       ,
                    rc2.FUNCTIONAL_CURRENCY_CODE_AR     ,
                    rc2.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                    rc2.GP_SEGMENT1    ,
                    rc2.INTERCOMPANY_TRANSACTION_TYPE_AR,
                    rc2.JOURNAL_NAME_GR                                        ,
                    rc2.AP_CCID                         ,
                    rc2.AP_LEDGER                       ,
                    rc2.FUNCTIONAL_CURRENCY_CODE_AP     ,
                    rc2.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                    rc2.INTERCOMPANY_TRANSACTION_TYPE_AP,
                    rc2.GR_SEGMENT1    ,
                    rc2.NETTING_AR_LE                   ,
                    LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                    NULL       ,
                    LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                    rc2.NETTING_AP_LE                   ,
                    LV_NET_AP_LEDGER_NAME ,--rc2.NETTING_AP_LEDGER               ,
                    NULL        ,
                    LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                    LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                    RECORD_TYPE                                                                     ,
                    rc2.IC_TRX_NUMBER                                                                        ,
                    rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                    rc2.GR_JOURNAL_ID                   ,
                    rc2.GP_JOURNAL_ID                   ,
                    rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                    rc2.ACCOUNTING_PERIOD,
                    rc2.intercompany_batch_number_ap);                                
          COUNTER := COUNTER +1;



  ----------------------------------------------------------------------------------
  /*********************Scenario 4.1 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF (LV_AR_IS_PRIORITY_BU!=0 AND LV_AP_NETTING_LE=substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1)) THEN
     logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC4.1',rc2.intercompany_batch_number_ap,sysdate );

     LSI_SC4_1(rc2.AR_CCID                         ,               
                P_BATCH_ID                      ,
                rc2.AR_LEDGER                       ,
                rc2.FUNCTIONAL_CURRENCY_CODE_AR     ,
                rc2.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                rc2.GP_SEGMENT1    ,
                rc2.INTERCOMPANY_TRANSACTION_TYPE_AR,
                rc2.JOURNAL_NAME_GR                                            ,
                rc2.AP_CCID                         ,
                rc2.AP_LEDGER                       ,
                rc2.FUNCTIONAL_CURRENCY_CODE_AP     ,
                rc2.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                rc2.INTERCOMPANY_TRANSACTION_TYPE_AP,
                rc2.GR_SEGMENT1    ,
                rc2.NETTING_AR_LE                   ,
                LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                NULL        ,
                LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                rc2.NETTING_AP_LE                   ,
                LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                NULL        ,
                LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                rc2.ENTERED_INVOICE_AMOUNT_AP       ,
                LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
               RECORD_TYPE                                                            ,
                rc2.IC_TRX_NUMBER                                                              ,
                rc2.GR_BATCH_ID,
                rc2.GP_BATCH_ID,
                rc2.GR_JOURNAL_ID                   ,
                rc2.GP_JOURNAL_ID                   ,
                rc2.GR_JOURNAL_LINE_NUMBER,
                rc2.GP_JOURNAL_LINE_NUMBER,
                rc2.ACCOUNTING_PERIOD,
                rc2.intercompany_batch_number_ap);                         
    COUNTER := COUNTER +1;


              ---Scenario 4.1 - END ---
  ----------------------------------------------------------------------------------
  /*********************Scenario 4.2 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF (LV_AP_IS_PRIORITY_BU!=0 AND LV_AR_NETTING_LE=substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1)) THEN
              logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC4.2',rc2.intercompany_batch_number_ap,sysdate );

     LSI_SC4_2(rc2.AR_CCID                         ,   
                P_BATCH_ID                                                              ,
                rc2.AR_LEDGER                       ,
                rc2.FUNCTIONAL_CURRENCY_CODE_AR     ,
                rc2.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                rc2.GP_SEGMENT1    ,
                rc2.INTERCOMPANY_TRANSACTION_TYPE_AR,
                rc2.JOURNAL_NAME_GR                                            ,
                rc2.AP_CCID                         ,
                rc2.AP_LEDGER                       ,
                rc2.FUNCTIONAL_CURRENCY_CODE_AP     ,
                rc2.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                rc2.INTERCOMPANY_TRANSACTION_TYPE_AP,
                rc2.GR_SEGMENT1    ,
                rc2.NETTING_AR_LE                   ,
                LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                NULL        ,
                LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                rc2.NETTING_AP_LE                   ,
                LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                NULL        ,
                LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                RECORD_TYPE                                                                         ,
                rc2.IC_TRX_NUMBER                                                             ,
                rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                rc2.GR_JOURNAL_ID                   ,
                rc2.GP_JOURNAL_ID                   ,
                    rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                rc2.ACCOUNTING_PERIOD,
                rc2.intercompany_batch_number_ap);                        

       COUNTER := COUNTER +1;


----------------------------------------------------------------------------------
  /*********************Scenario 5.1 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF ((LV_AR_IS_PRIORITY_BU>0 AND LV_AP_NETTING_LE!=substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1) AND LV_AP_IS_PRIORITY_BU=0 AND rc2.AP_Final_Netting_LE='Yes' AND (GetEMEA(rc2.AP_LEDGER)='Yes' OR GetEMEA(rc2.AR_LEDGER)='Yes')) OR 
    ( LV_AR_IS_PRIORITY_BU <> 0 AND LV_AP_NETTING_LE!=substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1) AND LV_AP_IS_PRIORITY_BU=0 AND GetEMEA(rc2.AP_LEDGER)='No' AND GetEMEA(rc2.AR_LEDGER)='No')) THEN

   logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC5.1',rc2.intercompany_batch_number_ap,sysdate );
   LSI_SC5_1(P_BATCH_ID                ,
            rc2.AR_CCID                         ,   
            rc2.AR_LEDGER                       ,
            rc2.FUNCTIONAL_CURRENCY_CODE_AR     ,
            rc2.ACCOUNTED_INVOICE_AMOUNT_AR     ,
            rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
            rc2.GP_SEGMENT1    ,
            rc2.INTERCOMPANY_TRANSACTION_TYPE_AR,
            rc2.JOURNAL_NAME_GR                                  ,
            rc2.JOURNAL_NAME_GP               ,
            rc2.AP_CCID                         ,
            rc2.AP_LEDGER                       ,
            rc2.FUNCTIONAL_CURRENCY_CODE_AP     ,
            rc2.ACCOUNTED_INVOICE_AMOUNT_AP     ,
            rc2.INTERCOMPANY_TRANSACTION_TYPE_AP,
            rc2.GR_SEGMENT1    ,
            rc2.NETTING_AR_LE                   ,
            LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
            NULL        ,
            LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
            rc2.NETTING_AP_LE                   ,
            LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
            NULL       ,
            LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
            LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
            RECORD_TYPE                                                                             ,
            rc2.IC_TRX_NUMBER                                                                 ,
            rc2.GR_BATCH_ID,
            rc2.GP_BATCH_ID,
            rc2.GR_JOURNAL_ID                   ,
            rc2.GP_JOURNAL_ID                   ,
                    rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
            rc2.ACCOUNTING_PERIOD);                   

     COUNTER := COUNTER +1;


    ----------------------------------------------------------------------------------
  /*********************Scenario 5.2 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF ((LV_AP_IS_PRIORITY_BU>0 AND LV_AR_NETTING_LE!=substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1) AND LV_AR_IS_PRIORITY_BU=0 AND  rc2.AR_Final_Netting_LE='Yes' AND (GetEMEA(rc2.AP_LEDGER)='Yes' OR GetEMEA(rc2.AR_LEDGER)='Yes')) OR 
    ( LV_AP_IS_PRIORITY_BU <> 0 AND LV_AR_NETTING_LE!=substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1) AND LV_AR_IS_PRIORITY_BU=0 AND GetEMEA(rc2.AP_LEDGER)='No' AND GetEMEA(rc2.AR_LEDGER)='No')) THEN  
    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC5.2',rc2.intercompany_batch_number_ap,sysdate );   

                  LSI_SC5_2(P_BATCH_ID                                                       ,
                        rc2.AR_CCID                         ,  
                        rc2.AR_LEDGER                       ,
                        rc2.FUNCTIONAL_CURRENCY_CODE_AR     ,
                        rc2.ACCOUNTED_INVOICE_AMOUNT_AR     ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc2.GP_SEGMENT1    ,
                        rc2.INTERCOMPANY_TRANSACTION_TYPE_AR,
                       rc2.JOURNAL_NAME_GR                                    ,
                        rc2.JOURNAL_NAME_GP               ,
                        rc2.AP_CCID                         ,
                        rc2.AP_LEDGER                       ,
                        rc2.FUNCTIONAL_CURRENCY_CODE_AP     ,
                        rc2.ACCOUNTED_INVOICE_AMOUNT_AP     ,
                        rc2.INTERCOMPANY_TRANSACTION_TYPE_AP,
                        rc2.GR_SEGMENT1    ,
                        rc2.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                        NULL        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                        rc2.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                        NULL        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                                                                 ,
                        rc2.IC_TRX_NUMBER                                                                    ,
                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                   ,
                        rc2.GP_JOURNAL_ID                   ,
                      rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD);                   
 COUNTER := COUNTER +1;


----------------------------------------------------------------------------------
  /*********************Scenario 6A-1 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF (LV_AR_NETTING_IS_PRIORITY_BU<>0 AND  rc2.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AP_LE)!=GetNettingNettingLE(rc2.NETTING_AR_LE) AND substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1)!=rc2.NETTING_AR_LE  AND rc2.AP_Final_Netting_LE='No' AND (rc2.AR_Final_BU!='Yes' OR rc2.AP_Final_BU!='Yes' AND rc2.FINAL_BU_CON='No')) THEN 

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6A1',rc2.intercompany_batch_number_ap,sysdate ); 

                         LSI_SC6A1(P_BATCH_ID            ,
                                        rc2.AR_CCID                         ,
                                        rc2.AR_LEDGER                       ,
                                        rc2.functional_Currency_Code_AR     ,
                                        rc2.accounted_invoice_amount_AR     ,
                                        rc2.GP_SEGMENT1    ,
                                        rc2.intercompany_transaction_type_AR,
                                        rc2.JOURNAL_NAME_GP               ,
                                        rc2.AP_CCID                         ,
                                        rc2.AP_LEDGER                       ,
                                        rc2.functional_Currency_Code_AP     ,
                                        rc2.accounted_invoice_amount_AP     ,
                                        rc2.intercompany_transaction_type_AP,
                                        rc2.JOURNAL_NAME_GR               ,
                                        rc2.NETTING_AR_LE                   ,
                                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                                        NULL       ,
                                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                                        NULL        ,
                                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                                        rc2.GR_SEGMENT1    ,
                                        rc2.NETTING_AP_LE                   ,
                                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                                        RECORD_TYPE                    ,
                                        rc2.IC_TRX_NUMBER                   ,
                                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                                        rc2.GR_JOURNAL_ID                   ,
                                        rc2.GP_JOURNAL_ID                   ,
                                        rc2.GR_JOURNAL_LINE_NUMBER,
                                        rc2.GP_JOURNAL_LINE_NUMBER,
                                        rc2.ACCOUNTING_PERIOD               ,
                                        rc2.INTERCOMPANY_BATCH_NUMBER_AP);
   COUNTER := COUNTER +1;



----------------------------------------------------------------------------------
  /*********************Scenario 6A-2 ******************************************/
  ----------------------------------------------------------------------------------  
              ELSIF (LV_AP_NETTING_IS_PRIORITY_BU<>0 AND   rc2.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AP_LE)!=GetNettingNettingLE(rc2.NETTING_AR_LE) AND substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1)!=rc2.NETTING_AP_LE  AND  rc2.AR_Final_Netting_LE='No' AND (rc2.AR_Final_BU!='Yes' OR rc2.AP_Final_BU!='Yes') AND rc2.FINAL_BU_CON='No') THEN    

              logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6A2',rc2.intercompany_batch_number_ap,sysdate );

                                 LSI_SC6A2(P_BATCH_ID                  ,
                                            rc2.AR_CCID                         ,
                                            rc2.AR_LEDGER                       ,
                                            rc2.functional_Currency_Code_AR     ,
                                            rc2.accounted_invoice_amount_AR     ,
                                            rc2.GP_SEGMENT1    ,
                                            rc2.intercompany_transaction_type_AR,
                                            rc2.JOURNAL_NAME_GP               ,
                                            rc2.AP_CCID                         ,
                                            rc2.AP_LEDGER                       ,
                                            rc2.functional_Currency_Code_AP     ,
                                            rc2.accounted_invoice_amount_AP     ,
                                            rc2.intercompany_transaction_type_AP,
                                            rc2.JOURNAL_NAME_GR               ,
                                            rc2.NETTING_AR_LE                   ,
                                            LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                                            NULL       ,
                                            LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                                            NULL        ,
                                            LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                                            rc2.GR_SEGMENT1    ,
                                            rc2.NETTING_AP_LE                   ,
                                            LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                                            LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                                            RECORD_TYPE                           ,
                                            rc2.IC_TRX_NUMBER                   ,
                                            rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                                            rc2.GR_JOURNAL_ID                   ,
                                            rc2.GP_JOURNAL_ID                   ,
                                            rc2.GR_JOURNAL_LINE_NUMBER,
                                            rc2.GP_JOURNAL_LINE_NUMBER,
                                            rc2.ACCOUNTING_PERIOD,
                                            rc2.INTERCOMPANY_BATCH_NUMBER_AP);
   COUNTER := COUNTER +1;


  ----------------------------------------------------------------------------------
  /*********************Scenario 6B1 ******************************************/
  ----------------------------------------------------------------------------------  

  ELSIF (LV_AR_NETTING_IS_PRIORITY_BU<>0 AND rc2.AR_Final_Netting_LE='Yes' AND GetNettingNettingLE(rc2.NETTING_AP_LE)=GetNettingNettingLE(rc2.NETTING_AR_LE) AND substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1)!=rc2.NETTING_AR_LE  AND rc2.AP_Final_Netting_LE='No' AND (rc2.AR_Final_BU!='Yes' OR rc2.AP_Final_BU!='Yes')  AND rc2.FINAL_BU_CON='No') THEN

  logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6B1',rc2.intercompany_batch_number_ap,sysdate );

                   LSI_SC6B1(P_BATCH_ID                ,
                            rc2.AR_CCID                         ,
                            rc2.AR_LEDGER                       ,
                            rc2.functional_Currency_Code_AR     ,
                            rc2.accounted_invoice_amount_AR     ,
                            rc2.GP_SEGMENT1    ,
                            rc2.intercompany_transaction_type_AR,
                            rc2.JOURNAL_NAME_GP               ,
                            rc2.AP_CCID                         ,
                            rc2.AP_LEDGER                       ,
                            rc2.functional_Currency_Code_AP     ,
                            rc2.accounted_invoice_amount_AP     ,
                            rc2.intercompany_transaction_type_AP,
                            rc2.JOURNAL_NAME_GR               ,
                            rc2.NETTING_AR_LE                   ,
                            LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                            NULL       ,
                            LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                            null        ,
                            LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                            rc2.GR_SEGMENT1    ,
                            rc2.NETTING_AP_LE                   ,
                            LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                            LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                            RECORD_TYPE                         ,
                            rc2.IC_TRX_NUMBER                   ,
                           rc2.GR_BATCH_ID,
                            rc2.GP_BATCH_ID,
                            rc2.GR_JOURNAL_ID                   ,
                            rc2.GP_JOURNAL_ID                   ,
                            rc2.GR_JOURNAL_LINE_NUMBER,
                            rc2.GP_JOURNAL_LINE_NUMBER,
                            rc2.ACCOUNTING_PERIOD               ,
                            rc2.INTERCOMPANY_BATCH_NUMBER_AP);                                            
            COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 6B2 ******************************************/
  ----------------------------------------------------------------------------------                                              

  ELSIF (LV_AP_NETTING_IS_PRIORITY_BU<>0 AND rc2.AP_Final_Netting_LE='Yes' AND GetNettingNettingLE(rc2.NETTING_AP_LE)=GetNettingNettingLE(rc2.NETTING_AR_LE) AND substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1)!=rc2.NETTING_AP_LE  AND rc2.AR_Final_Netting_LE='No' AND (rc2.AR_Final_BU!='Yes' OR rc2.AP_Final_BU!='Yes') AND rc2.FINAL_BU_CON='No') THEN

    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC6B2',rc2.intercompany_batch_number_ap,sysdate );

             LSI_SC6B2(P_BATCH_ID                ,
                        rc2.AR_CCID                         ,
                        rc2.AR_LEDGER                       ,
                        rc2.functional_Currency_Code_AR     ,
                        rc2.accounted_invoice_amount_AR     ,
                        rc2.GP_SEGMENT1    ,
                        rc2.intercompany_transaction_type_AR,
                        rc2.JOURNAL_NAME_GP               ,
                        rc2.AP_CCID                         ,
                        rc2.AP_LEDGER                       ,
                        rc2.functional_Currency_Code_AP     ,
                        rc2.accounted_invoice_amount_AP     ,
                        rc2.intercompany_transaction_type_AP,
                        rc2.JOURNAL_NAME_GR               ,
                        rc2.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                        NULL        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                        NULL        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                        rc2.GR_SEGMENT1    ,
                        rc2.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                                          ,
                        rc2.IC_TRX_NUMBER                   ,
                        rc2.GR_BATCH_ID,
                         rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                   ,
                        rc2.GP_JOURNAL_ID                   ,
                        rc2.GR_JOURNAL_LINE_NUMBER,
                        rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD               ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP);                                         

            COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 7A1 ******************************************/
  ----------------------------------------------------------------------------------  
   ELSIF (LV_AR_IS_PRIORITY_BU>0 AND rc2.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AP_LE)=substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1)) THEN

    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7A1',rc2.intercompany_batch_number_ap,sysdate );

    LSI_SC7A1(P_BATCH_ID                             ,
                        rc2.AR_CCID                         ,
                        rc2.AR_LEDGER                       ,
                        rc2.functional_Currency_Code_AR     ,
                        rc2.accounted_invoice_amount_AR     ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc2.GP_SEGMENT1    ,
                        rc2.intercompany_transaction_type_AR,
                        rc2.JOURNAL_NAME_GP               ,
                        rc2.AP_CCID                         ,
                        rc2.AP_LEDGER                       ,
                        rc2.functional_Currency_Code_AP     ,
                        rc2.accounted_invoice_amount_AP     ,
                        rc2.intercompany_transaction_type_AP,
                        rc2.JOURNAL_NAME_GR               ,
                        rc2.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                        NULL       ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                        NULL       ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                        rc2.GR_SEGMENT1    ,
                        rc2.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                     ,
                        rc2.IC_TRX_NUMBER                   ,
                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                   ,
                        rc2.GP_JOURNAL_ID                   ,
                        rc2.GR_JOURNAL_LINE_NUMBER,
                        rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD );                                           


            COUNTER := COUNTER +1;
  ----------------------------------------------------------------------------------
  /*********************Scenario 7A2 ******************************************/
  ----------------------------------------------------------------------------------  
   ELSIF (LV_AP_IS_PRIORITY_BU>0 AND rc2.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AR_LE)=substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1)) THEN 

    logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7A2',rc2.intercompany_batch_number_ap,sysdate );

    LSI_SC7A2( P_BATCH_ID                             ,
                        rc2.AR_CCID                         ,
                        rc2.AR_LEDGER                       ,
                        rc2.functional_Currency_Code_AR     ,
                        rc2.accounted_invoice_amount_AR     ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc2.GP_SEGMENT1    ,
                        rc2.intercompany_transaction_type_AR,
                        rc2.JOURNAL_NAME_GP               ,
                        rc2.AP_CCID                         ,
                        rc2.AP_LEDGER                       ,
                        rc2.functional_Currency_Code_AP     ,
                        rc2.accounted_invoice_amount_AP     ,
                        rc2.intercompany_transaction_type_AP,
                        rc2.JOURNAL_NAME_GR               ,
                        rc2.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                        NULL        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                        NULL       ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                        rc2.GR_SEGMENT1    ,
                        rc2.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                     ,
                        rc2.IC_TRX_NUMBER                   ,
                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                   ,
                        rc2.GP_JOURNAL_ID                   ,
                        rc2.GR_JOURNAL_LINE_NUMBER,
                        rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD );                                           

                COUNTER := COUNTER +1;

  ----------------------------------------------------------------------------------
  /*********************Scenario 7B1 ******************************************/
  ----------------------------------------------------------------------------------  
    ELSIF (LV_AR_IS_PRIORITY_BU>0 AND rc2.AP_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AP_LE)!=substr(rc2.AR_CCID,1,instr(rc2.AR_CCID,'.',1)-1)) THEN 

              logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7B1',rc2.intercompany_batch_number_ap,sysdate );
      LSI_SC7B1(P_BATCH_ID               ,
                        rc2.AR_CCID                          ,
                        rc2.AR_LEDGER                        ,
                        rc2.functional_Currency_Code_AR      ,
                        rc2.accounted_invoice_amount_AR      ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP     ,
                        rc2.GP_SEGMENT1     ,
                        rc2.intercompany_transaction_type_AR ,
                        rc2.JOURNAL_NAME_GP                ,
                        rc2.AP_CCID                          ,
                        rc2.AP_LEDGER                        ,
                        rc2.functional_Currency_Code_AP      ,
                        rc2.accounted_invoice_amount_AP      ,
                        rc2.intercompany_transaction_type_AP ,
                        rc2.JOURNAL_NAME_GR                ,
                        rc2.NETTING_AR_LE                    ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER                ,
                        NULL         ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR              ,
                        NULL         ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR              ,
                        rc2.GR_SEGMENT1     ,
                        rc2.NETTING_AP_LE                    ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER                ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                      ,
                        rc2.IC_TRX_NUMBER                    ,
                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                    ,
                        rc2.GP_JOURNAL_ID                    ,
                        rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD);


                COUNTER := COUNTER +1;

----------------------------------------------------------------------------------
  /*********************Scenario 7B2 ******************************************/
  ----------------------------------------------------------------------------------                                            

    ELSIF (LV_AP_IS_PRIORITY_BU>0 AND rc2.AR_Final_Netting_LE='No' AND GetNettingNettingLE(rc2.NETTING_AR_LE)!=substr(rc2.AP_CCID,1,instr(rc2.AP_CCID,'.',1)-1)) THEN   

logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC7B2',rc2.intercompany_batch_number_ap,sysdate ); 
 logging_insert('Oracle LSI',P_BATCH_ID ,1, RECORD_TYPE,rc2.intercompany_batch_number_ap,sysdate );

            LSI_SC7B2( P_BATCH_ID                             ,
                        rc2.AR_CCID                         ,
                        rc2.AR_LEDGER                       ,
                        rc2.functional_Currency_Code_AR     ,
                        rc2.accounted_invoice_amount_AR     ,
                        rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
                        rc2.GP_SEGMENT1    ,
                        rc2.intercompany_transaction_type_AR,
                        rc2.JOURNAL_NAME_GP               ,
                        rc2.AP_CCID                         ,
                        rc2.AP_LEDGER                       ,
                        rc2.functional_Currency_Code_AP     ,
                        rc2.accounted_invoice_amount_AP     ,
                        rc2.intercompany_transaction_type_AP,
                        rc2.JOURNAL_NAME_GR               ,
                        rc2.NETTING_AR_LE                   ,
                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                        NULL        ,
                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                        NULL        ,
                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                        rc2.GR_SEGMENT1    ,
                        rc2.NETTING_AP_LE                   ,
                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                        RECORD_TYPE                     ,
                        rc2.IC_TRX_NUMBER                   ,
                        rc2.GR_BATCH_ID,
                    rc2.GP_BATCH_ID,
                        rc2.GR_JOURNAL_ID                   ,
                        rc2.GP_JOURNAL_ID                   ,
                      rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                        rc2.ACCOUNTING_PERIOD );

                COUNTER := COUNTER +1;

----------------------------------------------------------------------------------
  /*********************Scenario 8 ******************************************/
  ----------------------------------------------------------------------------------  

              ELSIF (rc2.AR_Final_Netting_LE='No' AND rc2.AP_Final_Netting_LE='No' AND (GetEMEA(rc2.AR_LEDGER)='Yes' OR GetEMEA(rc2.AP_LEDGER)='Yes')) THEN   
              logging_insert('Oracle LSI',P_BATCH_ID ,1, 'SC8',rc2.intercompany_batch_number_ap,sysdate );

                                  LSI_SC8(P_BATCH_ID                  ,
                                        rc2.AR_CCID                         ,
                                        rc2.AR_LEDGER                       ,
                                        rc2.functional_Currency_Code_AR     ,
                                        rc2.accounted_invoice_amount_AR     ,
                                        rc2.INTERCOMPANY_BATCH_NUMBER_AP    ,
                                        rc2.GP_SEGMENT1    ,
                                        rc2.intercompany_transaction_type_AR,
                                        rc2.JOURNAL_NAME_GP               ,
                                        rc2.AP_CCID                         ,
                                        rc2.AP_LEDGER                       ,
                                        rc2.functional_Currency_Code_AP     ,
                                        rc2.accounted_invoice_amount_AP     ,
                                        rc2.intercompany_transaction_type_AP,
                                        rc2.JOURNAL_NAME_GR               ,
                                        rc2.NETTING_AR_LE                   ,
                                        LV_NET_AR_LEDGER_NAME, --rc2.NETTING_AR_LEDGER               ,
                                        NULL        ,
                                        LV_NET_AR_FUN_CURRENCY_CODE, --rc2.NETTING_AR_FUN_CURR             ,
                                        NULL        ,
                                        LV_NET_AP_FUN_CURRENCY_CODE, --rc2.NETTING_AP_FUN_CURR             ,
                                        rc2.GR_SEGMENT1    ,
                                        rc2.NETTING_AP_LE                   ,
                                        LV_NET_AP_LEDGER_NAME, --rc2.NETTING_AP_LEDGER               ,
                                        LV_AP_EXCHANGE_RATE_TYPE,LV_AR_EXCHANGE_RATE_TYPE,
                                        RECORD_TYPE                    ,
                                        rc2.IC_TRX_NUMBER                   ,
                                        rc2.GR_BATCH_ID,
                                         rc2.GP_BATCH_ID,
                                        rc2.GR_JOURNAL_ID                   ,
                                        rc2.GP_JOURNAL_ID                   ,
                     rc2.GR_JOURNAL_LINE_NUMBER,
                    rc2.GP_JOURNAL_LINE_NUMBER,
                                        rc2.ACCOUNTING_PERIOD);

                    COUNTER := COUNTER +1;


      END IF;


       IF COUNTER = 0 or COUNTER >1 THEN
         insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERR_MULTI_OR_NO_SCN' ,
                    'Multiple or NO Scenario Applied for IC :'||rc2.INTERCOMPANY_BATCH_NUMBER_AP ,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit;   
        END IF; 

     END; 
      Commit;


    END LOOP;  

   Begin
     DELETE FROM WSC_AHCS_LSI_JOURNAL_MATCH_T where batch_id=P_BATCH_ID;
     commit;
 Exception
      WHEN OTHERS THEN
        NULL;
      END;

BEGIN 
  SELECT count(distinct INTERCOMPANY_BATCH_NUMBER||'-'||INTERCOMPANY_TRANSACTION_NUMBER)
  INTO LV_COUNTER
  FROM WSC_AHCS_LSI_JOURNAL_T
  WHERE STATUS='MATCHED'
  AND BATCH_ID=P_BATCH_ID;
  Exception 
    WHEN OTHERS THEN
      LV_COUNTER := 0;
  END;    


BEGIN 
  SELECT count(distinct IC_BATCH_NUMBER||'-'||IC_TRX_NUMBER)
  INTO LV_FINAL_COUNTER
  FROM WSC_AHCS_LSI_NETTING_ENTRY_T
  WHERE  BATCH_ID=P_BATCH_ID;
  Exception 
    WHEN OTHERS THEN
      LV_FINAL_COUNTER := 0;
  END;          

 IF LV_COUNTER > 0 THEN 
  update WSC_AHCS_LSI_CONTROL_T
   set NETTING_STATUS=CASE WHEN LV_COUNTER=LV_FINAL_COUNTER THEN 'SUCCESS' 
                           WHEN LV_FINAL_COUNTER=0 THEN 'NOT SUCCESS' ELSE 'PARTIAL SUCCESS' END,
   LAST_UPDATED_DATE=SYSDATE,
   AHCS_ELIGIBLE_LINES =  LV_COUNTER,
   AHCS_FINAL_COUNT=LV_FINAL_COUNTER
   Where BATCH_ID=P_BATCH_ID;
    commit;

    update wsc_ahcs_int_control_t
    set GROUP_ID = null,
        STATUS = 'TRANSFORM_SUCCESS'
    where batch_id = p_batch_id;
    commit;
 ELSE   

   update WSC_AHCS_LSI_CONTROL_T
   set NETTING_STATUS='NOT SUCCESS',
   LAST_UPDATED_DATE=SYSDATE
   Where BATCH_ID=P_BATCH_ID;
    commit;
 END IF;  

  END IF; 

  update wsc_ahcs_lsi_netting_entry_t 
  set to_be_processed='Y'
  Where batch_id=P_BATCH_ID
  AND to_be_processed IS NULL;

  commit;

 update wsc_ahcs_lsi_netting_entry_headers_t 
  set to_be_processed='Y'
  Where batch_id=P_BATCH_ID
  AND to_be_processed IS NULL;

  commit;


begin
  select count(1) 
  INTO LV_AP_UNMATCHED
  from wsc_ahcs_lsi_journal_t 
  where  status is null;
 END; 




 update wsc_ahcs_lsi_control_t 
 set AP_UNMATCH_COUNT=LV_AP_UNMATCHED
 where batch_id=P_BATCH_ID;
 commit;


  WSC_LSI_DB_TO_UCM_PROCESS_P(P_BATCH_ID);

 EXCEPTION
    WHEN OTHERS THEN

       LV_ERROR := substr(dbms_utility.format_error_backtrace,1,200);

                  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Netting Process-'||sqlerrm);

             insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME,
                    'DB_ERR_IN_NETTING' ,
                    LV_ERROR,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit;   



   END WSC_LSI_NETTING_P;

   PROCEDURE WSC_LSI_DB_TO_UCM_PROCESS_P(P_BATCH_ID NUMBER)
   IS

    LV_ERROR  VARCHAR2(200);
    LV_FILE_NAME VARCHAR2(100);

    TYPE netting_entry_type is table of wsc_ahcs_lsi_netting_entry_t%ROWTYPE;
    LV_NETTING_ENTRY_T_TYPE netting_entry_type;

    --TRANSACTION_NUMBER,HEADER_ID,LEDGER,LE,ACCOUNTING_PERIOD,ACCOUNTING_DATE,EVENT_TYPE,Event_Class,Batch_ID,file_name,record_type
    Cursor C1(P_BATCH_ID number) IS
    Select * 
    FROM wsc_ahcs_lsi_netting_entry_t 
    where BATCH_ID=P_BATCH_ID and to_be_processed = 'Y' FOR UPDATE;

   BEGIN

   SELECT FILE_NAME INTO LV_FILE_NAME FROM WSC_AHCS_LSI_CONTROL_T
   WHERE BATCH_ID=P_BATCH_ID;

	insert into wsc_ahcs_lsi_netting_entry_headers_t
		(TRANSACTION_TYPE,LEDGER_NAME,TRANSACTION_DATE,TRANSACTION_NUMBER,SOURCE_SYSTEM,FILE_NAME,
		HEADER_ID,BATCH_ID,EVENT_TYPE,ACCOUNTING_DATE,ACCOUNTING_PERIOD,EVENT_CLASS,LE,to_be_processed,record_type)
	select 
		decode(record_type,'AP-AR','INVOICE','GL'),LEDGER,ACCOUNTING_DATE,'ORACLE_LSI'||WSC_AHCS_LSI_HEADER_T_S1.nextval,'ORACLE_LSI',FILE_NAME,
		WSC_AHCS_LSI_HEADER_T_S1.CURRVAL,batch_id,EVENT_TYPE,ACCOUNTING_DATE,ACCOUNTING_PERIOD, Event_Class,LE,'Y',record_type 
	FROM (
		select Ledger, LE, ACCOUNTING_PERIOD, ACCOUNTING_DATE,EVENT_TYPE, Event_Class, Batch_ID,file_name,record_type from wsc_ahcs_lsi_netting_entry_t a
        WHERE to_be_processed='Y'
        AND BATCH_ID=P_BATCH_ID
        /*** bug fix INC2679428 start***/
        AND NOT EXISTS (SELECT 1 FROM WSC_AHCS_LSI_NETTING_ENTRY_headers_T 
            where 
                LEDGER_NAME = a.LEDGER and
                LE = a.LE and
                ACCOUNTING_PERIOD = a.ACCOUNTING_PERIOD and
                EVENT_TYPE = a.EVENT_TYPE and
                Event_Class = a.Event_Class and
                Batch_ID = a.Batch_ID and
                file_name = a.file_name and
                record_type = a.record_type
                and to_be_processed='Y')
                /*** bug fix INC2679428 end***/
		group by Ledger, LE, ACCOUNTING_PERIOD, ACCOUNTING_DATE,EVENT_TYPE, Event_Class, Batch_ID,file_name,record_type
		);
       commit; 


    open C1(p_batch_id);
            loop 
            fetch C1 BULK COLLECT INTO LV_NETTING_ENTRY_T_TYPE limit 400;
            EXIT WHEN LV_NETTING_ENTRY_T_TYPE.COUNT = 0;        
            forall i in 1..LV_NETTING_ENTRY_T_TYPE.count
				UPDATE wsc_ahcs_lsi_netting_entry_t L SET 
                (TRANSACTION_NUMBER,HEADER_ID) = (
                    SELECT TRANSACTION_NUMBER,HEADER_ID FROM wsc_ahcs_lsi_netting_entry_headers_t H
                    WHERE 
                        H.LEDGER_NAME = LV_NETTING_ENTRY_T_TYPE(i).LEDGER
                        AND H.LE = LV_NETTING_ENTRY_T_TYPE(i).LE
                        AND H.ACCOUNTING_PERIOD = LV_NETTING_ENTRY_T_TYPE(i).ACCOUNTING_PERIOD
                        AND H.ACCOUNTING_DATE = LV_NETTING_ENTRY_T_TYPE(i).ACCOUNTING_DATE
                        AND H.EVENT_TYPE = LV_NETTING_ENTRY_T_TYPE(i).EVENT_TYPE
                        AND H.Event_Class = LV_NETTING_ENTRY_T_TYPE(i).Event_Class
                        AND H.Batch_ID=LV_NETTING_ENTRY_T_TYPE(i).Batch_ID
                        AND H.Batch_ID=P_BATCH_ID
                        AND H.file_name=LV_NETTING_ENTRY_T_TYPE(i).file_name
                        AND H.record_type=LV_NETTING_ENTRY_T_TYPE(i).record_type
                        AND H.to_be_processed='Y'
                ),IC_TRX_TYPE=decode(record_type,'AP-AR','IC Invoice','IC GL') where to_be_processed='Y'
                AND LEDGER = LV_NETTING_ENTRY_T_TYPE(i).LEDGER
                        AND LE = LV_NETTING_ENTRY_T_TYPE(i).LE
                        AND ACCOUNTING_PERIOD = LV_NETTING_ENTRY_T_TYPE(i).ACCOUNTING_PERIOD
                        AND ACCOUNTING_DATE = LV_NETTING_ENTRY_T_TYPE(i).ACCOUNTING_DATE
                        AND EVENT_TYPE = LV_NETTING_ENTRY_T_TYPE(i).EVENT_TYPE
                        AND Event_Class = LV_NETTING_ENTRY_T_TYPE(i).Event_Class
                        AND Batch_ID=LV_NETTING_ENTRY_T_TYPE(i).Batch_ID
                        AND file_name=LV_NETTING_ENTRY_T_TYPE(i).file_name
                        AND record_type=LV_NETTING_ENTRY_T_TYPE(i).record_type;
            end loop;

    commit;

    INSERT INTO WSC_AHCS_INT_STATUS_T(HEADER_ID,
LINE_ID ,
APPLICATION,
FILE_NAME,
BATCH_ID ,
STATUS ,
ACCOUNTING_STATUS ,
CR_DR_INDICATOR,
CURRENCY,
VALUE ,
SOURCE_COA,
TARGET_COA,
ATTRIBUTE2,
CREATED_BY,
CREATED_DATE,
LAST_UPDATED_BY,
LAST_UPDATED_DATE,
ATTRIBUTE11,
ATTRIBUTE3,
LEDGER_NAME)  
Select NET.HEADER_ID,
                    NET.LSI_NETTING_ENTRY_ID,
                    'Oracle LSI',
                    NET.FILE_NAME,
                    NET.BATCH_ID,
                    DECODE(LCT.STATUS,'MATCHED','TRANSFORM_SUCCESS','ERROR','TRANSFORM_FAILED','NEW',NULL,LCT.STATUS),
                    DECODE(LCT.STATUS,'MATCHED',NULL,'NEW',NULL,'ERROR','NULL',LCT.STATUS),
                    decode(sign(NET.ACCOUNTED_AMT),-1,'CR','DR'),
                    NET.ACCOUNTED_CURR,
                    NET.ACCOUNTED_AMT,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    NET.GL_LEGAL_ENTITY ||'.'||NET.GL_OPER_GRP||'.'||  NET.GL_ACCT||'.'|| NET. GL_DEPT ||'.'|| NET.GL_SITE||'.'|| NET.GL_IC ||'.'|| NET.GL_PROJECTS||'.'|| NET.GL_FUT_1||'.'||NET.GL_FUT_2,
                    'TRANSFORM_SUCCESS',
                    'FININT',
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    'FININT',
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    to_date(NET.ACCOUNTING_DATE,'YYYY-MM-DD'),
                    NET.TRANSACTION_NUMBER,
                    NET.LEDGER
            FROM WSC_AHCS_LSI_CONTROL_T LCT, WSC_AHCS_LSI_NETTING_ENTRY_T NET
            WHERE LCT.BATCH_ID = NET.BATCH_ID 
            AND LCT.FILE_NAME = NET.FILE_NAME 
            AND LCT.BATCH_ID = P_BATCH_ID 
            AND LCT.FILE_NAME = LV_FILE_NAME
            AND NOT EXISTS (SELECT 1 from WSC_AHCS_INT_STATUS_T where line_id = NET.LSI_NETTING_ENTRY_ID AND BATCH_ID = P_BATCH_ID)  ;	
           --- AND NET.;
            commit;
EXCEPTION
    WHEN OTHERS THEN
                  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Transaction Number update for UCM-'||sqlerrm);


           LV_ERROR := substr(SQLERRM,1,200);

          insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME,
                    'DB_ERR_IN_UCM_CREATION' ,
                    LV_ERROR,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit;                                                           

   END;



 PROCEDURE wsc_ahcs_lsi_kickoff(
		P_RECORD_TYPE VARCHAR2,
		P_FROM_DATE VARCHAR2,
		P_TO_DATE VARCHAR2
	) IS

	x_url            VARCHAR2(1000);  
	x_user_name      VARCHAR2(100);   
	x_password       VARCHAR2(100);  
    LV_RECORD_TYPE    VARCHAR2(20);

	l_body      varchar2(32767); 	
	l_clob      varchar2(32767);

	BEGIN

      LV_RECORD_TYPE := P_RECORD_TYPE;

		BEGIN  
			SELECT user_name  
			   ,(replace(password, CHR(38), CHR(38)||'amp;')) 
			   --, password  
			   , url  
			INTO x_user_name  
			   , x_password  
			   , x_url  
			FROM xx_imd_details  
		   WHERE ROWNUM=1;  
		EXCEPTION    
			WHEN OTHERS  
				THEN  
					null;
		END;  

		if(LV_RECORD_TYPE = 'AP/AR') THEN

			BEGIN
				l_body := '{ "RECORD_TYPE":"'|| 'AP-AR' ||'","FROM_ACC_DATE":"' || P_FROM_DATE || '","TO_ACC_DATE":"' || P_TO_DATE ||'","SOURCE":"ADHOC" }';   
				dbms_output.put_line(l_body);   

				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WES_WSC_GBL_LSI_AP_AR_RPT_TO_DB_/1.0/lsi',   
					p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL; 
			END; 

        ELSIF(LV_RECORD_TYPE = 'Credit Memo') THEN

        BEGIN   
				l_body := '{   "parameters" : [ {  "name":"IS_ADHOC",          "value":"TRUE"      }  ]}'; 

				dbms_output.put_line(l_body);   

				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/integrations/WESC_WSC_GBL_LSI_CRED_MEMO_SCH%7C01.00.0000/schedule/jobs',   
					p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL; 
			END;  

		else

			BEGIN
				l_body := '{ "FROM_ACC_DATE":"' || P_FROM_DATE || '","TO_ACC_DATE":"' || P_TO_DATE || '","SOURCE":"ADHOC" }';   
				dbms_output.put_line(l_body);   

				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WES_WSC_GBL_LSI_JOU_RPT_TO_DB_IN/1.0/lsi',   
					p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL;
			END;  

		end if;

	END;  

    Procedure wsc_ahcs_lsi_import_failed(P_BATCH_ID NUMBER, IMP_ACC_ID NUMBER)
    as
    BEGIN
        UPDATE WSC_AHCS_LSI_CONTROL_T SET IMPORT_ACC_ID = IMP_ACC_ID , STATUS = 'IMP_ACC_ERROR' WHERE BATCH_ID= P_BATCH_ID;
        UPDATE WSC_AHCS_INT_CONTROL_T SET IMPORT_ACC_ID = IMP_ACC_ID, STATUS = 'IMP_ACC_ERROR' WHERE BATCH_ID= P_BATCH_ID;
        update WSC_AHCS_INT_STATUS_T SET Accounting_status = 'IMP_ACC_ERROR' where batch_id = P_BATCH_ID;
        update wsc_ahcs_lsi_netting_entry_headers_t set to_be_processed ='Y' where batch_id = P_BATCH_ID;
        update wsc_ahcs_lsi_netting_entry_t set to_be_processed ='Y' where batch_id = P_BATCH_ID;
        commit;        
    END;


procedure WSC_AHCS_ASYNC_LSI_REPROCESS_GL_P(P_BATCH_ID NUMBER,P_ACC_DATE TIMESTAMP)
    as
        err_msg VARCHAR2(2000);
        err_code VARCHAR2(100);
BEGIN

        dbms_scheduler.create_job(job_name => 'lsi_gl_repro' || P_BATCH_ID||to_char(sysdate,'ddmmyyhh24miss'),
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
            WSC_LSI_PKG.wsc_ahcs_lsi_reprocess_gl_p('||P_BATCH_ID||','''||P_ACC_DATE||''');
       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for LSI Reprocess GL');

EXCEPTION
WHEN OTHERS THEN
  wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'|| '_'
  || 'LSI', 'Oracle LSI', 'Error in LSI Reprocess Async Job-'||sqlerrm);
END; 



  Procedure wsc_ahcs_lsi_reprocess_gl_p(P_BATCH_ID NUMBER,P_ACC_DATE TIMESTAMP)
   IS  

    L_ACC_DATE DATE;
    LV_ACCOUNTING_DATE TIMESTAMP;
    LV_ERROR_MSG VARCHAR2(1000);
    LV_FILE_NAME VARCHAR2(100);

   BEGIN


   SELECT FILE_NAME
   INTO LV_FILE_NAME
   FROM WSC_AHCS_LSI_CONTROL_T 
   WHERE BATCH_ID=P_BATCH_ID;

   IF P_ACC_DATE IS NOT NULL THEN
--  BEGIN
--    SELECT CASE
--        WHEN trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
--           trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
--        ELSE 
--            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
--        END
--        INTO 
--        L_ACC_DATE
--        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
--        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
--        AND trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
--                AND ((trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
--                      OR (trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));
--
--
--  END;
    L_ACC_DATE := P_ACC_DATE;
ELSE

/*  SELECT ACCOUNTING_DATE
  INTO L_ACC_DATE
  FROM WSC_AHCS_LSI_CONTROL_T
  WHERE BATCH_ID=P_BATCH_ID; */

  L_ACC_DATE := NULL;

  /* BEGIN
    SELECT CASE
        WHEN trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
           trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
        ELSE 
            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
        END
        INTO 
        L_ACC_DATE
        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
        AND trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
                AND ((trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
                      OR (trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));

  END; */

END IF;  


                 MERGE INTO WSC_AHCS_LSI_JOURNAL_MATCH_T a
                    USING ( SELECT GR.EXTRACT_NAME GR_EXTRACT_NAME,
                    GP.EXTRACT_NAME GP_EXTRACT_NAME,
                    NVL(L_ACC_DATE,GP.GL_ACCOUNTING_DATE) GR_GL_ACC_DATE,
                    GR.ENTERED_CURRENCY_CODE GR_ENTERED_CURRENCY_CODE, 
                    GR.FUNCTIONAL_CURRENCY_CODE GR_FUNCTIONAL_CURRENCY_CODE,
                    GR.EXCHANGE_RATE GR_EXCHANGE_RATE,
                    GR.EXCHANGE_RATE_DATE GR_EXCHANGE_RATE_DATE,
                    GR.JOURNAL_HEADER_NAME GR_GL_JOURNAL_NAME, 
                    GR.LEDGER_NAME GR_LEDGER_NAME, 
                    NVL(L_ACC_DATE,GP.GL_ACCOUNTING_DATE) GR_ACC_DATE,  
                    (NVL(GR.RUNNING_TOTAL_CR,0)-NVL(GR.RUNNING_TOTAL_DR,0)) GR_RUNNING_TOTAL_DR, 
                    (NVL(GR.RUNNING_TOTAL_ACCOUNTED_CR,0)-NVL(GR.RUNNING_TOTAL_ACCOUNTED_DR,0)) GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    decode(GR.EXCHANGE_RATE_TYPE,'300000275885426','300000275885425','300000275885427','300000275885425',GR.EXCHANGE_RATE_TYPE)  GR_EXCHANGE_RATE_TYPE,  
                    GR.SEGMENT1 GR_SEGMENT1,
                    GR.SEGMENT2 GR_SEGMENT2,
                    GR.SEGMENT3 GR_SEGMENT3,
                    GR.SEGMENT4 GR_SEGMENT4,
                    GR.SEGMENT5 GR_SEGMENT5,
                    GR.SEGMENT6 GR_SEGMENT6,
                    GR.SEGMENT7 GR_SEGMENT7,
                    GR.SEGMENT8 GR_SEGMENT8,
                    GR.SEGMENT9 GR_SEGMENT9,
                    GR.LEGAL_ENTITY_NAME GR_INTERCOMPANY_LEGAL_ENTITY, 
                    GR.PROVIDER_LEGAL_ENTITY GR_PROVIDER_LEGAL_ENTITY,
                    GR.INTERCOMPANY_TRANSACTION_TYPE GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    GR.INTERCOMPANY_BATCH_NUMBER GR_INTERCOMPANY_BATCH_NUMBER,
                    GR.INTERCOMPANY_TRANSACTION_NUMBER GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    GR.GL_BATCH_ID GR_GL_BATCH_ID,
                    GR.GL_JOURNAL_ID GR_GL_JOURNAL_ID,
                    GR.JOURNAL_LINE_NUMBER GR_JOURNAL_LINE_NUMBER,
                    GR.LE GR_LE,
                    GR.JOURNAL_ACCOUNTING_SEQUENCE GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    GP.JOURNAL_HEADER_NAME GP_GL_JOURNAL_NAME, 
                    GP.LEDGER_NAME GP_LEDGER_NAME, 
                    NVL(L_ACC_DATE,GP.GL_ACCOUNTING_DATE) GP_ACC_DATE, 
                    GP.EXCHANGE_RATE GP_EXCHANGE_RATE, 
                    decode(GP.EXCHANGE_RATE_TYPE,'300000275885426','300000275885425','300000275885427','300000275885425',GP.EXCHANGE_RATE_TYPE)  GP_EXCHANGE_RATE_TYPE, 
                    GP.EXCHANGE_RATE_DATE GP_EXCHANGE_RATE_DATE, 
                    NVL(GP.RUNNING_TOTAL_DR,0)-NVL(GP.RUNNING_TOTAL_CR,0) GP_RUNNING_TOTAL_DR, 
                    NVL(GP.RUNNING_TOTAL_ACCOUNTED_DR,0)-NVL(GP.RUNNING_TOTAL_ACCOUNTED_CR,0) GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GP.SEGMENT1 GP_SEGMENT1,
                    GP.SEGMENT2 GP_SEGMENT2,
                    GP.SEGMENT3 GP_SEGMENT3,
                    GP.SEGMENT4 GP_SEGMENT4,
                    GP.SEGMENT5 GP_SEGMENT5,
                    GP.SEGMENT6 GP_SEGMENT6,
                    GP.SEGMENT7 GP_SEGMENT7,
                    GP.SEGMENT8 GP_SEGMENT8,
                    GP.SEGMENT9 GP_SEGMENT9,
                    GP.LEGAL_ENTITY_NAME GP_LEGAL_ENTITY_NAME,
                    GP.PROVIDER_LEGAL_ENTITY GP_PROVIDER_LEGAL_ENTITY, 
                    GP.INTERCOMPANY_TRANSACTION_TYPE GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    GP.INTERCOMPANY_BATCH_NUMBER GP_INTERCOMPANY_BATCH_NUMBER, 
                    GP.ENTERED_CURRENCY_CODE GP_ENTERED_CURRENCY_CODE, 
                    GP.FUNCTIONAL_CURRENCY_CODE GP_FUNCTIONAL_CURRENCY_CODE,
                    GP.INTERCOMPANY_TRANSACTION_NUMBER GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    GP.GL_BATCH_ID GP_GL_BATCH_ID,
                    GP.GL_JOURNAL_ID GP_GL_JOURNAL_ID,
                    GP.JOURNAL_LINE_NUMBER GP_JOURNAL_LINE_NUMBER,
                    GP.LE GP_LE,
                    GP.JOURNAL_ACCOUNTING_SEQUENCE GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    GR.ACCOUNTING_PERIOD
                    FROM WSC_AHCS_LSI_JOURNAL_T GP, WSC_AHCS_LSI_JOURNAL_T GR
                    WHERE 1=1
                    ---AND NVL(GR.RUNNING_TOTAL_DR,0)=NVL(GP.RUNNING_TOTAL_DR,0)
                    AND GR.INTERCOMPANY_BATCH_NUMBER=GP.INTERCOMPANY_BATCH_NUMBER
                    AND GR.INTERCOMPANY_TRANSACTION_NUMBER=GP.INTERCOMPANY_TRANSACTION_NUMBER
                    AND GP.SEGMENT6=GR.SEGMENT1
                    AND GP.SEGMENT1=GR.SEGMENT6
                    AND GR.PARTY_TYPE_FLAG='R'
                    AND GP.PARTY_TYPE_FLAG='I'
                    AND GR.BATCH_ID=GP.BATCH_ID
                    AND GR.BATCH_ID=P_BATCH_ID
                    AND NOT EXISTS(SELECT 1 FROM WSC_AHCS_LSI_JOURNAL_MATCH_T
                                   WHERE GR_GL_BATCH_ID=GR.GL_BATCH_ID
                                   AND GR_GL_JOURNAL_ID=GR.GL_JOURNAL_ID
                                   AND GR_JOURNAL_LINE_NUMBER=GR.JOURNAL_LINE_NUMBER)
                    AND NOT EXISTS(SELECT 1 FROM WSC_AHCS_LSI_JOURNAL_MATCH_T
                                   WHERE GP_GL_BATCH_ID=GP.GL_BATCH_ID
                                   AND GP_GL_JOURNAL_ID=GP.GL_JOURNAL_ID 
                                   AND GP_JOURNAL_LINE_NUMBER=GP.JOURNAL_LINE_NUMBER)) b
        ON (a.GR_INTERCOMPANY_BATCH_NUMBER = b.GR_INTERCOMPANY_BATCH_NUMBER 
        and a.GP_LEDGER_NAME=b.GP_LEDGER_NAME and a.GR_LEDGER_NAME=b.GR_LEDGER_NAME
        and a.GP_INTERCOMPANY_TRANSACTION_NUMBER=b.GP_INTERCOMPANY_TRANSACTION_NUMBER)
        WHEN NOT MATCHED THEN
                    INSERT (BATCH_ID,
                    GP_EXTRACT_NAME,
                    GR_EXTRACT_NAME,
                    GR_GL_ACCOUNTING_DATE,
                    GR_ENTERED_CURRENCY_CODE,
                    GR_FUNCTIONAL_CURRENCY_CODE,
                    GR_EXCHANGE_RATE, 
                    GR_EXCHANGE_RATE_TYPE, 
                    GR_EXCHANGE_RATE_DATE, 
                    GR_GL_JOURNAL_ID, 
                    GR_GL_JOURNAL_NAME,
                    GR_JOURNAL_LINE_NUMBER,
                    GR_LEDGER_NAME, 
                    GR_RUNNING_TOTAL_DR, 
                    GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GR_SEGMENT1,
                    GR_SEGMENT2,
                    GR_SEGMENT3,
                    GR_SEGMENT4,
                    GR_SEGMENT5,
                    GR_SEGMENT6,
                    GR_SEGMENT7,
                    GR_SEGMENT8,
                    GR_SEGMENT9,
                    GR_LEGAL_ENTITY_NAME, 
                    GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    GR_INTERCOMPANY_BATCH_NUMBER,
                    GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    GR_GL_BATCH_ID,
                    GR_LE,  
                    GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    GP_GL_ACCOUNTING_DATE,
                    GP_ENTERED_CURRENCY_CODE,
                    GP_FUNCTIONAL_CURRENCY_CODE,
                    GP_EXCHANGE_RATE, 
                    GP_EXCHANGE_RATE_TYPE, 
                    GP_EXCHANGE_RATE_DATE, 
                    GP_GL_JOURNAL_ID, 
                    GP_GL_JOURNAL_NAME,
                    GP_JOURNAL_LINE_NUMBER,
                    GP_LEDGER_NAME, 
                    GP_RUNNING_TOTAL_DR, 
                    GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    GP_SEGMENT1,
                    GP_SEGMENT2,
                    GP_SEGMENT3,
                    GP_SEGMENT4,
                    GP_SEGMENT5,
                    GP_SEGMENT6,
                    GP_SEGMENT7,
                    GP_SEGMENT8,
                    GP_SEGMENT9,
                    GP_LEGAL_ENTITY_NAME, 
                    GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    GP_INTERCOMPANY_BATCH_NUMBER,
                    GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    GP_GL_BATCH_ID,
                    GP_LE,
                    GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    ACCOUNTING_PERIOD) 
                    VALUES (P_BATCH_ID,
                    b.GP_EXTRACT_NAME,
                    b.GR_EXTRACT_NAME,
                    b.GR_GL_ACC_DATE,
                    b.GR_ENTERED_CURRENCY_CODE,
                    b.GR_FUNCTIONAL_CURRENCY_CODE,
                    b.GR_EXCHANGE_RATE, 
                    b.GR_EXCHANGE_RATE_TYPE, 
                    b.GR_EXCHANGE_RATE_DATE, 
                    b.GR_GL_JOURNAL_ID, 
                    b.GR_GL_JOURNAL_NAME,
                    b.GR_JOURNAL_LINE_NUMBER,
                    b.GR_LEDGER_NAME, 
                    b.GR_RUNNING_TOTAL_DR, 
                    b.GR_RUNNING_TOTAL_ACCOUNTED_DR, 
                    b.GR_SEGMENT1,
                    b.GR_SEGMENT2,
                    b.GR_SEGMENT3,
                    b.GR_SEGMENT4,
                    b.GR_SEGMENT5,
                    b.GR_SEGMENT6,
                    b.GR_SEGMENT7,
                    b.GR_SEGMENT8,
                    b.GR_SEGMENT9,
                    b.GR_INTERCOMPANY_LEGAL_ENTITY, 
                    b.GR_INTERCOMPANY_TRANSACTION_TYPE, 
                    b.GR_INTERCOMPANY_BATCH_NUMBER,
                    b.GR_INTERCOMPANY_TRANSACTION_NUMBER,
                    b.GR_GL_BATCH_ID,
                    b.GR_LE,
                    b.GR_JOURNAL_ACCOUNTING_SEQUENCE,
                    b.GP_ACC_DATE,
                    b.GP_ENTERED_CURRENCY_CODE,
                    b.GP_FUNCTIONAL_CURRENCY_CODE,
                    b.GP_EXCHANGE_RATE, 
                    b.GP_EXCHANGE_RATE_TYPE, 
                    b.GP_EXCHANGE_RATE_DATE, 
                    b.GP_GL_JOURNAL_ID, 
                    b.GP_GL_JOURNAL_NAME,
                    b.GP_JOURNAL_LINE_NUMBER,
                    b.GP_LEDGER_NAME, 
                    b.GP_RUNNING_TOTAL_DR, 
                    b.GP_RUNNING_TOTAL_ACCOUNTED_DR, 
                    b.GP_SEGMENT1,
                    b.GP_SEGMENT2,
                    b.GP_SEGMENT3,
                    b.GP_SEGMENT4,
                    b.GP_SEGMENT5,
                    b.GP_SEGMENT6,
                    b.GP_SEGMENT7,
                    b.GP_SEGMENT8,
                    b.GP_SEGMENT9,
                    b.GP_LEGAL_ENTITY_NAME, 
                    b.GP_INTERCOMPANY_TRANSACTION_TYPE, 
                    b.GP_INTERCOMPANY_BATCH_NUMBER,
                    b.GP_INTERCOMPANY_TRANSACTION_NUMBER,
                    b.GP_GL_BATCH_ID,
                    b.GP_LE,
                    b.GP_JOURNAL_ACCOUNTING_SEQUENCE,
                    to_char(b.GR_GL_ACC_DATE,'MON-YYYY'));

       IF SQL%ROWCOUNT >0 THEN

       BEGIN
         DELETE FROM WSC_AHCS_LSI_ERR_T WHERE BATCH_ID=P_BATCH_ID;

      Update WSC_AHCS_LSI_CONTROL_T
      SET NETTING_STATUS='IN PROGRESS'
      WHERE BATCH_ID=P_BATCH_ID;

         Commit;
         EXCEPTION
            WHEN OTHERS THEN
                NULL;
         END;  

           Update WSC_AHCS_LSI_CONTROL_T 
           SET TO_BE_REPROCESSED='Y',
           STATUS='MATCHED'
           WHERE BATCH_ID=P_BATCH_ID;
         Commit;  



       WSC_LSI_NETTING_P('GL',P_BATCH_ID); 

        END IF;

EXCEPTION
    WHEN OTHERS THEN

          LV_ERROR_MSG := substr(SQLERRM,1,200);

       insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERROR IN REPROCESSING' ,
                    LV_ERROR_MSG,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit; 

          wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Journals Matching Process-'||sqlerrm);


 END wsc_ahcs_lsi_reprocess_gl_p;     

  Procedure wsc_ahcs_lsi_reprocess_p(P_BATCH_ID NUMBER,P_ACC_DATE TIMESTAMP)
IS

	 LV_AP_COUNT NUMBER;
	 LV_AR_COUNT NUMBER;
     LV_AP_AR_COUNT NUMBER;
	x_url            VARCHAR2(1000);  
	x_user_name      VARCHAR2(100);   
	x_password       VARCHAR2(100);  

	l_body      varchar2(32767); 	
	l_clob      varchar2(32767);
	L_ACC_DATE TIMESTAMP;
    LV_ACCOUNTING_DATE TIMESTAMP;
    LV_ERROR_MSG VARCHAR2(200);
    LV_FILE_NAME VARCHAR2(200);

BEGIN



/*
BEGIN	
 MERGE INTO WSC_AHCS_LSI_AP_T a
 USING (SELECT Record_Type,
			   BU,
			   INVOICE_NUMBER,
			   EXCHANGE_RATE_TYPE,
			   ENTERED_INVOICE_AMOUNT,
			   BANK_ACC,
			   VENDOR_CUST_NAME, 
               VENDOR_CUST_SITE,
			   INVOICE_ID,
			   Invoice_Currency_Code
		FROM WSC_AHCS_LSI_AP_AR_TMP_T) b
ON ( a.invoice_id=b.invoice_id and a.BU=b.BU and a.batch_id=P_BATCH_ID)
WHEN MATCHED THEN
UPDATE SET	EXCHANGE_RATE_TYPE=b.EXCHANGE_RATE_TYPE,
		ENTERED_INVOICE_AMOUNT=b.ENTERED_INVOICE_AMOUNT,
		BANK_ACC=b.BANK_ACC,
		VENDOR_NAME=b.VENDOR_CUST_NAME,
		VENDOR_SITE=b.VENDOR_CUST_SITE,
		PAYMENT_CURRENCY=b.Invoice_Currency_Code;

Commit;

MERGE INTO WSC_AHCS_LSI_AR_T a
 USING (SELECT Record_Type,
			   BU,
			   INVOICE_NUMBER,
			   Account_Number,
			   Lockbox_Number,
			   Lockbox_id,
			   Bank_Origination_Number,
			   Invoice_Currency_Code,
			   ENTERED_INVOICE_AMOUNT,
			   VENDOR_CUST_NAME, 
               VENDOR_CUST_SITE,
			   INVOICE_ID
		FROM WSC_AHCS_LSI_AP_AR_TMP_T) b
ON ( a.invoice_id=b.invoice_id and a.BU=b.BU and a.batch_id=P_BATCH_ID)
WHEN MATCHED THEN
UPDATE SET	Account_Number=b.Account_Number,
		Lockbox_Number=b.Lockbox_Number,
		Lockbox_id=b.Lockbox_id,
		Bank_Origination_Number=b.Bank_Origination_Number,
		Invoice_Currency_Code=b.Invoice_Currency_Code,
		ENTERED_INVOICE_AMOUNT=b.ENTERED_INVOICE_AMOUNT,
		CUST_NAME=b.VENDOR_CUST_NAME,
		CUST_SITE=b.VENDOR_CUST_SITE;

Commit;		
END; */

 SELECT FILE_NAME
   INTO LV_FILE_NAME
   FROM WSC_AHCS_LSI_CONTROL_T 
   WHERE BATCH_ID=P_BATCH_ID;

   SELECT count(1) 
	 INTO LV_AP_COUNT
	 FROM WSC_AHCS_LSI_AP_T
	 WHERE BATCH_ID=P_BATCH_ID
	 AND (STATUS='ERROR' OR STATUS IS NULL);

	 SELECT count(1) 
	 INTO LV_AR_COUNT
	 FROM WSC_AHCS_LSI_AR_T
	 WHERE BATCH_ID=P_BATCH_ID
	 AND (STATUS='ERROR' OR STATUS IS NULL);

      SELECT count(1)
     INTO LV_AP_AR_COUNT
     FROM WSC_AHCS_LSI_ERR_T A,
          WSC_AHCS_LSI_CONTROL_T B
     WHERE A.BATCH_ID=B.BATCH_ID
     AND B.RECORD_TYPE='AP-AR'
     AND A.BATCH_ID=P_BATCH_ID
	 AND A.ERROR_CODE='ERR_EXCH_NOT_ENABLED';   


IF P_ACC_DATE IS NOT NULL THEN
--  BEGIN
--    SELECT CASE
--        WHEN trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
--           trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
--        ELSE 
--            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
--        END
--        INTO 
--        L_ACC_DATE
--        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
--        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
--        AND trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
--                AND ((trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
--                      OR (trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));
--
--
--  END;
    L_ACC_DATE := P_ACC_DATE;


  UPdate WSC_AHCS_LSI_AP_T 	
	SET PAYMENT_DATE=L_ACC_DATE,
	EXCHANGE_RATE_DATE=L_ACC_DATE,
	ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID
	AND STATUS='ERROR';
	commit;

	Update WSC_AHCS_LSI_AR_T 
	SET ACCOUNTING_DATE=L_ACC_DATE,
    STATUS=NULL
	WHERE BATCH_ID=P_BATCH_ID
	AND STATUS='ERROR';
	Commit;

	Update WSC_AHCS_LSI_CONTROL_T
	SET STATUS='MATCHED',
	TO_BE_REPROCESSED='Y',
	ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID;
	commit;

ELSE

/*  UPdate WSC_AHCS_LSI_AP_T 	
	SET PAYMENT_DATE=L_ACC_DATE,
	EXCHANGE_RATE_DATE=L_ACC_DATE,
	--ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID
	AND STATUS='ERROR';
	commit; */

	Update WSC_AHCS_LSI_AR_T 
	SET STATUS=NULL
	WHERE BATCH_ID=P_BATCH_ID
	AND STATUS='ERROR';
	Commit; 

	Update WSC_AHCS_LSI_CONTROL_T
	SET STATUS='MATCHED',
	TO_BE_REPROCESSED='Y'
	--ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID;
	commit;

  /* BEGIN
    SELECT CASE
        WHEN trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
           trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
        ELSE 
            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
        END
        INTO 
        L_ACC_DATE
        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
        AND trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
                AND ((trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
                      OR (trunc(CAST(LV_ACCOUNTING_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));

  END; */

END IF;  


	BEGIN  
		SELECT user_name  
		   ,(replace(password, CHR(38), CHR(38)||'amp;')) 
		   , url  
		INTO x_user_name  
		   , x_password  
		   , x_url  
		FROM xx_imd_details  
	   WHERE ROWNUM=1;  
	EXCEPTION    
		WHEN OTHERS THEN  
				null;
	END;  



	 IF LV_AP_COUNT>0 THEN

     Update WSC_AHCS_LSI_CONTROL_T
	SET INV_PAY_STATUS='IN PROGRESS'
	WHERE BATCH_ID=P_BATCH_ID;
	commit;

			BEGIN
				l_body := '{ "BATCH_ID":"'|| P_BATCH_ID ||'","EXTRACT_NAME":"REPROCESS" }';   
				dbms_output.put_line(l_body);   

				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WES_WSC_GBL_LSI_CRE_AP_PAY_DAT_I/1.0/lsi',   
					p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL; 
			END;  
	END IF;

	IF LV_AR_COUNT>0 THEN

      Update WSC_AHCS_LSI_CONTROL_T
	SET RECEIPT_STATUS='IN PROGRESS'
	WHERE BATCH_ID=P_BATCH_ID;
	commit;

	BEGIN
		DELETE from wsc_lsi_receipt_fbdi_t where batch_id=P_BATCH_ID;
		commit;

		DELETE from WSC_AHCS_LSI_ERR_T where batch_id=P_BATCH_ID and ERROR_CODE='NO FBDI CREATED';
		commit;
	END;

	WSC_LSI_PKG.WSC_LSI_RECEIPT_FBDI_P(P_BATCH_ID);

		BEGIN
				l_body := '{ "BATCH_ID":"'|| P_BATCH_ID ||'","EXTRACT_NAME":"REPROCESS" }';   
				dbms_output.put_line(l_body);   
--'{ "RECORD_TYPE" : "AP-AR", "BATCH_ID" : P_BATCH_ID, "FROM_ACC_DATE" : " " , "SOURCE" : "ABC", "P_ACC_DATE" : LV_ACC_DATE }'
				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WESC_WSC_GBL_LSI_CREA_AR_RECE_SU/1.0/lsi',   
					p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL; 
			END;
	END IF;		

     IF LV_AP_AR_COUNT>0 THEN

         Update WSC_AHCS_LSI_CONTROL_T
        SET NETTING_STATUS='IN PROGRESS'
        WHERE BATCH_ID=P_BATCH_ID;


        DELETE FROM WSC_AHCS_LSI_ERR_T WHERE BATCH_ID=P_BATCH_ID AND ERROR_CODE='ERR_EXCH_NOT_ENABLED';
        commit;

       -- WSC_LSI_NETTING_P('AP-AR',P_BATCH_ID);

		 dbms_scheduler.create_job(job_name => 'lsi_apar_repro' || P_BATCH_ID||to_char(sysdate,'ddmmyyhh24miss'),
                                 job_type => 'PLSQL_BLOCK',
                                 job_action => 'BEGIN
            WSC_LSI_PKG.WSC_LSI_NETTING_P(''AP-AR'','||P_BATCH_ID||');
       END;',
                                 enabled => true,
                                 auto_drop => true,
                                 comments => 'Async steps for LSI Reprocess APAR');

     END IF; 

EXCEPTION
    WHEN OTHERS THEN

          LV_ERROR_MSG := substr(SQLERRM,1,200);

       insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERROR IN REPROCESSING' ,
                    LV_ERROR_MSG,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit; 

          wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Journals Matching Process-'||sqlerrm);



END;  

  Procedure wsc_ahcs_lsi_reprocess_cm_p(P_BATCH_ID NUMBER,P_ACC_DATE TIMESTAMP)
IS

	x_url            VARCHAR2(1000);  
	x_user_name      VARCHAR2(100);   
	x_password       VARCHAR2(100);  

	l_body      varchar2(32767); 	
	l_clob      varchar2(32767);
	L_ACC_DATE TIMESTAMP;
    LV_ERROR_MSG VARCHAR2(200);
    LV_FILE_NAME VARCHAR2(200);

BEGIN


 SELECT FILE_NAME
   INTO LV_FILE_NAME
   FROM WSC_AHCS_LSI_CONTROL_T 
   WHERE BATCH_ID=P_BATCH_ID;

IF P_ACC_DATE IS NOT NULL THEN
--  BEGIN
--    SELECT CASE
--        WHEN trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
--           trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
--        ELSE 
--            last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
--        END
--        INTO 
--        L_ACC_DATE
--        FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
--        where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
--        AND trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
--                AND ((trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
--                      OR (trunc(CAST(P_ACC_DATE AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));
--
--
--  END;
    L_ACC_DATE := P_ACC_DATE;
  UPdate WSC_AHCS_LSI_INVOICE_FOR_CM_H_T 	
	SET ACCOUNTING_DATE=to_char(L_ACC_DATE,'YYYY/MM/DD')
	WHERE BATCH_ID=P_BATCH_ID
	AND INV_CREATION_STATUS='REJECTED';
	commit;


	Update WSC_AHCS_LSI_CONTROL_T
	SET STATUS='MATCHED',
	TO_BE_REPROCESSED='Y',
	ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID;
    commit;

ELSE

 /* SELECT ACCOUNTING_DATE
  INTO L_ACC_DATE
  FROM WSC_AHCS_LSI_CONTROL_T
  WHERE BATCH_ID=P_BATCH_ID; */

 /* UPdate WSC_AHCS_LSI_INVOICE_FOR_CM_H_T 	
	SET ACCOUNTING_DATE=to_char(L_ACC_DATE,'YYYY/MM/DD')
	WHERE BATCH_ID=P_BATCH_ID
	AND INV_CREATION_STATUS='REJECTED';
	commit; */


	Update WSC_AHCS_LSI_CONTROL_T
	SET STATUS='MATCHED',
	TO_BE_REPROCESSED='Y'
--	ACCOUNTING_DATE=L_ACC_DATE
	WHERE BATCH_ID=P_BATCH_ID;

END IF;  



	BEGIN  
		SELECT user_name  
		   ,(replace(password, CHR(38), CHR(38)||'amp;')) 
		   , url  
		INTO x_user_name  
		   , x_password  
		   , x_url  
		FROM xx_imd_details  
	   WHERE ROWNUM=1;  
	EXCEPTION    
		WHEN OTHERS THEN  
				null;
	END;  



    Update WSC_AHCS_LSI_CONTROL_T
	SET INV_CREATE_STATUS='IN PROGRESS'
	WHERE BATCH_ID=P_BATCH_ID;
	commit;

			BEGIN
				l_body := '{ "BATCH_ID":"'|| P_BATCH_ID ||'","EXTRACT_NAME":"REPROCESS" }';   
				dbms_output.put_line(l_body);   

				apex_web_service.g_request_headers.delete();   
				apex_web_service.g_request_headers(1).name := 'Content-Type';   
				apex_web_service.g_request_headers(1).value := 'application/json';   

				l_clob := apex_web_service.make_rest_request(   
					p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WESC_WSC_GBL_LSI_CRED_MEMO_INVO_/1.0/lsi',p_http_method => 'POST',   
					p_username => x_user_name,   
					p_password => x_password,   
					p_body => l_body
				);   

				apex_json.parse (l_clob);   

			 EXCEPTION   
				WHEN OTHERS   
				THEN   
					NULL; 
			END;  
EXCEPTION
    WHEN OTHERS THEN

          LV_ERROR_MSG := substr(SQLERRM,1,200);

       insert into WSC_AHCS_LSI_ERR_T
                  (FILE_NAME ,
                    ERROR_CODE ,
                    ERROR_MSG,
                    CREATED_DATE ,
                    LAST_UPDATED_BY, 
                    LAST_UPDATED_DATE ,
                    ERROR_FILE_SENT_FLAG, 
                    CREATED_BY ,
                    BATCH_ID,
                    TO_BE_PROCESSED)
                    values
                    (LV_FILE_NAME ,
                    'ERROR IN REPROCESSING' ,
                    LV_ERROR_MSG,
                    SYSDATE ,
                    'FININT', 
                    SYSDATE ,
                    'N', 
                    'FININT' ,
                    P_BATCH_ID,
                    'Y');
                 Commit; 

          wsc_ahcs_int_error_logging.error_logging(P_BATCH_ID, 'EXT041'
                                                                 || '_'
                                                                 || 'LSI', 'Oracle LSI', 'Error in Journals Matching Process-'||sqlerrm);



END;  


procedure wsc_ahcs_lsi_kickoff_reprocess(P_BATCH_ID number, LV_ACC_DATE date) as
    x_url            VARCHAR2(1000);  
	x_user_name      VARCHAR2(100);   
	x_password       VARCHAR2(100);  

	l_body      varchar2(32767); 	
	l_clob      varchar2(32767);
BEGIN

    BEGIN  
		SELECT user_name  
		   ,(replace(password, CHR(38), CHR(38)||'amp;')) 
		   , url  
		INTO x_user_name  
		   , x_password  
		   , x_url  
		FROM xx_imd_details  
	   WHERE ROWNUM=1;  
	EXCEPTION    
		WHEN OTHERS THEN  
				null;
	END; 

    l_body := '{ "RECORD_TYPE" : "AP-AR", "BATCH_ID":"'|| P_BATCH_ID||'", "FROM_ACC_DATE" : "null" , "SOURCE" : "ABC", "P_ACC_DATE" :"'|| LV_ACC_DATE||'" }';
--	l_body := '{ "BATCH_ID":"'|| P_BATCH_ID ||'","EXTRACT_NAME":"ABC" }';   
    dbms_output.put_line(l_body);   

    apex_web_service.g_request_headers.delete();   
    apex_web_service.g_request_headers(1).name := 'Content-Type';   
    apex_web_service.g_request_headers(1).value := 'application/json';   

    l_clob := apex_web_service.make_rest_request(   
        p_url => x_url || ':443/ic/api/integration/v1/flows/rest/WESC_WSC_GBL_LSI_AP_AR_REPR/1.0/lsi',   
        p_http_method => 'POST',   
        p_username => x_user_name,   
        p_password => x_password,   
        p_body => l_body
    );   

    apex_json.parse (l_clob);   

 EXCEPTION   
    WHEN OTHERS   
    THEN   
        NULL; 
END;
    --Harman
    procedure wsc_ahcs_lsi_credit_memo_invoices(P_ACC_DATE TIMESTAMP, P_FILE_NAME VARCHAR2)
    as
        cursor cm_list(p_batch_id number) is
        select apar_m.*,le.LEGAL_ENTITY_ID,le.LEGAL_ENTITY_NAME,le.LEDGER_ID,le.LEDGER_NAME, lookup.DESCRIPTION 
        from wsc_ahcs_lsi_ap_ar_match_t apar_m, wsc_gl_legal_entities_t le , WSC_AHCS_LSI_LOOKUP_T lookup
        where apar_m.status is null and apar_m.AP_ENTERED_INVOICE_AMOUNT < 0 and le.flex_segment_value = apar_m.AP_INTERCOMPANY_LEGAL_ENTITY
            and lookup.LOOKUP_TYPE = 'WSC_LSI_BANK_DETAILS' and lookup.ATTRIBUTE1 = le.flex_segment_value and batch_id = p_batch_id;

        L_ACC_DATE DATE;
        LV_INVOICE_ID VARCHAR2(100);
        LV_BATCH_ID NUMBER;
        LV_MATCH_COUNT varchar2(100);
        L_FILE_NAME varchar2(100);
        L_EXTRACT varchar2(200);
        LV_CM_RUN_ID number;
        LV_MATCH_COUNT1 number;
        LV_AR_UNMATCH_CNT NUMBER :=0;
        LV_AP_UNMATCH_CNT NUMBER:=0;
        LV_ERROR_MSG varchar2(200);
    begin
        -- getting nextval batch_id
        Select WSC_LSI_APAR_BATCH_P INTO LV_BATCH_ID FROM DUAL;



        -- Getting LSI RUN DATE
            SELECT CASE
            WHEN trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<= last_day(to_date(ACC_DATE.TAG,'YYYY/MM/DD'))  THEN
               trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE)) 
            ELSE 
                last_day(to_date(ACC_DATE.tag,'YYYY/MM/DD'))
            END
            INTO 
            L_ACC_DATE
            FROM WSC_AHCS_LSI_LOOKUP_T ACC_DATE 
            where lookup_type='WSC_LSI_WORKDAY_LOOKUP'
            AND trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))>=to_date(NVL(ACC_DATE.MEANING,trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))),'DD-MM-YYYY')
                    AND ((trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<=to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='Yes')
                          OR (trunc(CAST(NVL(P_ACC_DATE,SYSTIMESTAMP) AT TIME ZONE 'America/Chicago' AS TIMESTAMP WITH TIME ZONE))<to_date(ACC_DATE.DESCRIPTION,'DD-MM-YYYY') AND ACC_DATE.ATTRIBUTE1='No'));


        -- getting match record from AP_AR table and merging them to AP_AR_MATCH table
        MERGE INTO WSC_AHCS_LSI_AP_AR_MATCH_T a
             USING ( SELECT AP.extract_name extract_name_ap,
                            AP.INVOICE_DATE AP_INVOICE_DATE,
                            AP.INVOICE_CURRENCY_CODE AP_INVOICE_CURRENCY_CODE,
                             AP.BU AP_BU,
                             AP.BU_ID AP_BU_ID,
                             LT.ATTRIBUTE2 AP_BANK_ACC,
                             AP.VENDOR_CUST_NAME AP_VENDOR_CUST_NAME, 
                            AP.VENDOR_CUST_SITE AP_VENDOR_CUST_SITE,
                            AP.EXCHANGE_RATE AP_EXCHANGE_RATE,
                            AP.EXCHANGE_RATE_DATE AP_EXCHANGE_RATE_DATE,
                            AP.INVOICE_NUMBER AP_INVOICE_NUMBER, 
                            AP.LEDGER_NAME AP_LEDGER_NAME, 
                            AP.ACCOUNTING_CLASS AP_ACCOUNTING_CLASS, 
                             L_ACC_DATE AP_ACCOUNTING_DATE,  
                            AP.ENTERED_INVOICE_AMOUNT AP_ENTERED_INVOICE_AMOUNT, 
                            AP.ACCOUNTED_INVOICE_AMOUNT AP_ACCOUNTED_INVOICE_AMOUNT, 
                            AP.EXCHANGE_RATE_TYPE AP_EXCHANGE_RATE_TYPE,
                            AP.GL_CODE_COMBINATION AP_GL_CODE_COMBINATION, 
                            AP.INTERCOMPANY_LEGAL_ENTITY AP_INTERCOMPANY_LEGAL_ENTITY, 
                            AP.INTERCOMPANY_TRANSACTION_TYPE AP_INTERCOMPANY_TRANSACTION_TYPE, 
                            AP.INTERCOMPANY_BATCH_NUMBER AP_INTERCOMPANY_BATCH_NUMBER,
                            AP.FUNCTIONAL_CURRENCY_CODE AP_FUNCTIONAL_CURRENCY_CODE,
                            AP.NETTING_LEDGER AP_NETTING_LEDGER,
                            AP.NETTING_FUN_CURR AP_NETTING_FUN_CURR,
                            AP.IC_TRX_NUMBER AP_IC_TRX_NUMBER,
                             AP.INVOICE_ID AP_INVOICE_ID,
                            AR.extract_name extract_name_ar,
                             AR.BU AR_BU, 
                             AR.BU_ID AR_BU_ID,
                            AR.INVOICE_NUMBER AR_INVOICE_NUMBER, 
                             AR.LEDGER_NAME AR_LEDGER_NAME, 
                            AR.ACCOUNTING_CLASS AR_ACCOUNTING_CLASS, 
                             AR.INVOICE_DATE AR_INVOICE_DATE, 
                             L_ACC_DATE AR_ACCOUNTING_DATE, 
                            AR.EXCHANGE_RATE AR_EXCHANGE_RATE, 
                            AR.EXCHANGE_RATE_TYPE AR_EXCHANGE_RATE_TYPE, 
                            AR.EXCHANGE_RATE_DATE AR_EXCHANGE_RATE_DATE, 
                            AR.ENTERED_INVOICE_AMOUNT AR_ENTERED_INVOICE_AMOUNT, 
                            AR.ACCOUNTED_INVOICE_AMOUNT AR_ACCOUNTED_INVOICE_AMOUNT, 
                            AR.GL_CODE_COMBINATION AR_GL_CODE_COMBINATION, 
                            AR.INTERCOMPANY_LEGAL_ENTITY AR_INTERCOMPANY_LEGAL_ENTITY, 
                            AR.INTERCOMPANY_TRANSACTION_TYPE AR_INTERCOMPANY_TRANSACTION_TYPE, 
                            AR.INTERCOMPANY_BATCH_NUMBER AR_INTERCOMPANY_BATCH_NUMBER, 
                            AR.VENDOR_CUST_NAME AR_VENDOR_CUST_NAME, 
                            AR.VENDOR_CUST_SITE AR_VENDOR_CUST_SITE, 
                            AR.ACCOUNT_NUMBER AR_ACCOUNT_NUMBER, 
                            AR.LOCKBOX_NUMBER AR_LOCKBOX_NUMBER,
                             AR.LOCKBOX_ID AR_LOCKBOX_ID,            
                            AR.BANK_ORIGINATION_NUMBER AR_BANK_ORIGINATION_NUMBER, 
                            AR.INVOICE_CURRENCY_CODE AR_INVOICE_CURRENCY_CODE, 
                            AR.FUNCTIONAL_CURRENCY_CODE AR_FUNCTIONAL_CURRENCY_CODE,
                            AR.IC_TRX_NUMBER AR_IC_TRX_NUMBER,
                             AR.INVOICE_ID AR_INVOICE_ID,
                            AP.ACCOUNTING_PERIOD,
                            LT.DESCRIPTION,
                            LT.TAG,
                            LT.LEDGER_NAME PAY_METHOD
                FROM WSC_AHCS_LSI_AP_AR_T AP,WSC_AHCS_LSI_AP_AR_T AR,
                    WSC_AHCS_LSI_LOOKUP_T LT
                WHERE 1=1 --AP.INVOICE_NUMBER=AR.INVOICE_NUMBER
                AND AP.RECORD_TYPE='AP'
                AND AR.RECORD_TYPE='AR'
                AND AP.ACCOUNTING_CLASS='LIABILITY'
                AND AR.ACCOUNTING_CLASS='RECEIVABLE'
                AND AP.ENTERED_INVOICE_AMOUNT=AR.ENTERED_INVOICE_AMOUNT
				AND AP.ENTERED_INVOICE_AMOUNT < 0
                AND AR.STATUS is NULL
				AND AP.STATUS IS NULL 
                AND AR.INTERCOMPANY_BATCH_NUMBER=AP.INTERCOMPANY_BATCH_NUMBER
                AND AR.IC_TRX_NUMBER=AP.IC_TRX_NUMBER
                AND AP.Check_id IS NULL
                AND AR.Payment_NUMber IS NULL
                AND substr(AP.GL_CODE_COMBINATION,1,4)=substr(AR.GL_CODE_COMBINATION,29,4)
                AND substr(AR.GL_CODE_COMBINATION,1,4)=substr(AP.GL_CODE_COMBINATION,29,4)
                AND NOT EXISTS (Select 1 FROM
                                WSC_AHCS_LSI_AP_T
                                WHERE 1=1 --INVOICE_NUMBER=AP.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=AP.IC_TRX_NUMBER
                                AND BU=AP.BU
                                AND INTERCOMPANY_BATCH_NUMBER=AP.INTERCOMPANY_BATCH_NUMBER)
                 AND NOT EXISTS (SELECT 1 FROM 
                                WSC_AHCS_LSI_AR_T
                                WHERE 1=1 --INVOICE_NUMBER=AR.INVOICE_NUMBER
                                AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER
                                AND BU=AR.BU
                                AND INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER)
                  AND LT.lookup_type='WSC_LSI_BANK_DETAILS'
                  AND LT.ATTRIBUTE1=AP.INTERCOMPANY_LEGAL_ENTITY) b
            ON (a.AR_INTERCOMPANY_BATCH_NUMBER = b.AR_INTERCOMPANY_BATCH_NUMBER AND a.AP_INTERCOMPANY_BATCH_NUMBER = b.AP_INTERCOMPANY_BATCH_NUMBER AND a.AP_BU = b.AP_BU AND a.AR_BU = b.AR_BU AND substr(a.AP_GL_CODE_COMBINATION,1,4)=substr(b.AR_GL_CODE_COMBINATION,29,4) and a.AR_IC_TRX_NUMBER=b.AR_IC_TRX_NUMBER and  a.AP_IC_TRX_NUMBER=b.AP_IC_TRX_NUMBER)
            WHEN NOT MATCHED THEN
                INSERT (BATCH_ID,
                        extract_name_ap,
                        extract_name_ar,
                        AP_PAYMENT_DATE,
                        AP_PAYMENT_TYPE,
                        AP_PAYMENT_DESC,
                        AP_PAYMENT_CURRENCY,
                        AP_BU,
                        AP_BU_ID,
                        AP_VENDOR_NAME, 
                        AP_VENDOR_SITE,
                        AP_BANK_ACC,
                        AP_PAYMENT_METHOD,
                        AP_PAYMENT_PROCESS_PROFILE,
                        AP_PAYMENT_DOCUMENT,
                        AP_EXCHANGE_RATE, 
                        AP_EXCHANGE_RATE_TYPE, 
                        AP_EXCHANGE_RATE_DATE, 
                        AP_INVOICE_NUMBER, 
                        AP_LEDGER_NAME, 
                        AP_ACCOUNTING_CLASS, 
                        AP_INVOICE_DATE, 
                        AP_ACCOUNTING_DATE, 
                        AP_ENTERED_INVOICE_AMOUNT, 
                        AP_ACCOUNTED_INVOICE_AMOUNT, 
                        AP_GL_CODE_COMBINATION, 
                        AP_INTERCOMPANY_LEGAL_ENTITY, 
                        AP_INTERCOMPANY_TRANSACTION_TYPE, 
                        AP_INTERCOMPANY_BATCH_NUMBER,
                        AP_Discount_taken,
                        AP_installment_number,
                        AP_FUNCTIONAL_CURRENCY_CODE,
                        AP_NETTING_LEDGER,
                        AP_NETTING_FUN_CURR,
                          AP_IC_TRX_NUMBER,
                          AP_INVOICE_ID,
                          AR_BU,
                          AR_BU_ID,
                        AR_INVOICE_NUMBER, 
                        AR_LEDGER_NAME, 
                        AR_ACCOUNTING_CLASS, 
                        AR_INVOICE_DATE, 
                        AR_ACCOUNTING_DATE, 
                        AR_EXCHANGE_RATE, 
                        AR_EXCHANGE_RATE_TYPE, 
                        AR_EXCHANGE_RATE_DATE, 
                        AR_ENTERED_INVOICE_AMOUNT, 
                        AR_ACCOUNTED_INVOICE_AMOUNT, 
                        AR_GL_CODE_COMBINATION, 
                        AR_INTERCOMPANY_LEGAL_ENTITY, 
                        AR_INTERCOMPANY_TRANSACTION_TYPE, 
                        AR_INTERCOMPANY_BATCH_NUMBER, 
                        AR_CUST_NAME, 
                        AR_CUST_SITE, 
                        AR_ACCOUNT_NUMBER, 
                        AR_LOCKBOX_NUMBER, 
                      AR_LOCKBOX_ID,
                        AR_BANK_ORIGINATION_NUMBER, 
                        AR_INVOICE_CURRENCY_CODE, 
                        AR_FUNCTIONAL_CURRENCY_CODE,
                      AR_IC_TRX_NUMBER,
                      AR_INVOICE_ID,
                        ACCOUNTING_PERIOD) 
                VALUES (LV_BATCH_ID,
                        b.extract_name_ap,
                        b.extract_name_ar,
                        b.AP_INVOICE_DATE,
                        'Manual',
                        'Manual_Payment',
                        b.AP_INVOICE_CURRENCY_CODE,
                        b.AP_BU, 
                        b.AP_BU_ID,
                        b.AP_VENDOR_CUST_NAME, 
                        b.AP_VENDOR_CUST_SITE,
                        b.AP_BANK_ACC,
                       b.description, --'LSI',
                      b.tag, --'WSC Payment Process',
                      b.PAY_METHOD, --'IC CHECK'
                      b.AP_EXCHANGE_RATE, 
                      b.AP_EXCHANGE_RATE_TYPE, 
                        b.AP_EXCHANGE_RATE_DATE,
                        b.AP_INVOICE_NUMBER, 
                        b.AP_LEDGER_NAME, 
                        b.AP_ACCOUNTING_CLASS, 
                        b.AP_INVOICE_DATE, 
                        b.AP_ACCOUNTING_DATE,  
                        b.AP_ENTERED_INVOICE_AMOUNT, 
                        b.AP_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AP_GL_CODE_COMBINATION, 
                        b.AP_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AP_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AP_INTERCOMPANY_BATCH_NUMBER,
                        0,
                        1,
                        b.AP_FUNCTIONAL_CURRENCY_CODE,
                        b.AP_NETTING_LEDGER,
                        b.AP_NETTING_FUN_CURR,
                      b.AP_IC_TRX_NUMBER,
                       b.AP_INVOICE_ID,
                      b.AR_BU, 
                      b.AR_BU_ID,
                        b.AR_INVOICE_NUMBER, 
                        b.AR_LEDGER_NAME, 
                        b.AR_ACCOUNTING_CLASS, 
                        b.AR_INVOICE_DATE, 
                        b.AR_ACCOUNTING_DATE, 
                        b.AR_EXCHANGE_RATE, 
                        b.AR_EXCHANGE_RATE_TYPE, 
                        b.AR_EXCHANGE_RATE_DATE, 
                        b.AR_ENTERED_INVOICE_AMOUNT, 
                        b.AR_ACCOUNTED_INVOICE_AMOUNT, 
                        b.AR_GL_CODE_COMBINATION, 
                        b.AR_INTERCOMPANY_LEGAL_ENTITY, 
                        b.AR_INTERCOMPANY_TRANSACTION_TYPE, 
                        b.AR_INTERCOMPANY_BATCH_NUMBER, 
                        b.AR_VENDOR_CUST_NAME, 
                        b.AR_VENDOR_CUST_SITE, 
                        b.AR_ACCOUNT_NUMBER, 
                        b.AR_LOCKBOX_NUMBER, 
                      b.AR_LOCKBOX_ID,
                        b.AR_BANK_ORIGINATION_NUMBER, 
                        b.AR_INVOICE_CURRENCY_CODE, 
                        b.AR_FUNCTIONAL_CURRENCY_CODE,
                      b.AR_IC_TRX_NUMBER,
                      b.AR_INVOICE_ID,
                        b.ACCOUNTING_PERIOD);

        --updating LSI control table & AP_AR_MATCH with required info
        dbms_output.put_line('Matched inserted'||SQL%ROWCOUNT);

        LV_MATCH_COUNT1:= SQL%ROWCOUNT;
        IF SQL%ROWCOUNT >0 THEN
        L_FILE_NAME := 'ORACLELSI_CM_'||to_char(sysdate,'DDMMYYYYHH24MISS');


        update WSC_AHCS_LSI_AP_AR_T a
   set file_name=L_FILE_NAME,
      batch_id=LV_BATCH_ID,
      status='MATCHED',
      accounting_date=L_ACC_DATE
    where  EXISTS (SELECT 1 
                   FROM WSC_AHCS_LSI_AP_AR_MATCH_T
                   WHERE AP_INTERCOMPANY_BATCH_NUMBER=a.INTERCOMPANY_BATCH_NUMBER
                   AND (AP_IC_TRX_NUMBER=a.IC_TRX_NUMBER OR AR_IC_TRX_NUMBER=a.IC_TRX_NUMBER)
                   and BATCH_ID=LV_BATCH_ID)
            and batch_id is null;
         commit;          

            LV_CM_RUN_ID := WSC_LSI_AHCS_CREDIT_MEMO_INV_RUN_S.nextval;
          -- LV_MATCH_COUNT := SQL%ROWCOUNT;

           BEGIN
           SELECT
            LISTAGG(f_name, ',') WITHIN GROUP(ORDER BY f_name)
            INTO L_EXTRACT
        FROM
            (
                SELECT unique(extract_name_ap) f_name
                FROM
                    WSC_AHCS_LSI_AP_AR_MATCH_T
                WHERE
                    batch_id = LV_BATCH_ID
                UNION
                SELECT unique(extract_name_ar) f_name
                FROM
                    WSC_AHCS_LSI_AP_AR_MATCH_T
                WHERE
                    batch_id = LV_BATCH_ID
            );
            EXCEPTION
                WHEN OTHERS THEN 
                  L_EXTRACT := NULL;
            END;

BEGIN
select count(1) 
        INTO LV_AR_UNMATCH_CNT
        from wsc_ahcs_lsi_ap_ar_t 
        where  record_type='AR'
        and status is null;

        select count(1) 
        INTO LV_AP_UNMATCH_CNT
        from wsc_ahcs_lsi_ap_ar_t 
        where  record_type='AP' 
        and status is null;

  EXCEPTION
    WHEN OTHERS THEN
        LV_AR_UNMATCH_CNT := 0;
        LV_AP_UNMATCH_CNT := 0;
  END;      

             update WSC_AHCS_LSI_CONTROL_T
           set batch_id=LV_BATCH_ID,
              STATUS='MATCHED',
              --TO_BE_PROCESSED='Y',
              LAST_UPDATED_DATE=SYSDATE,
              all_extracts=L_EXTRACT,
              file_name=L_FILE_NAME,
              accounting_date=L_ACC_DATE,
              AR_UNMATCH_COUNT = LV_AR_UNMATCH_CNT,
                AP_UNMATCH_COUNT = LV_AP_UNMATCH_CNT,
              MATCHED_COUNT=LV_MATCH_COUNT1 ||'/'||LV_MATCH_COUNT1
           Where extract_name=P_FILE_NAME;

           commit;

           UPDATE WSC_AHCS_LSI_AP_AR_T A
           set EXTRACT_NAME=(SELECT EXTRACT_NAME 
                             FROM WSC_AHCS_LSI_CONTROL_T
                            WHERE BATCH_ID=A.BATCH_ID
                            AND BATCH_ID=LV_BATCH_ID)
           WHERE BATCH_ID=LV_BATCH_ID;     
           commit;

               INSERT INTO WSC_AHCS_INT_CONTROL_T
                                                   (BATCH_ID,
                                                   SOURCE_APPLICATION,
                                                   TARGET_APPLICATION,
                                                   FILE_NAME,
                                                   STATUS,
                                                   SOURCE_SYSTEM,
                                                   TARGET_SYSTEM,
                                                   CREATED_BY,
                                                   CREATED_DATE ,
                                                   LAST_UPDATED_BY,
                                                   LAST_UPDATED_DATE)
                                                   values (
                                                   LV_BATCH_ID,
                                                   'Oracle LSI',
                                                   'Oracle AHCS',
                                                   L_FILE_NAME,
                                                   'TRANSFORM SUCCESS',
                                                   'Oracle LSI'   ,
                                                   'Oracle ERP Cloud' ,
                                                   'FININT',
                                                   SYSDATE,
                                                   'FININT',
                                                   SYSDATE
                                                   );

           commit;

           update WSC_AHCS_LSI_AP_AR_MATCH_T
           set file_name=L_FILE_NAME
           where batch_id=LV_BATCH_ID;

           commit; 


        --performing for each logic on Credit memo data
        for i in cm_list(lv_batch_id)
        loop
        --CREATING INVOICE NUMBER
        SELECT LV_CM_RUN_ID||TO_CHAR(SYSTIMESTAMP,'hh24missff') into LV_INVOICE_ID from dual;




        --- Inserting into wsc_ahcs_lsi_ap_ar_t (inversing Enteered amount, LSI run date into acc_date and invoice_num = invoice_num||LSI
            insert into wsc_ahcs_lsi_ap_ar_t (
                RECORD_TYPE,
                BU,
                INVOICE_NUMBER,
                LEDGER_NAME,
                ACCOUNTING_CLASS,
                INVOICE_DATE,
                ACCOUNTING_DATE,
                EXCHANGE_RATE,
                EXCHANGE_RATE_TYPE,
                EXCHANGE_RATE_DATE,
                ENTERED_INVOICE_AMOUNT,
                ACCOUNTED_INVOICE_AMOUNT,
                GL_CODE_COMBINATION,
                INTERCOMPANY_LEGAL_ENTITY,
                INTERCOMPANY_TRANSACTION_TYPE,
                INTERCOMPANY_BATCH_NUMBER,
                VENDOR_CUST_NAME,
                VENDOR_CUST_SITE,
                ACCOUNT_NUMBER,
                LOCKBOX_NUMBER,
                BANK_ORIGINATION_NUMBER,
                INVOICE_CURRENCY_CODE,
                FUNCTIONAL_CURRENCY_CODE,
                CHECK_ID,
                PAYMENT_NUMBER,
                BANK_ACC,
                BATCH_ID,
                NETTING_LEDGER,
                NETTING_FUN_CURR,
                IC_TRX_NUMBER,
                INVOICE_ID,
                BU_ID,
                LOCKBOX_ID,
                FILE_NAME,
                ACCOUNTING_PERIOD,
                EXTRACT_NAME,
                INVOICE_STATUS,
                INVOICE_STATUS_DESC,
                STATUS
            )values(
                'AP',
                i.AP_BU,
                i.AP_INVOICE_NUMBER||'LSI',
                i.AP_LEDGER_NAME,
                i.AP_ACCOUNTING_CLASS,
                i.AP_INVOICE_DATE,
                L_ACC_DATE,
                i.AP_EXCHANGE_RATE,
                i.AP_EXCHANGE_RATE_TYPE,
                i.AP_EXCHANGE_RATE_DATE,
                -1*i.AP_ENTERED_INVOICE_AMOUNT,
                -1*i.AP_ACCOUNTED_INVOICE_AMOUNT,
                i.AP_GL_CODE_COMBINATION,
                i.AP_INTERCOMPANY_LEGAL_ENTITY,
                i.AP_INTERCOMPANY_TRANSACTION_TYPE,
                i.AP_INTERCOMPANY_BATCH_NUMBER,
                i.AP_VENDOR_NAME,
                i.AP_VENDOR_SITE,
                i.AR_ACCOUNT_NUMBER,
                i.AR_LOCKBOX_NUMBER,
                i.AR_BANK_ORIGINATION_NUMBER,
                i.AR_INVOICE_CURRENCY_CODE,
                i.AP_FUNCTIONAL_CURRENCY_CODE,
                NULL,
                i.AP_PAYMENT_NUM,
                i.AP_BANK_ACC,
                i.BATCH_ID,
                i.AP_NETTING_LEDGER,
                i.AP_NETTING_FUN_CURR,
                i.AP_IC_TRX_NUMBER,
                LV_INVOICE_ID, --/**bug fix INC2679428**/                i.AP_INVOICE_ID,
                i.AP_BU_ID,
                i.AR_LOCKBOX_ID,
                i.FILE_NAME,
                i.ACCOUNTING_PERIOD,
                i.EXTRACT_NAME_AP,
                'NEW',
                'Invoice for Credit Memo',
                'MATCHED'
            );
            commit;

            --INSERTING INTO FBDI TABLES OF INVOICES FOR CREADIT MEMO
            INSERT INTO WSC_AHCS_LSI_INVOICE_FOR_CM_H_T(
                INVOICE_ID,
                BUSINESS_UNIT,
                SOURCE,
                INVOICE_NUM,
                INVOICE_AMOUNT,
                INVOICE_DATE,
                SUP_NAME,
                SUP_SITE,
                INVOICE_CURRENCYA,
                PAYMENT_CURRENCY,
                DESCRIPTION,
                INVOICE_TYPE,
                LEGAL_ENTITY, 
                PAYMENT_TERMS,
                TERMS_DATE,
                ACCOUNTING_DATE,
                PAYMENT_METHOD,
                CONV_RATE_TYPE,
                CONV_DATE,
                LIABILITY_COMBINATION,
                BATCH_ID,
                LEGAL_ENTITY_ID,
                LEDGER_ID,
                LEDGER_NAME,
                BU_ID,
                INTERCOMPANY_BATCH_NUMBER,
                IC_TRX_NUMBER
            )VALUES (
                LV_INVOICE_ID,
                i.AP_BU,
                'LSI',
                i.AP_INVOICE_NUMBER||'LSI',
                -1*i.AP_ENTERED_INVOICE_AMOUNT,
                to_char(i.AP_INVOICE_DATE,'yyyy/mm/dd'),
                i.AP_VENDOR_NAME,
                i.AP_VENDOR_SITE,
                i.AP_PAYMENT_CURRENCY,
                i.AP_PAYMENT_CURRENCY,
                i.AP_INTERCOMPANY_BATCH_NUMBER||','||i.AP_IC_TRX_NUMBER, --'LSI INV CC MEMO : '||i.AP_INVOICE_NUMBER,
                'STANDARD',
                i.LEGAL_ENTITY_NAME,
                'Net 30',
                to_char(i.AP_INVOICE_DATE,'yyyy/mm/dd'),
                to_char(L_ACC_DATE,'yyyy/mm/dd'),
                replace(i.DESCRIPTION,' ','_'), 
                i.AP_EXCHANGE_RATE_TYPE,
                to_char(i.AP_EXCHANGE_RATE_DATE,'yyyy/mm/dd'),
                i.AP_GL_CODE_COMBINATION,
                i.batch_id,
                i.LEGAL_ENTITY_ID,
                i.LEDGER_ID,
                i.LEDGER_NAME,
                i.AP_BU_ID,
                i.AP_INTERCOMPANY_BATCH_NUMBER,
                i.AP_IC_TRX_NUMBER
            );

            INSERT INTO WSC_AHCS_LSI_INVOICE_FOR_CM_L_T(
                INVOICE_ID,
                LINE_NUM,
                LINE_TYPE,
                AMOUNT,
                DISTRIBUTION_COMBINATION,
                ACCOUNTING_DATE,
                BATCH_ID
            )values(
                LV_INVOICE_ID,
                '1',
                'ITEM',
                i.AP_ENTERED_INVOICE_AMOUNT*-1,
                regexp_substr(i.AP_GL_CODE_COMBINATION, '[^.]+', 1, 1)||'.4120.111384.0000.00000.0000.0000.0000.0000',
                to_char(L_ACC_DATE,'yyyy/mm/dd'),
                I.BATCH_ID
            );

            COMMIT;
        end loop;
    ELSE
        UPDATE WSC_AHCS_LSI_CONTROL_T
        SET STATUS='NOT MATCHED'
        WHERE EXTRACT_NAME=P_FILE_NAME;
        commit;
    end if;


    delete from wsc_ahcs_lsi_ap_ar_match_t where batch_id = lv_batch_id;
    commit;

   	  EXCEPTION
				WHEN OTHERS THEN

			 update WSC_AHCS_LSI_CONTROL_T
               		set STATUS='NOT MATCHED',
                  	TO_BE_PROCESSED='N',
                  	LAST_UPDATED_DATE=SYSDATE
               		Where extract_name=P_FILE_NAME; 
                   	commit;

				  LV_ERROR_MSG := substr(SQLERRM,1,200);

					insert into WSC_AHCS_LSI_ERR_T
							  (FILE_NAME ,
								ERROR_CODE ,
								ERROR_MSG,
								CREATED_DATE ,
								LAST_UPDATED_BY, 
								LAST_UPDATED_DATE ,
								ERROR_FILE_SENT_FLAG, 
								CREATED_BY ,
								BATCH_ID,
								TO_BE_PROCESSED)
								values
								(P_FILE_NAME ,
								'AR Records not merged in WSC_AHCS_LSI_AR_T' ,
								LV_ERROR_MSG||':- AR Records not populated for batch id'||LV_BATCH_ID,
								SYSDATE ,
								'FININT', 
								SYSDATE ,
								'N', 
								'FININT' ,
								LV_BATCH_ID,
								'Y');
							 Commit;       


    end;

    PROCEDURE wsc_ahcs_lsi_process_after_invoice_callback(P_REQ_ID NUMBER,P_SUBMIT_ID NUMBER)
    AS

		cursor success_status_records(p_submit_id number) is
		select * from wsc_lsi_credit_memo_invoice_t 
        where load_request_id = p_submit_id
        and status = 'PROCESSED';
--MANISH
        Cursor  credit_memo_pay(P_BATCH_ID NUMBER) IS 
               SELECT WSC_AP_PAYMENT_LSI_SEQ.NEXTVAL PAYNUM,
                PAYMENT_CURRENCY,
                BU, 
                BANK_ACC,
                VENDOR_NAME, 
                VENDOR_SITE,
                EXCHANGE_RATE_TYPE,
                BATCH_ID FROM(
                SELECT 
                AP.PAYMENT_CURRENCY,
                AP.BU, 
                AP.BANK_ACC,
                AP.VENDOR_NAME, 
                AP.VENDOR_SITE,
                AP.EXCHANGE_RATE_TYPE,
                AP.BATCH_ID
                FROM WSC_AHCS_LSI_AP_T AP
                WHERE (AP.STATUS IS NULL OR AP.STATUS='ERROR')
                AND BATCH_ID=P_BATCH_ID
                AND NOT EXISTS (select 1 from wsc_ahcs_lsi_ap_t where intercompany_batch_number = ap.intercompany_batch_number
            and IC_TRX_NUMBER = ap.IC_TRX_NUMBER and PAYMENT_NUM is not null)
                Group by AP.PAYMENT_CURRENCY,
                 AP.BU, 
                AP.BANK_ACC,
                AP.VENDOR_NAME, 
                AP.VENDOR_SITE,
                AP.EXCHANGE_RATE_TYPE,
                AP.BATCH_ID);

		LV_BATCH_ID NUMBER;
        L_ACC_DATE DATE;
		lv_count_new_inv number;
		lv_count_pro_inv number;
		lv_count_all_inv number;
        LV_ERROR_MSG VARCHAR2(250);
    BEGIN
        select distinct (batch_id) into LV_BATCH_ID from wsc_ahcs_lsi_ap_ar_t where INVOICE_FBDI_SUBMIT_ID = p_submit_id;
        select accounting_date into L_ACC_DATE from WSC_AHCS_LSI_CONTROL_T where batch_id = LV_BATCH_ID;

        for i in success_status_records(p_submit_id)
		loop
			dbms_output.put_line(i.invoice_num);
            --inserting 2 records in ap_t (original & inverse) 
			insert into wsc_ahcs_lsi_ap_t(
				BU,
				VENDOR_NAME,
				VENDOR_SITE,
				BANK_ACC,
				EXCHANGE_RATE,
				EXCHANGE_RATE_TYPE,
				EXCHANGE_RATE_DATE,
				INVOICE_NUMBER,
				LEDGER_NAME,
				ACCOUNTING_CLASS,
				INVOICE_DATE,
				ACCOUNTING_DATE,
				ENTERED_INVOICE_AMOUNT,
				ACCOUNTED_INVOICE_AMOUNT,
				GL_CODE_COMBINATION,
				INTERCOMPANY_LEGAL_ENTITY,
				INTERCOMPANY_TRANSACTION_TYPE,
				INTERCOMPANY_BATCH_NUMBER,
				FUNCTIONAL_CURRENCY_CODE,
				NETTING_LEDGER,
				NETTING_FUN_CURR,
				IC_TRX_NUMBER,
				INVOICE_ID,
				CHECK_ID,
				BATCH_ID,
				STATUS,
				FILE_NAME,
				ACCOUNTING_PERIOD,
				TO_BE_PROCESSED,
                PAYMENT_TYPE,
                PAYMENT_CURRENCY,
                PAYMENT_DATE,
                PAYMENT_DESC,
                PAYMENT_METHOD,
                PAYMENT_PROCESS_PROFILE,
                PAYMENT_DOCUMENT, 
                DISCOUNT_TAKEN,
                INSTALLMENT_NUMBER

			) select 
				BU,
				VENDOR_CUST_NAME, 
				VENDOR_CUST_SITE,
				BANK_ACC,
				EXCHANGE_RATE,
				decode(EXCHANGE_RATE_TYPE,'Month End Rate','Actual Rate','Month Average Rate','Actual Rate',EXCHANGE_RATE_TYPE),
				EXCHANGE_RATE_DATE,
				replace(INVOICE_NUMBER,'LSI'),
				a.LEDGER_NAME,
				ACCOUNTING_CLASS,
				INVOICE_DATE,
				ACCOUNTING_DATE,
				-1* ENTERED_INVOICE_AMOUNT,
				-1* ACCOUNTED_INVOICE_AMOUNT,
				GL_CODE_COMBINATION,
				INTERCOMPANY_LEGAL_ENTITY,
				INTERCOMPANY_TRANSACTION_TYPE,
				INTERCOMPANY_BATCH_NUMBER,
				FUNCTIONAL_CURRENCY_CODE,
				NETTING_LEDGER,
				NETTING_FUN_CURR,
				IC_TRX_NUMBER,
				i.INVOICE_ID,
				CHECK_ID,
				lv_batch_id,
				null,
				FILE_NAME,
				ACCOUNTING_PERIOD,
				'Y',
                'Manual',
                INVOICE_CURRENCY_CODE,
                L_ACC_DATE,
                'BU :'|| BU||', PAAS Batch_ID :'||LV_BATCH_ID,
                lookup.description,
                lookup.tag,
                lookup.ledger_name, --Read as Payment Method 
                0,
                1
				from wsc_ahcs_lsi_ap_ar_t a,wsc_ahcs_lsi_lookup_t lookup
				where INVOICE_NUMBER = i.INVOICE_NUM 
                and VENDOR_CUST_NAME=i.VENDOR_NAME 
                and VENDOR_CUST_SITE = i.VENDOR_SITE_CODE  
                and INVOICE_FBDI_SUBMIT_ID = p_submit_id 
                and record_type='AP'
                and batch_id = lv_batch_id
                AND lookup.lookup_type = 'WSC_LSI_BANK_DETAILS' 
                and lookup.attribute1 = INTERCOMPANY_LEGAL_ENTITY;

                dbms_output.put_line('INSERTING 2ND LINE');

                insert into wsc_ahcs_lsi_ap_t(
				BU,
				VENDOR_NAME,
				VENDOR_SITE,
				BANK_ACC,
				EXCHANGE_RATE,
				EXCHANGE_RATE_TYPE,
				EXCHANGE_RATE_DATE,
				INVOICE_NUMBER,
				LEDGER_NAME,
				ACCOUNTING_CLASS,
				INVOICE_DATE,
				ACCOUNTING_DATE,
				ENTERED_INVOICE_AMOUNT,
				ACCOUNTED_INVOICE_AMOUNT,
				GL_CODE_COMBINATION,
				INTERCOMPANY_LEGAL_ENTITY,
				INTERCOMPANY_TRANSACTION_TYPE,
				INTERCOMPANY_BATCH_NUMBER,
				FUNCTIONAL_CURRENCY_CODE,
				NETTING_LEDGER,
				NETTING_FUN_CURR,
				IC_TRX_NUMBER,
				INVOICE_ID,
				CHECK_ID,
				BATCH_ID,
				STATUS,
				FILE_NAME,
				ACCOUNTING_PERIOD,
				TO_BE_PROCESSED,
                PAYMENT_TYPE,
                PAYMENT_CURRENCY,
                PAYMENT_DATE,
                PAYMENT_DESC,
                PAYMENT_METHOD,
                PAYMENT_PROCESS_PROFILE,
                PAYMENT_DOCUMENT,
                DISCOUNT_TAKEN,
                INSTALLMENT_NUMBER

			) select 
				BU,
				VENDOR_CUST_NAME, 
				VENDOR_CUST_SITE,
				BANK_ACC,
				EXCHANGE_RATE,
				decode(EXCHANGE_RATE_TYPE,'Month End Rate','Actual Rate','Month Average Rate','Actual Rate',EXCHANGE_RATE_TYPE),
				EXCHANGE_RATE_DATE,
				INVOICE_NUMBER,
				a.LEDGER_NAME,
				ACCOUNTING_CLASS,
				INVOICE_DATE,
				ACCOUNTING_DATE,
				ENTERED_INVOICE_AMOUNT,
				ACCOUNTED_INVOICE_AMOUNT,
				GL_CODE_COMBINATION,
				INTERCOMPANY_LEGAL_ENTITY,
				INTERCOMPANY_TRANSACTION_TYPE,
				INTERCOMPANY_BATCH_NUMBER,
				FUNCTIONAL_CURRENCY_CODE,
				NETTING_LEDGER,
				NETTING_FUN_CURR,
				IC_TRX_NUMBER,
				i.INVOICE_ID,
				CHECK_ID,
				BATCH_ID,
				null,
				FILE_NAME,
				ACCOUNTING_PERIOD,
				'Y',
                'Manual',
                INVOICE_CURRENCY_CODE,
                L_ACC_DATE,
                'BU :'|| BU||', PAAS Batch_ID :'||LV_BATCH_ID,
                lookup.description,
                lookup.tag,
                lookup.ledger_name,
                0,
                1
				from wsc_ahcs_lsi_ap_ar_t a,wsc_ahcs_lsi_lookup_t lookup 
				where INVOICE_NUMBER = i.INVOICE_NUM 
                and VENDOR_CUST_NAME=i.VENDOR_NAME 
                and VENDOR_CUST_SITE = i.VENDOR_SITE_CODE 
                and INVOICE_FBDI_SUBMIT_ID = p_submit_id 
                and record_type='AP'
                and batch_id = lv_batch_id
                and lookup.lookup_type = 'WSC_LSI_BANK_DETAILS' 
                and lookup.attribute1 = INTERCOMPANY_LEGAL_ENTITY;

				commit;
                dbms_output.put_line('UPDATING STATUS');
				-- updating status as success in ap_ar_t for the records as success
				update wsc_ahcs_lsi_ap_ar_t set invoice_status = 'PROCESSED',invoice_status_desc = 'PROCESSED'
				where INVOICE_NUMBER = i.INVOICE_NUM 
					and VENDOR_CUST_NAME=i.VENDOR_NAME 
					and VENDOR_CUST_SITE = i.VENDOR_SITE_CODE
                    and BU=i.operating_unit
					and INVOICE_FBDI_SUBMIT_ID = p_submit_id
                    and record_type='AP'
                     and batch_id = lv_batch_id;

                     commit;

                     dbms_output.put_line('UPDATED STATUS');
		end loop;

    begin
        delete from wsc_lsi_credit_memo_invoice_t where LOAD_REQUEST_ID = p_submit_id;
        commit;
        exception
        when others then
            null;
        end;
		--update status as failed for all other with same FBDI_PROCESS_ID 
		update wsc_ahcs_lsi_ap_ar_t set invoice_status = 'REJECTED',invoice_status_desc = 'REJECTED'
		where invoice_status='NEW' 
			and INVOICE_FBDI_SUBMIT_ID = p_submit_id 
            and record_type='AP'
            and batch_id = lv_batch_id;
		 commit;

         merge into WSC_AHCS_LSI_INVOICE_FOR_CM_H_T h using (
Select invoice_status,INVOICE_NUMBER,VENDOR_CUST_NAME,VENDOR_CUST_SITE, BU, batch_id
            FROM wsc_ahcs_lsi_ap_ar_t
                    where invoice_status in ('REJECTED','PROCESSED')
                    and INVOICE_FBDI_SUBMIT_ID = p_submit_id
                     and batch_id = lv_batch_id
                     and record_type='AP'
)a on (a.INVOICE_NUMBER = h.INVOICE_NUM and a.VENDOR_CUST_NAME= h.SUP_NAME 	and a.VENDOR_CUST_SITE = h.SUP_SITE 
					and a.BU = h.BUSINESS_UNIT
                    and a.batch_id=h.batch_id)
 WHEN MATCHED THEN 
			   UPDATE SET INV_CREATION_STATUS = a.invoice_status;

                     commit;   

		-- update payment_num in ap_t on group by
        For r_credit_memo_pay in credit_memo_pay(LV_BATCH_ID) LOOP

        update wsc_ahcs_lsi_ap_t a
        SET PAYMENT_NUM=r_credit_memo_pay.PAYNUM
        WHERE a.PAYMENT_CURRENCY =   r_credit_memo_pay.PAYMENT_CURRENCY
			AND a.BU =                 r_credit_memo_pay.BU
			AND a.BANK_ACC =           r_credit_memo_pay.BANK_ACC
			AND a.VENDOR_NAME =        r_credit_memo_pay.VENDOR_NAME 
			AND a.VENDOR_SITE =        r_credit_memo_pay.VENDOR_SITE
			AND NVL(a.EXCHANGE_RATE_TYPE,1) = NVL(r_credit_memo_pay.EXCHANGE_RATE_TYPE,1)
            AND (a.status is null or a.status = 'ERROR')
			AND a.BATCH_ID = r_credit_memo_pay.BATCH_ID
			AND a.batch_id = LV_BATCH_ID
            ;

         END LOOP;

         commit;

		--merge ar_t // confirm with manish
			merge into WSC_AHCS_LSI_AP_AR_T a
			USING (Select PAYMENT_NUM,
						   invoice_number,
						   BU,
						   File_Name,
						   vendor_name,
						   vendor_site,
						   accounting_period,
						   intercompany_batch_number,
						   ic_trx_number
					FROM WSC_AHCS_LSI_AP_T
					WHERE (STATUS IS NULL OR STATUS='ERROR')
					AND BATCH_ID=LV_BATCH_ID) b
			   ON  (a.invoice_number=b.invoice_number and a.BU=b.BU and a.VENDOR_CUST_NAME=b.vendor_name and a.VENDOR_CUST_SITE=b.vendor_site 
			   and a.record_type='AP' and a.intercompany_batch_number=b.intercompany_batch_number and a.ic_trx_number=b.ic_trx_number)    
			 WHEN MATCHED THEN 
			   UPDATE SET a.payment_number= b.payment_num,
						  a.accounting_period=b.accounting_period,
						  a.file_name=b.file_name ;


			BEGIN
                     MERGE INTO WSC_AHCS_LSI_AR_T  a
						 USING ( SELECT  AR.BU,
							AR.FILE_NAME,
														   AR.BU_ID,
							REPLACE(AR.INVOICE_NUMBER,'LSI') INVOICE_NUMBER, 
							AR.LEDGER_NAME, 
							AR.ACCOUNTING_CLASS, 
							AR.INVOICE_DATE, 
							L_ACC_DATE ACCOUNTING_DATE,  ----L_ACC_DATE 
							AR.EXCHANGE_RATE, 
							AR.EXCHANGE_RATE_TYPE, 
							AR.EXCHANGE_RATE_DATE, 
							AR.ENTERED_INVOICE_AMOUNT, 
							AR.ACCOUNTED_INVOICE_AMOUNT, 
							AR.GL_CODE_COMBINATION, 
							AR.INTERCOMPANY_LEGAL_ENTITY, 
							AR.INTERCOMPANY_TRANSACTION_TYPE, 
							AR.INTERCOMPANY_BATCH_NUMBER, 
							AR.VENDOR_CUST_NAME, 
							AR.VENDOR_CUST_SITE, 
							AR.ACCOUNT_NUMBER, 
							AR.LOCKBOX_NUMBER,
																	  AR.LOCKBOX_ID,     
							AR.BANK_ORIGINATION_NUMBER, 
							AR.INVOICE_CURRENCY_CODE, 
							AR.FUNCTIONAL_CURRENCY_CODE,
																	  AR.IC_TRX_NUMBER,
																	  AR.INVOICE_ID,
							ar.payment_number,
							to_char(L_ACC_DATE,'MON-YYYY') ACCOUNTING_PERIOD
							FROM WSC_AHCS_LSI_AP_AR_T AR
							WHERE 1=1
							AND batch_id=LV_BATCH_ID
                            and ar.status = 'MATCHED'
                            and ar.record_type='AR'
                            AND EXISTS (SELECT 1 FROM WSC_AHCS_LSI_AP_AR_T
                                        WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
                                        AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER
                                        AND invoice_number like '%LSI'
                                        AND INVOICE_STATUS in ('PROCESSED'))
							AND NOT EXISTS (Select 1 FROM WSC_AHCS_LSI_AR_T
											WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
											AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER)
							AND EXISTS (Select 1 FROM WSC_AHCS_LSI_AP_T
											WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
											AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER))  b
						ON (a.INTERCOMPANY_BATCH_NUMBER = b.INTERCOMPANY_BATCH_NUMBER AND a.IC_TRX_NUMBER = b.IC_TRX_NUMBER AND a.BU=b.BU AND a.CUST_NAME=b.vendor_CUST_NAME AND a.CUST_SITE=b.vendor_CUST_SITE)
						WHEN NOT MATCHED THEN
							INSERT (BATCH_ID,
									FILE_NAME,
									BU,
																								  BU_ID,
									INVOICE_NUMBER, 
									LEDGER_NAME, 
									ACCOUNTING_CLASS, 
									INVOICE_DATE, 
									ACCOUNTING_DATE, 
									EXCHANGE_RATE, 
									EXCHANGE_RATE_TYPE, 
									EXCHANGE_RATE_DATE, 
									ENTERED_INVOICE_AMOUNT, 
									ACCOUNTED_INVOICE_AMOUNT, 
									GL_CODE_COMBINATION, 
									INTERCOMPANY_LEGAL_ENTITY, 
									INTERCOMPANY_TRANSACTION_TYPE, 
									INTERCOMPANY_BATCH_NUMBER, 
									CUST_NAME, 
									CUST_SITE, 
									ACCOUNT_NUMBER, 
									LOCKBOX_NUMBER, 
																								  LOCKBOX_ID,
									BANK_ORIGINATION_NUMBER, 
									INVOICE_CURRENCY_CODE, 
									FUNCTIONAL_CURRENCY_CODE,
																								  IC_TRX_NUMBER,
																								  INVOICE_ID,
									AP_PAYMENT_NUM,
									ACCOUNTING_PERIOD,
									TO_BE_REPROCESSED) 
							VALUES (LV_BATCH_ID,
									b.FILE_NAME, 
									b.BU, 
																								  b.BU_ID,
									b.INVOICE_NUMBER, 
									b.LEDGER_NAME, 
									b.ACCOUNTING_CLASS, 
									b.INVOICE_DATE, 
									L_ACC_DATE,
									b.EXCHANGE_RATE, 
									b.EXCHANGE_RATE_TYPE, 
									b.EXCHANGE_RATE_DATE, 
									b.ENTERED_INVOICE_AMOUNT, 
									b.ACCOUNTED_INVOICE_AMOUNT, 
									b.GL_CODE_COMBINATION, 
									b.INTERCOMPANY_LEGAL_ENTITY, 
									b.INTERCOMPANY_TRANSACTION_TYPE, 
									b.INTERCOMPANY_BATCH_NUMBER, 
									b.vendor_CUST_NAME, 
									b.vendor_CUST_SITE, 
									b.ACCOUNT_NUMBER, 
									b.LOCKBOX_NUMBER, 
																								  b.LOCKBOX_ID,
									b.BANK_ORIGINATION_NUMBER, 
									b.INVOICE_CURRENCY_CODE, 
									b.FUNCTIONAL_CURRENCY_CODE,
																								  b.IC_TRX_NUMBER,
																								  b.INVOICE_ID,
									b.PAYMENT_NUMBER,
									b.ACCOUNTING_PERIOD,
									'N');

    								commit;

					/*		   MERGE INTO WSC_AHCS_LSI_AR_T  a
						 USING ( SELECT  AR.BU,
							AR.FILE_NAME,
														   AR.BU_ID,
							AR.INVOICE_NUMBER, 
							AR.LEDGER_NAME, 
							AR.ACCOUNTING_CLASS, 
							AR.INVOICE_DATE, 
							L_ACC_DATE ACCOUNTING_DATE,  ----L_ACC_DATE 
							AR.EXCHANGE_RATE, 
							AR.EXCHANGE_RATE_TYPE, 
							AR.EXCHANGE_RATE_DATE, 
							AR.ENTERED_INVOICE_AMOUNT, 
							AR.ACCOUNTED_INVOICE_AMOUNT, 
							AR.GL_CODE_COMBINATION, 
							AR.INTERCOMPANY_LEGAL_ENTITY, 
							AR.INTERCOMPANY_TRANSACTION_TYPE, 
							AR.INTERCOMPANY_BATCH_NUMBER, 
							AR.VENDOR_CUST_NAME, 
							AR.VENDOR_CUST_SITE, 
							AR.ACCOUNT_NUMBER, 
							AR.LOCKBOX_NUMBER,
																	  AR.LOCKBOX_ID,     
							AR.BANK_ORIGINATION_NUMBER, 
							AR.INVOICE_CURRENCY_CODE, 
							AR.FUNCTIONAL_CURRENCY_CODE,
																	  AR.IC_TRX_NUMBER,
																	  AR.INVOICE_ID,
							to_char(L_ACC_DATE,'MON-YYYY') ACCOUNTING_PERIOD
							FROM WSC_AHCS_LSI_AP_AR_T AR
							WHERE 1=1
							AND AR.RECORD_TYPE='AR'
							AND batch_id=LV_BATCH_ID
							AND AR.ENTERED_INVOICE_AMOUNT<0
							AND (AR.STATUS IS NULL or AR.STATUS='ERROR')
							AND NOT EXISTS (Select 1 FROM WSC_AHCS_LSI_AR_T
											WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
											AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER)
							AND EXISTS (Select 1 FROM WSC_AHCS_LSI_AP_T
											WHERE INTERCOMPANY_BATCH_NUMBER=AR.INTERCOMPANY_BATCH_NUMBER
											AND IC_TRX_NUMBER=AR.IC_TRX_NUMBER)) b
						ON (a.INVOICE_NUMBER = b.INVOICE_NUMBER AND a.BU=b.BU AND a.CUST_NAME=b.VENDOR_CUST_NAME AND a.CUST_SITE=b.VENDOR_CUST_SITE)
						WHEN NOT MATCHED THEN
							INSERT (BATCH_ID,
									FILE_NAME,
									BU,
																								  BU_ID,
									INVOICE_NUMBER, 
									LEDGER_NAME, 
									ACCOUNTING_CLASS, 
									INVOICE_DATE, 
									ACCOUNTING_DATE, 
									EXCHANGE_RATE, 
									EXCHANGE_RATE_TYPE, 
									EXCHANGE_RATE_DATE, 
									ENTERED_INVOICE_AMOUNT, 
									ACCOUNTED_INVOICE_AMOUNT, 
									GL_CODE_COMBINATION, 
									INTERCOMPANY_LEGAL_ENTITY, 
									INTERCOMPANY_TRANSACTION_TYPE, 
									INTERCOMPANY_BATCH_NUMBER, 
									CUST_NAME, 
									CUST_SITE, 
									ACCOUNT_NUMBER, 
									LOCKBOX_NUMBER, 
																								  LOCKBOX_ID,
									BANK_ORIGINATION_NUMBER, 
									INVOICE_CURRENCY_CODE, 
									FUNCTIONAL_CURRENCY_CODE,
																								  IC_TRX_NUMBER,
																								  INVOICE_ID,
									ACCOUNTING_PERIOD,
									TO_BE_REPROCESSED) 
							VALUES (LV_BATCH_ID,
									b.FILE_NAME, 
									b.BU, 
									b.BU_ID,
									b.INVOICE_NUMBER, 
									b.LEDGER_NAME, 
									b.ACCOUNTING_CLASS, 
									b.INVOICE_DATE, 
									L_ACC_DATE,
									b.EXCHANGE_RATE, 
									b.EXCHANGE_RATE_TYPE, 
									b.EXCHANGE_RATE_DATE, 
									b.ENTERED_INVOICE_AMOUNT, 
									b.ACCOUNTED_INVOICE_AMOUNT, 
									b.GL_CODE_COMBINATION, 
									b.INTERCOMPANY_LEGAL_ENTITY, 
									b.INTERCOMPANY_TRANSACTION_TYPE, 
									b.INTERCOMPANY_BATCH_NUMBER, 
									b.VENDOR_CUST_NAME, 
									b.VENDOR_CUST_SITE, 
									b.ACCOUNT_NUMBER, 
									b.LOCKBOX_NUMBER, 
									b.LOCKBOX_ID,
									b.BANK_ORIGINATION_NUMBER, 
									b.INVOICE_CURRENCY_CODE, 
									b.FUNCTIONAL_CURRENCY_CODE,
									b.IC_TRX_NUMBER,
									b.INVOICE_ID,
									b.ACCOUNTING_PERIOD,
									'N');    */
									commit;

						WSC_ASYNC_LSI_FBDI_PROCESS_P(LV_BATCH_ID);   

			  select count(case when invoice_status = 'NEW' then 1 end), count(case when invoice_status = 'PROCESSED' then 1 end), 
              count(case when INVOICE_NUMBER LIKE '%LSI' then 1 end) into lv_count_new_inv, lv_count_pro_inv, lv_count_all_inv from wsc_ahcs_lsi_ap_ar_t 
              where batch_id = LV_BATCH_ID;
			  if lv_count_new_inv = 0
			  THEN
				update WSC_AHCS_LSI_CONTROL_T
			   set 
					--TO_BE_PROCESSED='Y',
                    TO_BE_PROCESSED=(case when lv_count_pro_inv > 0  then 'Y' END),
					INV_CREATE_COUNT = lv_count_pro_inv, 
					INV_CREATE_STATUS = (case when lv_count_all_inv = lv_count_pro_inv  then 'SUCCESS' 
                                            when lv_count_pro_inv = 0 then 'ERROR'
											when lv_count_all_inv > lv_count_pro_inv then 'WARNING' END)
				Where batch_id=LV_BATCH_ID;
				commit;



			  end if;


			  EXCEPTION
				WHEN OTHERS THEN

				  LV_ERROR_MSG := substr(SQLERRM,1,200);

					insert into WSC_AHCS_LSI_ERR_T
							  (FILE_NAME ,
								ERROR_CODE ,
								ERROR_MSG,
								CREATED_DATE ,
								LAST_UPDATED_BY, 
								LAST_UPDATED_DATE ,
								ERROR_FILE_SENT_FLAG, 
								CREATED_BY ,
								BATCH_ID,
								TO_BE_PROCESSED)
								values
								(NULL, --P_FILE_NAME ,
								'AR Records not merged in WSC_AHCS_LSI_AR_T' ,
								LV_ERROR_MSG||':- AR Records not populated for batch id'||LV_BATCH_ID,
								SYSDATE ,
								'FININT', 
								SYSDATE ,
								'N', 
								'FININT' ,
								LV_BATCH_ID,
								'Y');
							 Commit;       

						wsc_ahcs_int_error_logging.error_logging(LV_BATCH_ID, 'EXT041'
																			 || '_'
																			 || 'LSI', 'Oracle LSI', 'Error in AP-AR Matching Process-'||sqlerrm);

						END;

    END;


     PROCEDURE wsc_ahcs_lsi_dump_status2credit_memo_t_p(cm_inv_status_dump wsc_lsi_credit_memo_invoice_type_table)
     AS
      BEGIN

        FORALL i in 1..cm_inv_status_dump.count
            INSERT INTO wsc_lsi_credit_memo_invoice_t(invoice_id,invoice_num,vendor_name,vendor_site_code,operating_unit,status,legal_entity_name,load_request_id )
            VALUES (
                    cm_inv_status_dump(i).invoice_id,
                    cm_inv_status_dump(i).invoice_num,
                    cm_inv_status_dump(i).vendor_name,
                    cm_inv_status_dump(i).vendor_site_code,
                    cm_inv_status_dump(i).operating_unit,
                    cm_inv_status_dump(i).status,
                    cm_inv_status_dump(i).legal_entity_name,
                    cm_inv_status_dump(i).load_request_id
            );
            COMMIT;
     END;


     PROCEDURE wsc_ahcs_lsi_dump_cm_validate_t_p(cm_val_status_dump wsc_ahcs_lsi_cm_val_t_TYPE_TABLE)
     AS
	 lv_count_new_val number;
	 lv_count_pro_val number;
	 lv_count_all_val number;
	 lv_batch_id varchar2(100);
     BEGIN
        FOR i in 1..cm_val_status_dump.count
        Loop
            INSERT INTO wsc_ahcs_lsi_cm_validate_t(INVOICE_NUM ,VENDOR_NAME ,VENDOR_SITE_CODE ,BU ,APPROVAL_STATUS ,REQUEST_ID )
            VALUES (
                    cm_val_status_dump(i).invoice_num,
                    cm_val_status_dump(i).vendor_name,
                    cm_val_status_dump(i).vendor_site_code,
                    cm_val_status_dump(i).bu,
                    cm_val_status_dump(i).APPROVAL_STATUS,
                    cm_val_status_dump(i).REQUEST_ID
            );
            COMMIT;

			update wsc_ahcs_lsi_ap_ar_t set INVOICE_VALIDATION_STATUS = cm_val_status_dump(i).APPROVAL_STATUS where INVOICE_NUMBER = cm_val_status_dump(i).invoice_num and VENDOR_CUST_NAME = cm_val_status_dump(i).vendor_name
			and VENDOR_CUST_SITE = cm_val_status_dump(i).vendor_site_code and BU = cm_val_status_dump(i).bu and INVOICE_FBDI_SUBMIT_ID = cm_val_status_dump(i).REQUEST_ID;
            commit;
        END LOOP;

		select distinct batch_id into lv_batch_id from wsc_ahcs_lsi_ap_ar_t where INVOICE_FBDI_SUBMIT_ID = cm_val_status_dump(1).REQUEST_ID;
		select count(case when INVOICE_VALIDATION_STATUS IS NULL AND INVOICE_NUMBER LIKE '%LSI' then 1 end), count(case when INVOICE_VALIDATION_STATUS = 'APPROVED'  then 1 end), 
              count(case when INVOICE_NUMBER LIKE '%LSI' then 1 end) into lv_count_new_val, lv_count_pro_val, lv_count_all_val from wsc_ahcs_lsi_ap_ar_t 
              where batch_id = lv_batch_id;
			  if lv_count_new_val = 0
			  THEN
				update WSC_AHCS_LSI_CONTROL_T
			   set 

					INV_VALIDATION_COUNT = lv_count_pro_val, 
					INV_VALIDATION_STATUS = (case when lv_count_all_val = lv_count_pro_val  then 'SUCCESS' 
											when lv_count_pro_val = 0 then 'ERROR'
                                            when lv_count_all_val > lv_count_pro_val then 'WARNING' END)
				Where batch_id=LV_BATCH_ID;
				commit;

            	--delete from wsc_ahcs_lsi_ap_ar_match_t where batch_id = lv_batch_id;

			  end if;
     END;

 PROCEDURE wsc_ahcs_lsin_grp_id_upd_p (
        in_grp_id IN NUMBER
    ) AS

       lv_grp_id        NUMBER := in_grp_id;
        err_msg          VARCHAR2(4000);
        CURSOR lsin_grp_data_fetch_cur (
            p_grp_id NUMBER
        ) IS
         SELECT DISTINCT
            c.batch_id           batch_id,
            c.file_name          file_name,
            a.ledger_name        ledger_name,
            c.source_application source_application,
            a.source_system      source_system,
            c.status             status
        FROM
            wsc_ahcs_int_control_t     c,
            WSC_AHCS_LSI_CONTROL_T     lsic,
            wsc_ahcs_lsi_netting_entry_headers_t a
        WHERE
                a.batch_id = c.batch_id 
            AND a.ledger_name IS NOT NULL
            --AND c.status = 'TRANSFORM_SUCCESS'
            AND c.group_id = p_grp_id
            AND c.batch_id=lsic.batch_id
            AND 1=CASE
                  WHEN lsic.Record_Type='AP-AR' AND lsic.INV_PAY_STATUS in ('SUCCESS','WARNING') AND lsic.RECEIPT_STATUS in ('SUCCESS','WARNING') AND lsic.NETTING_STATUS in ('SUCCESS','PARTIAL SUCCESS') AND (lsic.to_be_Processed ='Y' or lsic.to_be_reprocessed = 'Y') THEN
                    1
                  WHEN lsic.Record_Type='GL' AND  lsic.NETTING_STATUS in ('SUCCESS','PARTIAL SUCCESS') AND (lsic.to_be_Processed ='Y' or lsic.to_be_reprocessed = 'Y') THEN 
                   1
                  ELSE
                   0  END
            AND EXISTS (
                SELECT
                    1
                FROM
                    wsc_ahcs_int_status_t s
                WHERE
                        s.batch_id = a.batch_id
                    AND s.header_id = a.header_id
                    AND s.attribute2 = 'TRANSFORM_SUCCESS'
                    AND ( s.accounting_status = 'IMP_ACC_ERROR'
                          OR s.accounting_status IS NULL )
            );

       TYPE lsin_grp_type IS
            TABLE OF lsin_grp_data_fetch_cur%rowtype;
        lv_lsin_grp_type lsin_grp_type;
    BEGIN
-- Updating Group Id for MF AP Files in control table----

       UPDATE wsc_ahcs_int_control_t a
        SET
            group_id = lv_grp_id
        WHERE
              source_application = 'Oracle LSI'
           -- AND status = 'TRANSFORM_SUCCESS'
            AND group_id IS NULL
            AND EXISTS (SELECT 1 FROM 
                        WSC_AHCS_LSI_CONTROL_T lsic,
                        wsc_ahcs_lsi_netting_entry_headers_t b,
                        wsc_ahcs_int_status_t s
                        WHERE lsic.batch_id=a.batch_id
                        AND lsic.batch_id=b.batch_id
						AND b.ledger_name IS NOT NULL
						AND s.batch_id = b.batch_id
						AND s.header_id = b.header_id
						AND s.attribute2 = 'TRANSFORM_SUCCESS'
						AND ( s.accounting_status = 'IMP_ACC_ERROR'
                          OR s.accounting_status IS NULL )
                        AND 1=CASE
                  WHEN lsic.Record_Type='AP-AR' AND INV_PAY_STATUS in ('SUCCESS','WARNING') AND RECEIPT_STATUS in ('SUCCESS','WARNING') AND NETTING_STATUS in ('SUCCESS', 'PARTIAL SUCCESS') AND (lsic.to_be_Processed ='Y' or lsic.to_be_reprocessed = 'Y') THEN
                    1
                  WHEN lsic.Record_Type='GL' AND  NETTING_STATUS in ('SUCCESS', 'PARTIAL SUCCESS') AND (lsic.to_be_Processed ='Y' or lsic.to_be_reprocessed = 'Y') THEN 
                   1
                  ELSE
                   0  END);

       COMMIT;
        OPEN lsin_grp_data_fetch_cur(lv_grp_id);
        LOOP
            FETCH lsin_grp_data_fetch_cur
            BULK COLLECT INTO lv_lsin_grp_type LIMIT 50;
            EXIT WHEN lv_lsin_grp_type.count = 0;
            FORALL i IN 1..lv_lsin_grp_type.count
                INSERT INTO wsc_ahcs_int_control_line_t (
                    batch_id,
                    file_name,
                    group_id,
                    ledger_name,
                    source_system,
                    interface_id,
                    status,
                    created_by,
                    creation_date,
                    last_updated_by,
                    last_update_date
                ) VALUES (
                    lv_lsin_grp_type(i).batch_id,
                    lv_lsin_grp_type(i).file_name,
                    lv_grp_id,
                    lv_lsin_grp_type(i).ledger_name,
                    lv_lsin_grp_type(i).source_application,
                    lv_lsin_grp_type(i).source_system,
                    lv_lsin_grp_type(i).status,
                    'FIN_INT',
                    sysdate,
                    'FIN_INT',
                    sysdate
                );



       END LOOP;

       COMMIT;
       UPDATE wsc_ahcs_int_status_t
        SET
            group_id = lv_grp_id
        WHERE
            batch_id IN (
                SELECT DISTINCT
                    batch_id
                FROM
                    wsc_ahcs_int_control_line_t
                WHERE
                    group_id = lv_grp_id
            )
            AND attribute2 = 'TRANSFORM_SUCCESS'
            AND ( accounting_status = 'IMP_ACC_ERROR'
                  OR accounting_status IS NULL );

       COMMIT;

      Update WSC_AHCS_LSI_CONTROL_T A SET
         TO_BE_PROCESSED= 'N',
         TO_BE_REPROCESSED='N'
         WHERE EXISTS ( Select 1 FROM WSC_AHCS_INT_CONTROL_T
                        WHERE BATCH_ID=A.BATCH_ID
                        AND GROUP_ID=lv_grp_id);
         Commit;   

    END wsc_ahcs_lsin_grp_id_upd_p;  

    PROCEDURE wsc_ahcs_lsi_ctrl_line_tbl_led_num_upd (
        p_group_id       IN VARCHAR2,
        p_ledger_grp_num IN VARCHAR2
    ) AS
    BEGIN
        IF ( p_ledger_grp_num = 999 ) THEN
            dbms_output.put_line(p_ledger_grp_num || 'inside IF');
            UPDATE wsc_ahcs_int_control_line_t status
            SET
                status.ledger_grp_num = 999,
                last_update_date = sysdate
            WHERE
                    status.group_id = p_group_id
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        wsc_ahcs_int_mf_ledger_t ml
                    WHERE
                            999 = p_ledger_grp_num
                        AND ml.sub_ledger = 'Oracle LSI'
                        AND ml.ledger_name = status.ledger_name
                );

            COMMIT;
        ELSE
            dbms_output.put_line(p_ledger_grp_num || ' inside  else ');
            UPDATE wsc_ahcs_int_control_line_t status
            SET
                status.ledger_grp_num = p_ledger_grp_num,
                last_update_date = sysdate
            WHERE
                    status.group_id = p_group_id
                AND ( ledger_name IN (
                    SELECT
                        ledger_name
                    FROM
                        wsc_ahcs_int_mf_ledger_t ml
                    WHERE
                            ml.ledger_grp_num = p_ledger_grp_num
                        AND ml.sub_ledger = 'Oracle LSI'
                        AND ml.ledger_name = status.ledger_name
                ) );

            COMMIT;
        END IF;
    END wsc_ahcs_lsi_ctrl_line_tbl_led_num_upd;

    PROCEDURE wsc_ahcs_lsi_ctrl_line_ucm_id_upd (
        p_ucmdoc_id      IN VARCHAR2,
        p_group_id       IN VARCHAR2,
        p_ledger_grp_num IN VARCHAR2
    ) AS
    BEGIN
        IF ( p_ledger_grp_num = 999 ) THEN
            dbms_output.put_line(p_ledger_grp_num || 'inside IF');
            UPDATE wsc_ahcs_int_control_line_t status
            SET
                status.ucm_id = p_ucmdoc_id,
                status.status = 'UCM_UPLOADED',
                last_update_date = sysdate
            WHERE
                    status.group_id = p_group_id
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        wsc_ahcs_int_mf_ledger_t ml
                    WHERE
                            999 = p_ledger_grp_num
                        AND ml.sub_ledger = 'Oracle LSI'
                        AND ml.ledger_name = status.ledger_name
                );

            COMMIT;
        ELSE
            dbms_output.put_line(p_ledger_grp_num || ' inside  else ');
            UPDATE wsc_ahcs_int_control_line_t status
            SET
                status.ucm_id = p_ucmdoc_id,
                status.status = 'UCM_UPLOADED',
                last_update_date = sysdate
            WHERE
                    status.group_id = p_group_id
                AND ( ledger_name IN (
                    SELECT
                        ledger_name
                    FROM
                        wsc_ahcs_int_mf_ledger_t ml
                    WHERE
                            ml.ledger_grp_num = p_ledger_grp_num
                        AND ml.sub_ledger = 'Oracle LSI'
                        AND ml.ledger_name = status.ledger_name
                ) );

            COMMIT;
        END IF;
    END wsc_ahcs_lsi_ctrl_line_ucm_id_upd;

    PROCEDURE wsc_ahcs_lsi_update_imp_status(p_group_id number) IS 
   LV_TOTAL_COUNT NUMBER:=0;
   LV_SUCCESS_COUNT NUMBER:=0;
   LV_ERROR_COUNT NUMBER:=0;
   BEGIN

   Select Count(*),Count(Case When STATUS='IMP_ACC_SUCCESS' then 1 else null end),Count(Case When STATUS='IMP_ACC_ERROR' then 1 else null end)
   INTO LV_TOTAL_COUNT,LV_SUCCESS_COUNT,LV_ERROR_COUNT
   FROM WSC_AHCS_INT_CONTROL_LINE_T
   WHERE GROUP_ID=p_group_id;


        Update WSC_AHCS_LSI_CONTROL_T A SET
         STATUS= Case 
                    WHEN  LV_TOTAL_COUNT=LV_SUCCESS_COUNT THEN 'IMP_ACC_SUCCESS'
                    WHEN  LV_TOTAL_COUNT=LV_ERROR_COUNT THEN 'IMP_ACC_ERROR'
                    ELSE 'IN PROGRESS' END
         WHERE EXISTS ( Select 1 FROM WSC_AHCS_INT_CONTROL_T
                        WHERE BATCH_ID=A.BATCH_ID
                        AND GROUP_ID=p_group_id);

         Commit;

 END wsc_ahcs_lsi_update_imp_status;                

 END WSC_LSI_PKG;
/