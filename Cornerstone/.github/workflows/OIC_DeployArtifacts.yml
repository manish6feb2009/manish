name: OIC_DeployArtifacts
on:
  workflow_dispatch:
    branches: [ main ]
    inputs:
      filepaths:
        description: 'GIT FULL FILEPATH seprated by , for multiple'
        required: true
        type: string
        default: 'NON'
        
  workflow_call:
    inputs:
      filepaths:
        description: 'GIT FULL FILEPATH seprated by , for multiple'
        required: true
        type: string
        default: 'NON'

jobs:
  Process_and_Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Shell Dependencies
        run: |
          echo -e "ⓘ\t Installing JQ - JSON Shell Parser....."
          sudo apt-get install jq
          echo -e "✓\t Installed JQ - JSON Shell Parser....."
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - if: ${{ github.event.workflow == '.github/workflows/OIC_DeployArtifacts.yml'}} 
        uses: actions/checkout@v2
      
      # Runs a set of commands for deploying OIC Integration
      - name: Deploy OIC Artifacts
        run: |
          echo '----------------'
          #✓✖
          #Intialize global variable and files
          filetype=''
          iar_id=''
          #PUT=existing Post=New
          import_put_post='PUT'
          
          #username, password, url and other details for OIC server
          user='abchakraborty@deloitte.com'
          pass='WescoAnixter@123456789012345678'
          base_url='https://aicdev-anixterpaas.integration.ocp.oraclecloud.com'
          iar_check_url='/ic/api/integration/v1/integrations/'
          iar_deac_act_url='/ic/api/integration/v1/integrations/'
          iar_import_url='/ic/api/integration/v1/integrations/archive'
          par_check_url='/ic/api/integration/v1/packages/'
          par_import_url='/ic/api/integration/v1/packages/archive'
          
          #FUNCTIONS
          
          generating_iar_id(){
              ex_fn=`echo $1 | awk -F "/" '{print $NF}'`  
              pos=`echo $ex_fn | awk -F "_" '{print length($0)-length($NF)}'`
              iar_id=`echo $ex_fn | awk -v pos=$pos -v repl=$2 '{print substr($0,1,pos-1) repl substr($0,pos+1)}' | sed -e 's/'.iar'/''/g'`
          }
          
          de_activate_iar(){
              if [[ $1 == 'ACTIVATE' ]] 
              then
                  payload='{"status":"ACTIVATED"}'
                  o_de_act=`curl -s -u ${user}:${pass} -X POST -H "Content-Type:application/json" -H "X-HTTP-Method-Override:PATCH" -d $payload $base_url$iar_deac_act_url$2`
                  if [[ `echo $o_de_act | jq -r .status` != 'ACTIVATED' ]]
                  then
                      echo -e "\t✖\tSomething went wrong while activating the integration. Contact Admin."
                      exit 2;
                  fi
                  
              else
                  payload='{"status":"CONFIGURED"}'
                  o_de_act=`curl -s -u ${user}:${pass} -X POST -H "Content-Type:application/json" -H "X-HTTP-Method-Override:PATCH" -d $payload $base_url$iar_deac_act_url$2`
                  if [[ `echo $o_de_act | jq -r .status` != 'CONFIGURED' ]]
                  then
                      echo -e "\t✖\tSomething went wrong while de-activating the integration. Contact Admin."
                      exit 2;
                  fi
              fi              
              #-d 'enableAsyncActivationMode=true'
          }
          
          
          
          #Intialize variable values
          if [ ${{ github.event.workflow }} = '.github/workflows/OIC_DeployArtifacts.yml' ] 
          then 
            V_FILEPATHS=${{ github.event.inputs.filepaths }}
          else
            V_FILEPATHS=${{ inputs.filepaths }}
          fi
          
          echo "Recieved Filepath: $V_FILEPATHS"
          
          echo "Iterating over filepaths and processing for deployment...."
          for filepath in ${V_FILEPATHS//,/ }
          do
            echo -e "\tProcessing file: $filepath\n"
            
            #checks if file is a package or integration..
            if [[ $filepath == *.par ]] 
            then
              filetype='PAR'
              echo -e "\tⓘ\tFileType: PACKAGE ARCHIVE"
              #checking the status of the package
              pkg_name=`echo $filepath |awk -F "/" '{print $NF}' | sed -e 's/'.par'/''/g'`
              o_par_status=`curl -s -u ${user}:${pass} -H "Accept: application/json" $base_url$par_check_url$pkg_name`
              if [[ `echo $o_par_status | jq -r .status`  == 'HTTP 404 Not Found' ]]
              then
                  echo -e "\tⓘ\tPackage Not found. Deploying....."
                  import_put_post='POST'
              else
                  echo -e "\tⓘ\t$filepath: Package found"
                  iar_count=`echo $o_par_status | jq -r .countOfIntegrations`
                  echo -e "\tⓘ\tIntegration Count: $iar_count"
                  for((j=0;j<$iar_count;j++))
                  do
                      iar_this_status=`echo $o_par_status | jq -r .integrations[$j].status`
                      echo -e "\tⓘ\t`echo $o_par_status | jq -r .integrations[$j].name` : $iar_this_status"
                      #Deactivate the Integration if activated
                      if [[ $iar_this_status == 'ACTIVATED' ]]
                      then
                          de_activate_iar "DE-ACTIVATE" `echo $o_par_status | jq -r .integrations[$j].id | sed -e 's/|/%7C/g'`
                          echo -e "\t✓\t`echo $o_par_status | jq -r .integrations[$j].name`: DE-ACTIVATED"
                      fi
                  done  
              fi
              echo -e "\tⓘ\tDeploying Package....."
              curl -s -X $import_put_post -u ${user}:${pass} -H "Accept:application/json" -F "file=@${filepath};type=application/octet-stream" $base_url$par_import_url
              echo -e "\t✓\t$filepath: DEPLOYED"
            else
              filetype='IAR'
              echo -e "\tⓘ\tFileType: INTERGARTION ARCHIVE"
              #checking the status of the integration and generating ID of integration
              ##Generating ID 
              generating_iar_id $filepath "%7C"
              ##Invoking Rest API for integration status checking
              o_iar_status=`curl -s -u ${user}:${pass} -H "Accept: application/json" $base_url$iar_check_url$iar_id`
              ###If status is ACTIVATED
              if [[ `echo $o_iar_status | jq -r .status` == 'ACTIVATED' ]]
              then
                  echo -e "\tⓘ\tIntegration Status: ACTIVATED"
                  echo -e "\tⓘ\tDeactivating the integration....."
                  #Deactivate the IAR Integration
                  de_activate_iar "DE-ACTIVATE" $iar_id
                  echo -e "\t✓\t$filepath: DE-ACTIVATED"
              elif [[ `echo $o_iar_status | jq -r .status` == 'HTTP 404 Not Found' ]]
              then
                  echo -e "\tⓘ\tIntegration Not found. Deploying....."
                  import_put_post='POST'
              else
                  echo -e "\tⓘ\tIntegration Status: CONFIGURED"
              fi
              #Deploying Integration
              echo -e "\tⓘ\tDeploying Integration....."
              curl -s -X $import_put_post -u ${user}:${pass} -H "Accept:application/json" -F "file=@${filepath};type=application/octet-stream" $base_url$iar_import_url
              echo -e "\t✓\t$filepath: DEPLOYED"
              echo -e "\tⓘ\tActivating Integration....."
              #Activate the IAR Integration
              de_activate_iar "ACTIVATE" $iar_id
              echo -e "\t✓\t$filepath: ACTIVATED"    
            fi
            echo -e "\n\n"
          done
          echo '----------------'
        env:
          V_FILEPATHS: ''